[{"F:\\frontend\\dynamic_forms\\src\\index.js":"1","F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js":"2","F:\\frontend\\dynamic_forms\\src\\App.js":"3","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx":"4","F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js":"5","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx":"6","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx":"7","F:\\frontend\\dynamic_forms\\src\\store.js":"8","F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js":"9","F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx":"10","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js":"11","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js":"12","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js":"13","F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx":"14","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js":"15","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js":"16","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js":"17","F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx":"18","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js":"19","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js":"20","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js":"21","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx":"22","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js":"23","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx":"24","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx":"25"},{"size":517,"mtime":1610374072713,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1610374072713,"results":"28","hashOfConfig":"27"},{"size":324,"mtime":1610625346002,"results":"29","hashOfConfig":"27"},{"size":2027,"mtime":1610902938657,"results":"30","hashOfConfig":"27"},{"size":279,"mtime":1610374072713,"results":"31","hashOfConfig":"27"},{"size":2100,"mtime":1610986438739,"results":"32","hashOfConfig":"27"},{"size":1455,"mtime":1610820402836,"results":"33","hashOfConfig":"27"},{"size":446,"mtime":1610987205069,"results":"34","hashOfConfig":"27"},{"size":546,"mtime":1611157226144,"results":"35","hashOfConfig":"27"},{"size":3722,"mtime":1610975327986,"results":"36","hashOfConfig":"27"},{"size":925,"mtime":1610717576710,"results":"37","hashOfConfig":"27"},{"size":1357,"mtime":1610975531674,"results":"38","hashOfConfig":"27"},{"size":151,"mtime":1610627074096,"results":"39","hashOfConfig":"27"},{"size":148,"mtime":1610696885268,"results":"40","hashOfConfig":"27"},{"size":1644,"mtime":1610986388239,"results":"41","hashOfConfig":"27"},{"size":133,"mtime":1610625756059,"results":"42","hashOfConfig":"27"},{"size":994,"mtime":1610788583346,"results":"43","hashOfConfig":"27"},{"size":3250,"mtime":1611158133685,"results":"44","hashOfConfig":"27"},{"size":652,"mtime":1610787746701,"results":"45","hashOfConfig":"27"},{"size":1508,"mtime":1610985909528,"results":"46","hashOfConfig":"27"},{"size":329,"mtime":1611156217890,"results":"47","hashOfConfig":"27"},{"size":2407,"mtime":1610899584920,"results":"48","hashOfConfig":"27"},{"size":2454,"mtime":1611156906414,"results":"49","hashOfConfig":"27"},{"size":2514,"mtime":1610904803294,"results":"50","hashOfConfig":"27"},{"size":3105,"mtime":1610986117013,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"m3no2f",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},"F:\\frontend\\dynamic_forms\\src\\index.js",[],["109","110"],"F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js",[],"F:\\frontend\\dynamic_forms\\src\\App.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx",["111"],"import React from 'react'\r\nimport MobileMenu from './Mobilemenu'\r\n\r\nimport {Media,MediaContextProvider,mediaStyles } from '../../gloabalsMediaProvider'\r\nimport MenuComponent from './Menu'\r\nimport { Redirect, Switch, Route,BrowserRouter as Router} from 'react-router-dom';\r\nimport Register from '../RegComponent/Register'\r\nimport Login from '../Logincomponent/Login';\r\nimport Password from '../Forgetpassword/Password';\r\nimport Passwordreset from '../Forgetpassword/PasswordReset/Passwordreset';\r\n\r\n\r\n\r\n function TopBar() {\r\n    \r\n    \r\n\r\n    return (\r\n        <div> \r\n          <style>{mediaStyles}</style>\r\n          <MediaContextProvider>\r\n                <Router>\r\n                   <Media   greaterThan=\"mobile\">\r\n                      <MenuComponent/>\r\n                  </Media>\r\n                     \r\n                  <Media  at=\"mobile\"  >\r\n                      <MobileMenu/>\r\n                  </Media>\r\n                  <Switch>\r\n                      <Route path=\"/createdForm\"></Route>\r\n                       <Route path=\"/RespondedForm\"></Route>\r\n                       <Route path=\"/userSettings\"></Route>\r\n                       <Route path=\"/ForgotPassword\"><Password/></Route>\r\n                       <Route path=\"/Login\"><Login/></Route>\r\n                       <Route path=\"/Logout\"></Route>\r\n                       <Route path=\"/Register\"><Register/></Route> \r\n                       <Route path=\"/passwordReset:token_valid?/:message?/:uid64?/:token?\"><Passwordreset/></Route>\r\n                       <Route path=\"/Logout\"></Route>\r\n                       \r\n                      {/* http://localhost:3000/passwordReset/?token_valid=True&message=CredentialsValid&uidb64=OTMyMWM0NzQtYzljYS00NWRkLTg5NDktZDRhMjMyYzMyYTQ5&token=agn1y6-cbd8f11796120c3eddeb1b593bf5d08c*/}\r\n                       \r\n\r\n                      \r\n                      \r\n                  </Switch>\r\n                  </Router>\r\n \r\n         </MediaContextProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TopBar;\r\n\r\n\r\n\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx",[],"F:\\frontend\\dynamic_forms\\src\\store.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js",[],["112","113"],"F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx",["114","115"],"import React,{useEffect} from 'react'\r\nimport { Button,Form, Grid, Header, Label, Loader, Message, Segment,Dimmer,Image } from 'semantic-ui-react'\r\nimport { useForm,Controller } from \"react-hook-form\";\r\nimport { useSelector,useDispatch} from 'react-redux';\r\nimport {   useHistory } from 'react-router-dom';\r\nimport { LoginApiCall } from '../Redux/Login/action';\r\n\r\n\r\nfunction Login(props) {\r\n  //form\r\n  const {register,errors,handleSubmit,trigger,setValue,control}=useForm();\r\n\r\n  useEffect(() => {\r\n     \r\n      register({ name: \"password\" }, { required: {value:true,message:\"Please Fill\"}});\r\n      register({name:\"email\"},{required:{value:true,message:\"PleaseFill\"},pattern:  {value:/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,message:\"Invalid E-mail Id\"}})\r\n  }, );\r\n \r\n  const valid=async (e, { name, value }) => {\r\n    setValue(name, value);\r\n    await trigger({ name });\r\n  }\r\n  const submitTo=(data)=>{\r\n    dispatch(LoginApiCall(data))\r\n  }\r\n\r\n  //redirect\r\n  var history=useHistory();\r\n  const onClickSignIn=()=>{\r\n    history.push(\"/Register\")\r\n  }  \r\n  const onClickForgot=()=>{\r\n    history.push(\"/ForgotPassword\")\r\n  }\r\n  //redux\r\n  const sdata=useSelector(state=>state.login)\r\n  const dispatch = useDispatch()\r\n  if(sdata.islogin===true){\r\n    history.push(\"/Home\")\r\n  }\r\n  \r\n  //style\r\n  const TransStyle={\r\n      border:\"none\",\r\n      borderRadius: \"5px\",\r\n      background: \"rgba(255, 255, 255,0)\",\r\n      color:\"teal\",\r\n      cursor: \"pointer\"\r\n  }\r\n \r\n\r\n   \r\n    return (\r\n      <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\r\n      <Grid.Column style={{ maxWidth: 450 }} >\r\n        <Header as='h2' textAlign='center'>\r\n          Sign-in to your account\r\n        </Header>\r\n        <Form size='large' onSubmit={handleSubmit(submitTo)}>\r\n        <Segment stacked>\r\n        \r\n          <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"email\" fluid icon='mail' iconPosition='left'  placeholder='email' onChange={valid} error={errors.email ? true :false}/>\r\n          {errors.email && <Label pointing=\"above\" color=\"red\">{errors.email.message}</Label>}\r\n          <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"password\" fluid icon='lock' iconPosition='left'    placeholder='Password' type='password' onChange={valid} error={errors.password ? true :false} />\r\n          {errors.password && <Label pointing=\"above\" color=\"red\">{errors.password.message}</Label>}\r\n          <Button color='blue' fluid size='large'>\r\n            LogIn\r\n          </Button>\r\n          <button  style={TransStyle} color=\"white\" onClick={()=>onClickForgot()}>ForgotPassword</button><br/>\r\n         Not an User <button   style={TransStyle}  color=\"blue\" onClick={()=>onClickSignIn()}>Sign Up</button>\r\n        </Segment>\r\n      </Form>\r\n        \r\n    <Segment>\r\n      {console.log(sdata.laoding)}\r\n        {sdata.laoding===true ?(<Dimmer active>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>):( sdata.message)}\r\n    </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n    )\r\n}\r\n/*const mapStateToProps=state=>{\r\n  return{\r\n    laod:state.loading\r\n  }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    disp:()=>dispatch(RegisterApiCall())\r\n  }\r\n}*/\r\n\r\n\r\nexport default  Login;","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js",["116"],"import { lazy } from \"react\"\r\nimport { PASSWORD_REQ_FAILURE, PASSWORD_REQ_SUCCESS,PASSWORD_REQUEST, PASSWORD_RESET_REQUEST, PASSWORD_RESET_SUCCESS, PASSWORD_RESET_FAILURE } from \"./types\"\r\n\r\nconst initState={\r\n    loading:false,\r\n    success:null,\r\n    message:\"\",\r\n\r\n}\r\n\r\nexport const PasswordChangeReducer=(state=initState,action)=>{\r\n    switch(action.type){\r\n        case PASSWORD_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true,\r\n            }\r\n        case PASSWORD_REQ_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                success:true,\r\n                message:action.payload\r\n            }\r\n        case PASSWORD_REQ_FAILURE:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                success:false,\r\n                message:action.payload\r\n            }\r\n        case PASSWORD_RESET_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true,\r\n                \r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading:true,\r\n                success:true,\r\n                message:action.payload\r\n            }\r\n        case PASSWORD_RESET_FAILURE:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                success:true,\r\n                message:action.payload\r\n            }\r\n\r\n        \r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js",["117","118"],"import Axios from \"../../axiosConfig\";\r\nimport { PASSWORD_REQUEST, PASSWORD_REQ_FAILURE, PASSWORD_REQ_SUCCESS, PASSWORD_RESET_FAILURE, PASSWORD_RESET_REQUEST, PASSWORD_RESET_SUCCESS } from \"./types\"\r\n\r\n\r\nconst passwordChangeRequest=()=>{\r\n     return{\r\n         type:PASSWORD_REQUEST         \r\n}\r\n}\r\n\r\nconst passwordChangeReqSuccces=(data)=>{\r\n    return{\r\n        type:PASSWORD_REQ_SUCCESS,\r\n        payload:data\r\n    }\r\n}\r\n\r\nconst passwordChangeReqFaiure=(error)=>{\r\n    return{\r\n        type:PASSWORD_REQ_FAILURE,\r\n        payload:error\r\n    }\r\n}\r\n\r\nconst  passwordResetRquest=()=>{\r\n    return{\r\n        type:PASSWORD_RESET_REQUEST         \r\n       }\r\n}\r\n\r\nconst passwordResetSuccess=(data)=>{\r\n    return{\r\n        type:PASSWORD_RESET_SUCCESS,\r\n        payload:data\r\n    }\r\n}\r\n\r\nconst passwordResetFailure=(error)=>{\r\n    return{\r\n        type:PASSWORD_RESET_FAILURE,\r\n        payload:error\r\n    }\r\n}\r\n\r\nexport const PasswordRequestAPI=(data)=>{\r\n    return (dispatch)=>{\r\n        dispatch(passwordChangeRequest())\r\n        Axios().post(\"/authentication/RequestPasswordChange\",data)\r\n               .then(response=>{\r\n                   if(response.data[\"success\"]===true){\r\n                   dispatch(passwordChangeReqSuccces(\"check your email for verification\"))\r\n                }\r\n                else{\r\n                    dispatch(passwordChangeReqSuccces(\"something went wrong\"))\r\n                }\r\n               })\r\n               .catch(error=>{\r\n                try {\r\n                   \r\n                    if(error.response.data!=null){\r\n                        dispatch(passwordChangeReqFaiure(error.response.data[\"detail\"]))\r\n                    }\r\n                }\r\n                catch(e){\r\n                    dispatch(passwordChangeReqFaiure(\"try again later\"))\r\n                }\r\n                  \r\n               })\r\n    }\r\n}\r\n\r\nexport const PasswordResetAPI=(data)=>{\r\n    return (dispatch)=>{\r\n        dispatch(passwordResetRquest())\r\n        Axios().patch(\"authentication/SetNewPassword\",data).then( respsone=>{\r\n           \r\n           if(respsone.data[\"success\"]===true){\r\n               dispatch(passwordResetSuccess(\"password reset Successfully\"))\r\n           }\r\n      }\r\n    ).catch(error=>{\r\n        if(error.response.status!=404)\r\n          dispatch(passwordResetSuccess(\"password reset Successfully\"))\r\n        else\r\n         dispatch(passwordResetSuccess(\"Try again later\"))\r\n    \r\n    })\r\n  }\r\n        \r\n\r\n}","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx",["119","120","121"],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx",["122","123","124","125","126"],"\r\nimport React,{useEffect, useState} from 'react'\r\nimport { Button,Form, Grid, Header, Label, Message, Segment,Loader } from 'semantic-ui-react'\r\nimport { useForm,Controller } from \"react-hook-form\";\r\nimport { useSelector,useDispatch} from 'react-redux';\r\nimport Axios from '../../axiosConfig';\r\nimport { PasswordResetAPI } from '../../Redux/passwordChange/actions';\r\n\r\n\r\n\r\nfunction Passwordreset(props) {\r\n    const {register,errors,handleSubmit,trigger,setValue,control}=useForm()\r\n   \r\n    \r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const valid_cred = urlParams.get('token_valid','');\r\n    const message=urlParams.get('message',\"\")\r\n    const uid64=urlParams.get(\"uidb64\",\"\")\r\n    const token=urlParams.get(\"token\",\"\")\r\n    //http://localhost:3000/passwordReset?token_valid=True&message=CredentialsValid&uidb64=NzhkZTg1YTQtMzBkYy00NTNiLTk4ZGItOGJmZmI5MzJhMTYz&token=agorxd-e8dad31e03a17dbdd0b82efa3f86bb2c\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n        register({name:\"password\"},{required:{value:true,message:\"PleaseFill\"},minLength:{value:6,message:\"Must be 6 Character length\"}})\r\n        register({name:\"confrimpassword\"},{required:{value:true,message:\"PleaseFill\"},minLength:{value:6,message:\"Must be 6 Character length\"}})\r\n    }, );\r\n  \r\n   \r\n    const valid=async (e, { name, value }) => {\r\n      setValue(name, value);\r\n      await trigger({ name });\r\n    }\r\n   \r\n     \r\n      \r\n  \r\n    //redirect\r\n\r\n    //redux\r\n    const sdata=useSelector(state=>state.changepassword)\r\n    const dispatch=useDispatch()\r\n\r\n    const submitTo=(data)=>{\r\n      data[\"token\"]=token\r\n      data[\"uid\"]=uid64\r\n      delete data['confrimpassword'];\r\n      dispatch(PasswordResetAPI(data))\r\n    }\r\n    \r\n\r\n  \r\n\r\n    \r\n\r\n  \r\n     \r\n      return (\r\n        <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 450 }} >\r\n          <Header as='h2' textAlign='center'>\r\n           Password Reset\r\n          </Header>\r\n          <Form size='large' onSubmit={handleSubmit(submitTo)}>\r\n          <Segment stacked>\r\n            <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"password\" fluid icon='lock' iconPosition='left'    placeholder='Password' type='password' onChange={valid} error={errors.password ? true :false} />\r\n            {errors.password && <Label pointing=\"above\" color=\"red\">{errors.password.message}</Label>}\r\n            <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"confrimpassword\" fluid icon='lock' iconPosition='left'    placeholder='ConfrimPassword' type='password' onChange={valid} error={errors.password ? true :false} />\r\n            {errors.confrimpassword && <Label pointing=\"above\" color=\"red\">{errors.confrimpassword.message}</Label>}\r\n            <Button color='blue' fluid size='large'>\r\n              set Password\r\n            </Button>\r\n            \r\n          </Segment>\r\n        </Form>\r\n          <Message>\r\n            {sdata.message}\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n      )\r\n      }\r\n\r\nexport default Passwordreset\r\n",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":6,"column":10,"nodeType":"133","messageId":"134","endLine":6,"endColumn":18},{"ruleId":"127","replacedBy":"135"},{"ruleId":"129","replacedBy":"136"},{"ruleId":"131","severity":1,"message":"137","line":2,"column":52,"nodeType":"133","messageId":"134","endLine":2,"endColumn":59},{"ruleId":"131","severity":1,"message":"138","line":2,"column":76,"nodeType":"133","messageId":"134","endLine":2,"endColumn":81},{"ruleId":"131","severity":1,"message":"139","line":1,"column":10,"nodeType":"133","messageId":"134","endLine":1,"endColumn":14},{"ruleId":"131","severity":1,"message":"140","line":38,"column":7,"nodeType":"133","messageId":"134","endLine":38,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":82,"column":33,"nodeType":"143","messageId":"144","endLine":82,"endColumn":35},{"ruleId":"131","severity":1,"message":"145","line":3,"column":61,"nodeType":"133","messageId":"134","endLine":3,"endColumn":67},{"ruleId":"131","severity":1,"message":"146","line":25,"column":11,"nodeType":"133","messageId":"134","endLine":25,"endColumn":16},{"ruleId":"131","severity":1,"message":"147","line":26,"column":11,"nodeType":"133","messageId":"134","endLine":26,"endColumn":19},{"ruleId":"131","severity":1,"message":"148","line":2,"column":26,"nodeType":"133","messageId":"134","endLine":2,"endColumn":34},{"ruleId":"131","severity":1,"message":"145","line":3,"column":61,"nodeType":"133","messageId":"134","endLine":3,"endColumn":67},{"ruleId":"131","severity":1,"message":"149","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":13},{"ruleId":"131","severity":1,"message":"150","line":16,"column":11,"nodeType":"133","messageId":"134","endLine":16,"endColumn":21},{"ruleId":"131","severity":1,"message":"151","line":17,"column":11,"nodeType":"133","messageId":"134","endLine":17,"endColumn":18},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["152"],["153"],"'Message' is defined but never used.","'Image' is defined but never used.","'lazy' is defined but never used.","'passwordResetFailure' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Loader' is defined but never used.","'sdata' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'valid_cred' is assigned a value but never used.","'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]