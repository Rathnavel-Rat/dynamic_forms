[{"F:\\frontend\\dynamic_forms\\src\\index.js":"1","F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js":"2","F:\\frontend\\dynamic_forms\\src\\App.js":"3","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx":"4","F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js":"5","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx":"6","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx":"7","F:\\frontend\\dynamic_forms\\src\\store.js":"8","F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js":"9","F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx":"10","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js":"11","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js":"12","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js":"13","F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx":"14","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js":"15","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js":"16","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js":"17","F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx":"18","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js":"19","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js":"20","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js":"21","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx":"22","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js":"23","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx":"24","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx":"25","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Home.jsx":"26","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Toolbox.jsx":"27","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ListInput.js":"28","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ItemDrops.jsx":"29","F:\\frontend\\dynamic_forms\\src\\Components\\PresistedReducers\\PresistedReducers.js":"30","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Fields_pb.js":"31","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\reducers.js":"32","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\type.js":"33","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\action.js":"34","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\actions.jsx":"35","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\RenderFields.jsx":"36","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ConnectForm.js":"37","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\EditsFields.jsx":"38","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\MemoEditFields.jsx":"39","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ExceptionList.js":"40","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\reducers.js":"41","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\type.js":"42","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\actions.js":"43","F:\\frontend\\dynamic_forms\\src\\Components\\ModalReducer\\ModalReducer.js":"44","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\utils.jsx":"45","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\currentForm\\currentForm.jsx":"46","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\createdForm.js":"47","F:\\frontend\\dynamic_forms\\src\\Components\\RespondToForm\\RespondToForm.jsx":"48","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\action.js":"49","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\reducer.js":"50","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\type.js":"51","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Pager.jsx":"52","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\RespondToForm\\reducers.js":"53","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\RespondToForm\\type.js":"54","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\RespondToForm\\actions.js":"55","F:\\frontend\\dynamic_forms\\src\\Components\\FromResponses\\FormResponses.jsx":"56","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\GetFormReponses\\reducers.js":"57","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\GetFormReponses\\actions.js":"58","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\GetFormReponses\\type.js":"59"},{"size":517,"mtime":1610374072713,"results":"60","hashOfConfig":"61"},{"size":375,"mtime":1610374072713,"results":"62","hashOfConfig":"61"},{"size":503,"mtime":1616777740293,"results":"63","hashOfConfig":"61"},{"size":2914,"mtime":1616817951162,"results":"64","hashOfConfig":"61"},{"size":279,"mtime":1610374072713,"results":"65","hashOfConfig":"61"},{"size":2308,"mtime":1616479551140,"results":"66","hashOfConfig":"61"},{"size":1457,"mtime":1615213741876,"results":"67","hashOfConfig":"61"},{"size":470,"mtime":1611851471097,"results":"68","hashOfConfig":"61"},{"size":1175,"mtime":1616819368615,"results":"69","hashOfConfig":"61"},{"size":3756,"mtime":1612113767764,"results":"70","hashOfConfig":"61"},{"size":925,"mtime":1610717576710,"results":"71","hashOfConfig":"61"},{"size":1357,"mtime":1610975531674,"results":"72","hashOfConfig":"61"},{"size":151,"mtime":1610627074096,"results":"73","hashOfConfig":"61"},{"size":179,"mtime":1612027919385,"results":"74","hashOfConfig":"61"},{"size":1452,"mtime":1614517977853,"results":"75","hashOfConfig":"61"},{"size":135,"mtime":1612089735144,"results":"76","hashOfConfig":"61"},{"size":960,"mtime":1612089736957,"results":"77","hashOfConfig":"61"},{"size":3232,"mtime":1616479738959,"results":"78","hashOfConfig":"61"},{"size":1128,"mtime":1616818812290,"results":"79","hashOfConfig":"61"},{"size":1480,"mtime":1611497098970,"results":"80","hashOfConfig":"61"},{"size":329,"mtime":1611156217890,"results":"81","hashOfConfig":"61"},{"size":2407,"mtime":1610899584920,"results":"82","hashOfConfig":"61"},{"size":2436,"mtime":1616479902798,"results":"83","hashOfConfig":"61"},{"size":2514,"mtime":1610904803294,"results":"84","hashOfConfig":"61"},{"size":2944,"mtime":1616479772916,"results":"85","hashOfConfig":"61"},{"size":3979,"mtime":1616680315724,"results":"86","hashOfConfig":"61"},{"size":3686,"mtime":1616480698021,"results":"87","hashOfConfig":"61"},{"size":1181,"mtime":1612893043774,"results":"88","hashOfConfig":"61"},{"size":7398,"mtime":1616678548170,"results":"89","hashOfConfig":"61"},{"size":335,"mtime":1614950761565,"results":"90","hashOfConfig":"61"},{"size":82428,"mtime":1616435184200,"results":"91","hashOfConfig":"61"},{"size":2902,"mtime":1616680860223,"results":"92","hashOfConfig":"61"},{"size":415,"mtime":1616680280828,"results":"93","hashOfConfig":"61"},{"size":1178,"mtime":1616680280474,"results":"94","hashOfConfig":"61"},{"size":4672,"mtime":1616434441451,"results":"95","hashOfConfig":"61"},{"size":4956,"mtime":1616434441460,"results":"96","hashOfConfig":"61"},{"size":222,"mtime":1613839624447,"results":"97","hashOfConfig":"61"},{"size":737,"mtime":1616345625147,"results":"98","hashOfConfig":"61"},{"size":8745,"mtime":1616435045981,"results":"99","hashOfConfig":"61"},{"size":56,"mtime":1616345526455,"results":"100","hashOfConfig":"61"},{"size":886,"mtime":1614576488184,"results":"101","hashOfConfig":"61"},{"size":251,"mtime":1614785912957,"results":"102","hashOfConfig":"61"},{"size":1857,"mtime":1616479687094,"results":"103","hashOfConfig":"61"},{"size":267,"mtime":1614782134749,"results":"104","hashOfConfig":"61"},{"size":1122,"mtime":1616776057084,"results":"105","hashOfConfig":"61"},{"size":891,"mtime":1615999833115,"results":"106","hashOfConfig":"61"},{"size":5376,"mtime":1616819282766,"results":"107","hashOfConfig":"61"},{"size":3649,"mtime":1616778011501,"results":"108","hashOfConfig":"61"},{"size":1140,"mtime":1616479669262,"results":"109","hashOfConfig":"61"},{"size":734,"mtime":1615998097323,"results":"110","hashOfConfig":"61"},{"size":145,"mtime":1615997290452,"results":"111","hashOfConfig":"61"},{"size":869,"mtime":1616601310473,"results":"112","hashOfConfig":"61"},{"size":541,"mtime":1616777675275,"results":"113","hashOfConfig":"61"},{"size":112,"mtime":1616777335874,"results":"114","hashOfConfig":"61"},{"size":284,"mtime":1616777613418,"results":"115","hashOfConfig":"61"},{"size":1842,"mtime":1616833556096,"results":"116","hashOfConfig":"61"},{"size":1823,"mtime":1616833370574,"results":"117","hashOfConfig":"61"},{"size":664,"mtime":1616832044015,"results":"118","hashOfConfig":"61"},{"size":298,"mtime":1616831770350,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"m3no2f",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"122"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"122"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"122"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"122"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"F:\\frontend\\dynamic_forms\\src\\index.js",[],["246","247"],"F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js",[],"F:\\frontend\\dynamic_forms\\src\\App.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx",[],"F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx",[],"F:\\frontend\\dynamic_forms\\src\\store.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx",["248","249","250"],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Home.jsx",["251"],"import React from 'react'\r\nimport { DragDropContext} from 'react-beautiful-dnd'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport {  Grid, } from 'semantic-ui-react'\r\nimport ItemDrops, {Pages} from './ItemDrops'\r\nimport Toolbox from './Toolbox'\r\nimport {SetDragItem, Swap_Between_Page} from '../Redux/DnDItems/action'\r\nimport { items as Tools } from './ListInput'\r\nimport { GetAction } from './actions'\r\nimport Pager from \"./Pager\";\r\n\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\nconst atPosition = (ExistingList, destinationIndex,Newdata) => {\r\n    const destClone = Array.from(ExistingList);\r\n    destClone.splice(destinationIndex, 0,Newdata);\r\n    return destClone;\r\n}\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[\"source\"] = sourceClone;\r\n    result[\"destination\"] =destClone;\r\n\r\n    return result;\r\n};\r\n\r\n\r\n\r\nfunction Home() {\r\n\r\n    const  DnD= useSelector(state => state.dnd)\r\n    const dispatch = useDispatch()\r\n    const actions = new GetAction();\r\n    const selector=useSelector(state=>state.currentForm)\r\n\r\n\r\n    const dragEndCall=(result)=>{\r\n        let data;\r\n        const { source, destination,draggableId} = result;\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        if(source.droppableId!==destination.droppableId && source.droppableId===\"toolbox\"){\r\n            if(draggableId===\"inputemail\")\r\n                {\r\n                    data = actions[String(Tools.find(e=>e.id===draggableId).action)](true);\r\n                }\r\n            else\r\n                {\r\n                    data = actions[String(Tools.find(e => e.id === draggableId).action)]();\r\n                }\r\n               const list=atPosition(DnD.formPage[destination.droppableId.toString()].page.getFieldsList(),destination.index,data)\r\n            dispatch(SetDragItem({id:destination.droppableId,list:list}))\r\n\r\n                    \r\n        }\r\n        else if(source.droppableId!==destination.droppableId){\r\n           const result= move(DnD.formPage[source.droppableId.toString()].page.getFieldsList(),DnD.formPage[destination.droppableId.toString()].page.getFieldsList(),source,destination)\r\n            dispatch(Swap_Between_Page({sourceid:source.droppableId,destinationid:destination.droppableId,source:result[\"source\"],destination:result[\"destination\"]}))\r\n        }\r\n        if(source.droppableId===destination.droppableId){\r\n            const list=reorder(DnD.formPage[destination.droppableId.toString()].page.getFieldsList(),source.index,destination.index)\r\n            dispatch(SetDragItem({id:destination.droppableId,list:list}))\r\n        }\r\n       \r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <Grid.Row>\r\n                <h1>{selector.name}</h1>\r\n            </Grid.Row>\r\n            <DragDropContext onDragEnd={dragEndCall} >\r\n            <Grid celled stackable doubling >\r\n                <Grid.Row  stretched columns={3}>\r\n                    \r\n                <Grid.Column  computer={3} >\r\n                     {/*  toolbox*/ }\r\n                    <Toolbox/>\r\n                 </Grid.Column > \r\n            \r\n                 <Grid.Column  computer={8} >     \r\n                     {/* WA*/ }              \r\n                    \r\n                    <ItemDrops/>\r\n\r\n                </Grid.Column>\r\n\r\n                    <Grid.Column  computer={3} >\r\n\r\n                       <Pager/>\r\n\r\n                    </Grid.Column>\r\n             </Grid.Row>\r\n          </Grid>\r\n          </DragDropContext>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Toolbox.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ListInput.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ItemDrops.jsx",["252","253","254","255","256","257"],"import React,{memo,useReducer,useEffect} from 'react'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Modal, Segment, Icon, Label, Form, Header, Container,} from 'semantic-ui-react'\r\nimport {\r\n    DeleteAllElementsInAPage,\r\n    DeleteAnDrags,\r\n    DeleteAPage,\r\n    LoadPage,\r\n    RemoveAllDrags,\r\n    SetDragItem\r\n} from '../Redux/DnDItems/action'\r\nimport {ListFields,ListPageForm} from './protobuf/Fields_pb'\r\nimport { RenderProto } from './Fields/RenderFields'\r\nimport {EditRenderField} from \"./Fields/EditsFields\";\r\nimport { useForm, useFormContext, FormProvider, Controller } from \"react-hook-form\";\r\nimport Axios from \"../axiosConfig\";\r\nimport {ExceptionList} from \"./Fields/ExceptionList\";\r\nimport {modalReducer} from \"../ModalReducer/ModalReducer\";\r\nimport {base64ToArrayBuffer,bufferToBase64} from \"./utils\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ItemDrops() {\r\n     const  DnD= useSelector(state => state.dnd)\r\n     const dispatch = useDispatch()\r\n     const currentForm=useSelector(state=>state.currentForm)\r\n     const[state,dispatches]=useReducer(modalReducer,{isOpen:false})\r\n\r\n     useEffect(()=>{\r\n        const a= base64ToArrayBuffer(currentForm.bindata)\r\n         const data = {};\r\n         ListPageForm.deserializeBinary(a).getPageList().forEach(e=>(\r\n             data[e.getFormid().toString()]={id:e.getFormid(),page:e}\r\n         ))\r\n        dispatch(LoadPage(data))\r\n     },[])\r\n\r\n  const onSave=()=>{\r\n       const nPageListForm = new  ListPageForm()\r\n       const  array=[]\r\n       Object.entries(DnD.formPage).map(e=>(\r\n           array.push(e[1].page)\r\n       ))\r\n       nPageListForm.setPageList(array)\r\n       const serialized=nPageListForm.serializeBinary()\r\n       const data={\"data\":bufferToBase64(serialized),\"form_id\":currentForm.id}\r\n       Axios().post(\"dynamicforms/saveform\",data).then(e=>{dispatches({type:\"OPEN\"});}).catch(er=>{console.log(er)})\r\n  }\r\n\r\n    return (\r\n        <Segment secondary  stacked>\r\n          <Segment>\r\n          <Label size={50} onClick={()=>dispatch(RemoveAllDrags())} color=\"red\" attached=\"top right\" style={{paddingRight:\"18px\",height:\"10Ppx\"}} icon=\"remove\"   removeIcon />\r\n          <Header> Drag Items from toolbar and place it below  </Header>\r\n          <Label size={50} onClick={()=>onSave()} color=\"green\" attached=\"top left\" style={{paddingRight:\"18px\",height:\"10Ppx\"}} icon=\"save\"   />\r\n          </Segment>\r\n            {\r\n              Object.entries(DnD.formPage).map(e=>(\r\n\r\n                 <Segment >\r\n                     {console.log(DnD.formPage,\"kkk0\")}\r\n                  <EachPage item={e[1].page} dispatch={dispatch}/>\r\n\r\n                 </Segment>)\r\n              )\r\n            }\r\n            <SavedModal open={state.isOpen} dis={dispatches}/>\r\n      </Segment>\r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default ItemDrops\r\n\r\n\r\nconst EachPage=({item,dispatch})=>{\r\n  console.log(item,\"kkk\")\r\n    return(\r\n        <Droppable  isCombineEnabled={true}  style={{height:\"500px\"}} droppableId={item.getFormid()} >\r\n\r\n            {(provided,snapshot )=>(\r\n\r\n                <div ref={provided.innerRef} {...provided.droppableProps} isDraggingOver={snapshot.isDraggingOver}  >\r\n                    <Segment  widths=\"equal\"  style={{height:\"max-content\",minHeight:\"450px\", backgroundColor:\"#fff\"}}>\r\n                        <Label size={50} onClick={()=>{dispatch(DeleteAllElementsInAPage({id:item.getFormid()}))}} color=\"red\" attached=\"top right\" style={{paddingRight:\"18px\",height:\"10Ppx\"}} icon=\"remove\"   removeIcon />\r\n\r\n\r\n                        <DropList snapshot={snapshot} formId={item.getFormid()} items={item.getFieldsList()}/>\r\n                        <Label size={50} onClick={()=>{dispatch(DeleteAPage({id:item.getFormid()}))}} color=\"red\" attached=\"bottom right\" style={{paddingRight:\"18px\",height:\"10Ppx\"}} icon=\"trash\"   removeIcon />\r\n                    </Segment>\r\n\r\n                    {provided.placeholder}\r\n                </div>\r\n\r\n\r\n            )}\r\n\r\n        </Droppable>\r\n    )\r\n}\r\n\r\nfunction  DropList({snapshot,items,formId}) {\r\n     const methods = useForm();\r\n  return(\r\n      <FormProvider {...methods} >\r\n    <Form divided={snapshot.isDragging} verticalAlign='middle'>\r\n\r\n        {items.map((item,i)=>{\r\n              \r\n            return (\r\n             \r\n             <Draggable key={item.getUid()} draggableId={item.getUid()} index={i}>\r\n            {(provided, snapshot) => (\r\n                          <div ref={provided.innerRef} key={item.getUid()} \r\n                            {...provided.draggableProps} isDragging={snapshot.isDraggingOver}\r\n                            isDragging={snapshot.isDraggingOver}   style={provided.draggableProps.style}  >\r\n                              \r\n                                 <EachItem formId={formId} item={item} provided={provided}/>\r\n                             \r\n                         </div>\r\n                      \r\n        )}  \r\n       \r\n      </Draggable>\r\n   \r\n      )})}\r\n                  \r\n    </Form>\r\n      </FormProvider>\r\n          )}\r\n\r\n\r\nconst  EachItem=({item,provided,formId}) =>{\r\n\r\n    const nRenderProto = new RenderProto();\r\n    const field = nRenderProto[String(item.getRenderFunc())](item);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n  return (\r\n                               <Segment textAlign=\"left\"  secondary  >\r\n                            \r\n                                 <Label color=\"orange\" attached=\"top left\" ribbon style={{width:\"min-content\"}} icon=\"align justify\" {...provided.dragHandleProps} />\r\n                                \r\n                                 <Label  attached=\"bottom right\" onClick={()=>{dispatch(DeleteAnDrags({formId:formId,elementId:item.getUid()}))}} color=\"red\" style={{width:\"min-content\"}} icon=\"trash alternate\"  />  <br></br>\r\n                                   <CustomModal item={item}/>\r\n                                   {field}\r\n                                 \r\n                                </Segment >\r\n  )\r\n}\r\n\r\n\r\n\r\nconst CustomModal=memo(({item})=>{\r\n\r\n    const[state,dispatches]=useReducer(modalReducer,{isOpen:false,item:item})\r\n    const nEditRenderField=new EditRenderField()\r\n    let render=null;\r\n    if (!ExceptionList.includes(String(item.getRenderFunc())) )\r\n        render= nEditRenderField[String(item.getRenderFunc())](item)\r\n\r\n    return (\r\n        <Modal\r\n            closeIcon\r\n            open={state.isOpen}\r\n            onClose={() => dispatches({type:\"CLOSE\"})}\r\n            trigger={render!==null?<Label onClick={()=>dispatches({type:\"OPEN\"})} attached=\"top right\"  color=\"yellow\" style={{width:\"min-content\"}} icon=\"edit\"  />:null}>\r\n            <Modal.Header>Make Your Changes</Modal.Header>\r\n            <Modal.Content>\r\n                {render}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n\r\n})\r\n\r\nconst SavedModal=memo(({open,dis})=>{\r\n    return (\r\n        <Modal\r\n            basic\r\n            size={\"mini\"}\r\n            closeIcon\r\n            open={ open}\r\n            onClose={() => dis({type:\"CLOSE\"})}>\r\n            <Modal.Header><Icon  color=\"green\" name=\"save \"/>Saved Successfully</Modal.Header>\r\n            <Modal.Content >\r\n                <Container textAlign={\"center\"}>\r\n                 <Icon name={\"check circle\"} size={\"huge\"} color=\"green\"/>\r\n             </Container>\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n\r\n\r\n} )\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\PresistedReducers\\PresistedReducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Fields_pb.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\actions.jsx",["258"],"import { createFieldUUID } from \"./utils\"\r\nimport {Field,Radio,Number,Text,validator,Checkbox,DropDown,Date,Label,Range,Image} from \"./protobuf/Fields_pb\"\r\n\r\nexport class GetAction {\r\n    constructor() {\r\n        this.GetRadio = function () {\r\n            const nRadio = new Radio()\r\n            nRadio.setNumofoption(4)\r\n            nRadio.addValues(\"one\")\r\n            nRadio.addValues( \"two\")\r\n            nRadio.addValues(\"three\")\r\n            nRadio.addValues( \"four\")\r\n            nRadio.setLabel(\"enter the question\")\r\n\r\n            const nField = new Field()\r\n            nField.setUid(createFieldUUID())\r\n            nField.setRadio(nRadio)\r\n            nField.setRenderFunc('RenderRadio')\r\n            return nField;\r\n        }\r\n        this.GetNumber=function () {\r\n            const  nNumber=new Number()\r\n            nNumber.setLabel(\"enter the min and max for number Field\");\r\n            nNumber.setMin(0)\r\n            nNumber.setMax(100)\r\n\r\n            const nField = new Field()\r\n            nField.setUid(createFieldUUID())\r\n            nField.setNumber(nNumber)\r\n            nField.setRenderFunc('RenderNumber')\r\n            return nField;\r\n\r\n        }\r\n      this.GetText =function (isEmail) {\r\n          const nField = new Field()\r\n          nField.setUid(createFieldUUID())\r\n            const nText=new Text()\r\n          const valid = new validator();\r\n            valid.setValidation(\"true\")\r\n            valid.setError(\"not to be empty\")\r\n\r\n          const valid1 = new validator();\r\n            valid1.setValidation(\"^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$\")\r\n            valid1.setError(\"email id required\")\r\n            nText.getValidMap().set(\"required\",valid);\r\n            if(isEmail) {\r\n                nText.getValidMap().set(\"pattern\", valid1)\r\n                nText.setType(\"email\")\r\n                nText.setLabel(\"E-mail\")\r\n                nField.setRenderFunc('RenderEmail')\r\n            }\r\n            else{\r\n                nText.setType(\"Text\")\r\n                nText.setLabel(\"Enter your Text\")\r\n                nField.setRenderFunc('RenderText')\r\n            }\r\n\r\n            nField.setText(nText)\r\n\r\n            return nField;\r\n\r\n      }\r\n      this.GetCheckBox=function () {\r\n            const nChekBox=new Checkbox()\r\n            nChekBox.setLabel(\"Enter you check box value\")\r\n            const nField = new Field()\r\n            nField.setUid(createFieldUUID())\r\n            nField.setCheckbox(nChekBox)\r\n            nField.setRenderFunc('RenderCheckBox')\r\n            return nField;\r\n\r\n      }\r\n      this.GetDrop=function () {\r\n                const nDropDown=new DropDown()\r\n                nDropDown.setLabel(\"Edit ur own text\")\r\n                nDropDown.addItems(\"one\")\r\n                nDropDown.addItems(\"two\")\r\n                const nField = new Field()\r\n                nField.setUid(createFieldUUID())\r\n                nField.setDropdown(nDropDown)\r\n                nField.setRenderFunc('RenderDropDown')\r\n            return nField;\r\n      }\r\n      this.GetDate=function () {\r\n                const nDate=new Date()\r\n                nDate.setLabel(\"Choose Your Date\")\r\n                const nField = new Field()\r\n                nField.setUid(createFieldUUID())\r\n                nField.setDate(nDate)\r\n                nField.setRenderFunc('RenderDate')\r\n          return nField;\r\n\r\n      }\r\n      this.GetLabel=function () {\r\n            const  nlabel =new Label()\r\n            nlabel.setValue(\"Enter some label text\")\r\n            const nField = new Field()\r\n            nField.setUid(createFieldUUID())\r\n            nField.setLabel(nlabel)\r\n            nField.setRenderFunc('RenderLabel')\r\n\r\n        return nField;\r\n      }\r\n      this.GetRange=function(){\r\n        const nRange =new Range()\r\n        nRange.setFrom(0)\r\n        nRange.setTo(100)\r\n        nRange.setMultiples(1)\r\n        nRange.setLabel(\"Enter the label or text for Range\")\r\n        const nField = new Field()\r\n        nField.setUid(createFieldUUID())\r\n        nField.setRange(nRange)\r\n        nField.setRenderFunc('RenderRange')\r\n    \r\n        return nField;\r\n      }\r\n      this.GetImage=function () {\r\n            const nImage=new Image()\r\n            nImage.setImagelabel(\"Enter Your Image Description\");\r\n            nImage.setImageurl(\"https://react.semantic-ui.com/images/wireframe/image.png\")\r\n            nImage.setSize(\"small\")\r\n            nImage.setIsRounded(false)\r\n            nImage.setIsCircular(false)\r\n            const nField = new Field()\r\n            nField.setUid(createFieldUUID())\r\n            nField.setImage(nImage)\r\n            nField.setRenderFunc('RenderImage')\r\n          return nField;\r\n\r\n\r\n      }\r\n\r\n    }\r\n}\r\n\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\RenderFields.jsx",["259","260","261","262","263"],"import React from 'react'\r\nimport {Checkbox, Form, FormCheckbox, Image, Label, Radio, Segment} from 'semantic-ui-react';\r\nimport FormInput from \"semantic-ui-react/dist/commonjs/collections/Form/FormInput\";\r\nimport {ConnectForm} from \"./ConnectForm\";\r\nimport {Controller} from \"react-hook-form\";\r\n\r\n\r\n\r\nexport class RenderProto{\r\n  constructor(){\r\n    this.RenderRadio= function(item){\r\n      const arr=item.getRadio().getValuesList();\r\n\r\n    return(\r\n        <ConnectForm>\r\n            {({ register,setValue,trigger,control })=>(\r\n\r\n                <Form.Field>\r\n                    <Label content={item.getRadio().getLabel()} />\r\n                    {\r\n                        arr.map((e,i)=>(\r\n                            <div><input  ref={register({})} type=\"radio\" key={i}  value={e}   name={item.getUid()}/>\r\n                                <label htmlFor={e}>{e}</label>\r\n                            </div>\r\n                            ))\r\n\r\n                    }\r\n\r\n                </Form.Field> )}\r\n        </ConnectForm>\r\n\r\n\r\n    )\r\n    };\r\n    this.RenderNumber=function (item) {\r\n      return(\r\n          <ConnectForm>\r\n              {({register,control})=>(\r\n          <Controller control={control}  defaultValue=\"\" as={FormInput} ref={register({})}  width={5} label={item.getNumber().getLabel()}    name={item.getUid()} type=\"number\" min={item.getNumber().getMin()} max={item.getNumber().getMax()}/>\r\n              )}\r\n          </ConnectForm>\r\n      )\r\n              }\r\n    this.RenderText=function(item){\r\n\r\n        return(\r\n            <ConnectForm>\r\n                {({register,control})=>(\r\n                       <Controller control={control}  defaultValue=\"\" as={FormInput} width={5} name={item.getUid()} label={item.getText().getLabel()}  ref={register({})}   />\r\n\r\n                )}\r\n            </ConnectForm>\r\n        )\r\n    }\r\n    this.RenderEmail=function (item) {\r\n        {\r\n            return(\r\n                <ConnectForm>\r\n                    {({register,control})=>(\r\n                        <Controller control={control} as={Form.Input} defaultValue=\"\" type=\"email\" width={5} name={item.getUid()} label={item.getText().getLabel()}  ref={register({})}   />\r\n                    )}\r\n                </ConnectForm>\r\n            )\r\n        }\r\n\r\n    }\r\n    this.RenderCheckBox=function (item) {\r\n\r\n        return(\r\n          <ConnectForm>\r\n              {({register,trigger,setValue})=>(\r\n                  <Form.Checkbox\r\n                      name={item.getUid()}\r\n                      ref={register({name:item.getUid()})}\r\n                      label=\"I agree to the Terms and Conditions\"\r\n                      onChange={async (e, { name, checked }) => {\r\n                          setValue(name, checked);\r\n                          await trigger({ name });\r\n                      }}\r\n                  />\r\n\r\n                  )}\r\n          </ConnectForm>\r\n        )\r\n\r\n    }\r\n    this.RenderDropDown=function (item) {\r\n        let arr=[];\r\n        item.getDropdown().getItemsList().forEach(e=>{\r\n             arr.push({key:e,text:e,value:e})\r\n            }\r\n        );\r\n\r\n\r\n        return(\r\n            <ConnectForm>\r\n                {({register,control,setValue,trigger})=>(\r\n                <Form.Select defaultValue=\"\" width={5} ref={register({name:item.getUid()})}\r\n                             onChange={async (e, { name, value }) => {\r\n                                 setValue(name, value);\r\n                                 await trigger({ name });\r\n                             }}\r\n                             label={item.getDropdown().getLabel()} type=\"select\"  options={arr} name={item.getUid()}/>)}\r\n            </ConnectForm>\r\n        )\r\n\r\n    }\r\n    this.RenderDate= function(item){\r\n\r\n        return(\r\n            <ConnectForm>\r\n                {({register,control})=>(\r\n                <Controller control={control} as={Form.Input} defaultValue=\"\"  width={5}  ref={register({})}  label={item.getDate().getLabel()} type=\"Date\" name={item.getUid()} />)}\r\n            </ConnectForm>\r\n        )\r\n    }\r\n\r\n    this.RenderLabel=function (item) {\r\n        return(\r\n            <Form.Field>\r\n                <Label content={item.getLabel().getValue()}/>\r\n            </Form.Field>\r\n        )\r\n\r\n    }\r\n    this.RenderRange=function(item){\r\n        return(\r\n            <div>\r\n                 <Label content={item.getRange().getLabel()}/>\r\n                 <input name={item.getUid()} min={item.getRange().getFrom()} max={item.getRange().getTo()} multiple={item.getRange().getMultiples()} />\r\n            </div>\r\n        )\r\n    }\r\n    this.RenderImage=function(item){\r\n        return(\r\n            <div>\r\n                <Label content={item.getImage().getImagelabel()}/>\r\n                <Image size={item.getImage().getSize()} src={item.getImage().getImageurl()} rounded={item.getImage().setIsRounded()} circular={item.getImage().setIsCircular()}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ConnectForm.js",["264","265"],"import React, { memo, } from \"react\";\r\nimport { useFormContext} from \"react-hook-form\";\r\nexport const ConnectForm = ({ children }) => {\r\n    const methods = useFormContext();\r\n\r\n    return children({ ...methods });\r\n};","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\EditsFields.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\MemoEditFields.jsx",["266"],"import React, {memo, useReducer, useState} from 'react'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DragEdit} from \"../../Redux/DnDItems/action\";\r\nimport {Form, Portal, Container, List, Icon, Image} from \"semantic-ui-react\";\r\n\r\nexport const MemoText=memo(({item})=>{\r\n    const {register,handleSubmit}=useForm();\r\n    const [PortalOpen,setPortalOpen]=useState(false);\r\n    const dispatch=useDispatch();\r\n    const done=(e)=>{\r\n        item.getText().setLabel(e.label)\r\n        dispatch(DragEdit())\r\n        setPortalOpen(false)\r\n\r\n    }\r\n    return(\r\n        <div>\r\n            <Form onSubmit={handleSubmit(done)}>\r\n                <input ref={register({ required: true})} required name=\"label\" placeholder={ \"current value:\"+item.getText().getLabel()}  />\r\n                <input type=\"submit\"  value=\"Save\"/>\r\n                <Portal open={PortalOpen} ><h1>✔</h1> </Portal>\r\n            </Form>\r\n        </div>)\r\n})\r\n\r\nexport const Memolabel=memo(({item})=>{\r\n    const {register,handleSubmit}=useForm();\r\n    const [PortalOpen,setPortalOpen]=useState(false);\r\n    const dispatch=useDispatch();\r\n    const done=(e)=>{\r\n     item.getLabel().setValue(e.label)\r\n        dispatch(DragEdit())\r\n        setPortalOpen(false)\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <Form onSubmit={handleSubmit(done)}>\r\n        <input ref={register({ required: true})} required name=\"label\" placeholder={ \"current value:\"+item.getLabel().getValue()}  />\r\n        <input type=\"submit\"  value=\"Save\"/>\r\n            <Portal open={PortalOpen} ><h1>✔</h1> </Portal>\r\n\r\n        </Form>\r\n    </div>)\r\n})\r\n\r\nexport const MemoRadio=memo(function({item}){\r\n    const {register,reset,handleSubmit}=useForm();\r\n    const dispatch=useDispatch();\r\n    const Radio=item.getRadio()\r\n    const AddValue=(e)=>{\r\n        Radio.setLabel(e.label)\r\n        Radio.addValues(e.val)\r\n        reset()\r\n        dispatch(DragEdit())\r\n    }\r\n    const DeleteAnItemFromList=  (pos) => {\r\n        const s = [...Radio.getValuesList().slice(0, pos).concat(Radio.getValuesList().slice(pos + 1, item.getRadio().getValuesList().length))]\r\n        item.getRadio().clearValuesList()\r\n        item.getRadio().setValuesList(s)\r\n        reset()\r\n         dispatch(DragEdit())\r\n    }\r\n      return(\r\n          <div>\r\n              <Form onSubmit={handleSubmit(AddValue)}>\r\n                  <input name=\"label\" defaultValue={Radio.getLabel()}  ref={register()}   placeholder={\"current value:\"+Radio.getLabel().toString()}/>\r\n              <Container>\r\n                  <List >\r\n                      {item.getRadio().getValuesList().map((e,i)=>(\r\n                          <List.Item key={i} >\r\n                              <Icon name='remove' onClick={()=>DeleteAnItemFromList(i)} color=\"blue\"/>\r\n                              <List.Content>\r\n                                  {e}\r\n                              </List.Content>\r\n\r\n                          </List.Item>\r\n                      ))}\r\n                  </List>\r\n              </Container>\r\n\r\n                  <input ref={register({ required: true})} required name=\"val\" placeholder=\"Enter a value to add to list\"  />\r\n                  <input type=\"submit\"  value=\"Save\"/>\r\n              </Form>\r\n          </div>\r\n      )\r\n})\r\n\r\nexport  const MemoNumber=memo(({item})=>{\r\n    const {register,reset,handleSubmit}=useForm();\r\n    const dispatch=useDispatch();\r\n    const Number=item.getNumber();\r\n    const save=(e)=>{\r\n        Number.setLabel(e.label)\r\n        Number.setMax(e.maximum)\r\n        Number.setMin(e.minimum)\r\n        reset()\r\n        dispatch(DragEdit())\r\n    }\r\n    return(\r\n        <div>\r\n            <Form onSubmit={handleSubmit(save)}>\r\n                <input ref={register()} required name=\"label\"  defaultValue={Number.getLabel().toString()}  />\r\n                <input placeholder=\"min\" defaultValue={`${Number.getMin()}`} name=\"minimum\" type=\"number\" ref={register({required:true})}   />\r\n                <input placeholder=\"max\" defaultValue={`${Number.getMax()}`} name=\"maximum\" type=\"number\" ref={register({required:true})}   />\r\n                <input type=\"submit\" />\r\n            </Form>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport  const MemoCheckbox=({item})=>{\r\n    const {register,handleSubmit}=useForm();\r\n    const dispatch=useDispatch();\r\n    const CheckBox=item.getCheckbox();\r\n    const Save=(e)=>{\r\n        CheckBox.setLabel(e.checkbox)\r\n        dispatch(DragEdit())\r\n    }\r\n    return(\r\n        <div>\r\n            <Form onSubmit={handleSubmit(Save)}>\r\n                <input type=\"text\" defaultValue={CheckBox.getLabel()} placeholder={\"current value:\"+CheckBox.getLabel().toString()}  name=\"checkbox\" ref={register({required:true})}/>\r\n                <input type=\"submit\"/>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport  const MemoDropDown=({item})=> {\r\n    const {register, reset,handleSubmit} = useForm()\r\n    const dispatch = useDispatch();\r\n    const DropDown = item.getDropdown();\r\n\r\n    const AddValue=(e)=>{\r\n        DropDown.setLabel(e.dropdownLabel)\r\n        DropDown.addItems(e.val)\r\n        reset()\r\n        dispatch(DragEdit())\r\n    }\r\n    const DeleteAnItemFromList=  (pos) => {\r\n        const s = [...DropDown.getItemsList().slice(0, pos).concat(DropDown.getItemsList().slice(pos + 1, DropDown.getItemsList().length))]\r\n        DropDown.clearItemsList()\r\n        DropDown.setItemsList(s)\r\n        reset()\r\n        dispatch(DragEdit())\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Form onSubmit={handleSubmit(AddValue)}>\r\n                    <input type=\"text\" defaultValue={DropDown.getLabel()} placeholder={\"current value:\" + DropDown.getLabel().toString()} name=\"dropdownLabel\" ref={register({required: true})}/>\r\n                    <Container>\r\n                        <List >\r\n                            {DropDown.getItemsList().map((e,i)=>(\r\n                                <List.Item key={i} >\r\n                                    <Icon name='remove' onClick={()=>DeleteAnItemFromList(i)} color=\"blue\"/>\r\n                                    <List.Content>\r\n                                        {e}\r\n                                    </List.Content>\r\n\r\n                                </List.Item>\r\n                            ))}\r\n                        </List>\r\n                    </Container>\r\n                    <input ref={register({ required: true})} required name=\"val\" placeholder=\"Enter a value to add to list\"  />\r\n                    <input type=\"submit\"/>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport  const MemoDate=({item})=>{\r\n    const {register,handleSubmit}=useForm();\r\n    const dispatch=useDispatch();\r\n    const Date=item.getDate();\r\n    const Save=(e)=>{\r\n        Date.setLabel(e.date)\r\n        dispatch(DragEdit())\r\n    }\r\n    return(\r\n        <div>\r\n            <Form onSubmit={handleSubmit(Save)}>\r\n                <input type=\"text\" defaultValue={Date.getLabel()} placeholder={\"current value:\"+Date.getLabel().toString()}  name=\"date\" ref={register({required:true})}/>\r\n                <input type=\"submit\"/>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const MemoImage=({item})=>{\r\n    const {register,handleSubmit}=useForm();\r\n    const dispatch=useDispatch();\r\n    const nImage=item.getImage();\r\n    const Save=(e)=>{\r\n        item.getImage().setImagelabel(e.label);\r\n        item.getImage().setSize(e.size);\r\n        item.getImage().setIsRounded(e.rounded)\r\n        item.getImage().setIsCircular(e.circular)\r\n        dispatch(DragEdit())\r\n    }\r\n    return(\r\n        <div>\r\n            <Form onSubmit={handleSubmit(Save)}>\r\n                <input type=\"text\" defaultValue={nImage.getImagelabel()} placeholder={\"current value:\"+nImage.getImagelabel().toString()}  name=\"label\" ref={register({required:true})}/>\r\n                <select name=\"size\" ref={register({})}>\r\n                    <option>small </option>\r\n                    <option>mini </option>\r\n                    <option>tiny </option>\r\n                    <option>medium </option>\r\n                    <option>large </option>\r\n                    <option>big </option>\r\n                    <option>huge </option>\r\n                    <option>massive </option>\r\n                </select>\r\n                <input type=\"checkbox\" ref={register({})} name=\"rounded\"  defaultChecked={nImage.getIsRounded()}  />Rounded<br/>\r\n                <input type=\"checkbox\" ref={register({})} name=\"circular\" defaultChecked={nImage.getIsCircular()}   />Circular\r\n                <Image size={nImage.getSize()} src={nImage.getImageurl()} alt={nImage.getImagelabel()}/>\r\n                <input type=\"submit\"/>\r\n            </Form>\r\n        </div>\r\n    )\r\n}","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ExceptionList.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\actions.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\ModalReducer\\ModalReducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\utils.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\currentForm\\currentForm.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\createdForm.js",["267","268"],"F:\\frontend\\dynamic_forms\\src\\Components\\RespondToForm\\RespondToForm.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\reducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Pager.jsx",["269","270"],"import React from 'react';\r\nimport {Button} from \"semantic-ui-react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ListFields,ListPageForm} from './protobuf/Fields_pb'\r\nimport {uuidv4} from \"./utils\";\r\nimport {AddFormPage} from \"../Redux/DnDItems/action\";\r\nconst Pager = () => {\r\n    const dispatch=useDispatch()\r\n    const DnD=useSelector(state=>state.dnd)\r\n    const createNewPage=()=>{\r\n        const nListFields=new ListFields()\r\n        const id=uuidv4().toString();\r\n        nListFields.setFormid(id)\r\n        nListFields.setFieldsList([])\r\n        const data={\r\n            id:id,\r\n            page:nListFields\r\n        }\r\n        dispatch(AddFormPage(data))\r\n    }\r\n    return (\r\n        <div>\r\n         <Button icon=\"add\" onClick={()=>createNewPage()}  circular content=\"Add New Page\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pager;\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\RespondToForm\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\RespondToForm\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\RespondToForm\\actions.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\FromResponses\\FormResponses.jsx",["271","272","273"],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\GetFormReponses\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\GetFormReponses\\actions.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\GetFormReponses\\type.js",[],{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":3,"column":61,"nodeType":"280","messageId":"281","endLine":3,"endColumn":67},{"ruleId":"278","severity":1,"message":"282","line":25,"column":11,"nodeType":"280","messageId":"281","endLine":25,"endColumn":16},{"ruleId":"278","severity":1,"message":"283","line":26,"column":11,"nodeType":"280","messageId":"281","endLine":26,"endColumn":19},{"ruleId":"278","severity":1,"message":"284","line":5,"column":20,"nodeType":"280","messageId":"281","endLine":5,"endColumn":25},{"ruleId":"278","severity":1,"message":"285","line":11,"column":5,"nodeType":"280","messageId":"281","endLine":11,"endColumn":16},{"ruleId":"278","severity":1,"message":"286","line":13,"column":9,"nodeType":"280","messageId":"281","endLine":13,"endColumn":19},{"ruleId":"278","severity":1,"message":"287","line":16,"column":19,"nodeType":"280","messageId":"281","endLine":16,"endColumn":33},{"ruleId":"278","severity":1,"message":"288","line":16,"column":49,"nodeType":"280","messageId":"281","endLine":16,"endColumn":59},{"ruleId":"289","severity":1,"message":"290","line":40,"column":8,"nodeType":"291","endLine":40,"endColumn":10,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":121,"column":29,"nodeType":"295","endLine":121,"endColumn":65},{"ruleId":"296","severity":1,"message":"297","line":22,"column":28,"nodeType":"298","messageId":"299","endLine":22,"endColumn":40},{"ruleId":"278","severity":1,"message":"300","line":2,"column":9,"nodeType":"280","messageId":"281","endLine":2,"endColumn":17},{"ruleId":"278","severity":1,"message":"301","line":2,"column":25,"nodeType":"280","messageId":"281","endLine":2,"endColumn":37},{"ruleId":"278","severity":1,"message":"302","line":2,"column":53,"nodeType":"280","messageId":"281","endLine":2,"endColumn":58},{"ruleId":"278","severity":1,"message":"303","line":2,"column":60,"nodeType":"280","messageId":"281","endLine":2,"endColumn":67},{"ruleId":"304","severity":1,"message":"305","line":56,"column":9,"nodeType":"306","messageId":"307","endLine":64,"endColumn":10},{"ruleId":"278","severity":1,"message":"308","line":1,"column":8,"nodeType":"280","messageId":"281","endLine":1,"endColumn":13},{"ruleId":"278","severity":1,"message":"309","line":1,"column":17,"nodeType":"280","messageId":"281","endLine":1,"endColumn":21},{"ruleId":"278","severity":1,"message":"310","line":1,"column":22,"nodeType":"280","messageId":"281","endLine":1,"endColumn":32},{"ruleId":"278","severity":1,"message":"311","line":4,"column":27,"nodeType":"280","messageId":"281","endLine":4,"endColumn":31},{"ruleId":"289","severity":1,"message":"312","line":20,"column":56,"nodeType":"291","endLine":20,"endColumn":58,"suggestions":"313"},{"ruleId":"278","severity":1,"message":"314","line":4,"column":20,"nodeType":"280","messageId":"281","endLine":4,"endColumn":32},{"ruleId":"278","severity":1,"message":"315","line":9,"column":11,"nodeType":"280","messageId":"281","endLine":9,"endColumn":14},{"ruleId":"278","severity":1,"message":"316","line":2,"column":15,"nodeType":"280","messageId":"281","endLine":2,"endColumn":21},{"ruleId":"278","severity":1,"message":"317","line":2,"column":22,"nodeType":"280","messageId":"281","endLine":2,"endColumn":28},{"ruleId":"289","severity":1,"message":"312","line":12,"column":7,"nodeType":"291","endLine":12,"endColumn":9,"suggestions":"318"},"no-native-reassign",["319"],"no-negated-in-lhs",["320"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","'sdata' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Pages' is defined but never used.","'SetDragItem' is defined but never used.","'ListFields' is defined but never used.","'useFormContext' is defined but never used.","'Controller' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentForm.bindata' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["321"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","'Checkbox' is defined but never used.","'FormCheckbox' is defined but never used.","'Radio' is defined but never used.","'Segment' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'React' is defined but never used.","'memo' is defined but never used.","'useReducer' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["322"],"'ListPageForm' is defined but never used.","'DnD' is assigned a value but never used.","'Header' is defined but never used.","'Rating' is defined but never used.",["323"],"no-global-assign","no-unsafe-negation",{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"326","fix":"328"},"Update the dependencies array to be: [currentForm.bindata, dispatch]",{"range":"329","text":"330"},"Update the dependencies array to be: [dispatch]",{"range":"331","text":"332"},{"range":"333","text":"332"},[1457,1459],"[currentForm.bindata, dispatch]",[1022,1024],"[dispatch]",[397,399]]