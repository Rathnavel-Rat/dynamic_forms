[{"F:\\frontend\\dynamic_forms\\src\\index.js":"1","F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js":"2","F:\\frontend\\dynamic_forms\\src\\App.js":"3","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx":"4","F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js":"5","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx":"6","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx":"7","F:\\frontend\\dynamic_forms\\src\\store.js":"8","F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js":"9","F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx":"10","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js":"11","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js":"12","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js":"13","F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx":"14","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js":"15","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js":"16","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js":"17","F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx":"18","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js":"19","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js":"20","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js":"21","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx":"22","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js":"23","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx":"24","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx":"25","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Home.jsx":"26","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Toolbox.jsx":"27","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ListInput.js":"28","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ItemDrops.jsx":"29","F:\\frontend\\dynamic_forms\\src\\Components\\PresistedReducers\\PresistedReducers.js":"30","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Fields_pb.js":"31","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\reducers.js":"32","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\type.js":"33","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\action.js":"34","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\actions.jsx":"35","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\RenderFields.jsx":"36","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ConnectForm.js":"37","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\EditsFields.jsx":"38","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\MemoEditFields.jsx":"39","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ExceptionList.js":"40","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\reducers.js":"41","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\type.js":"42","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\actions.js":"43","F:\\frontend\\dynamic_forms\\src\\Components\\ModalReducer\\ModalReducer.js":"44","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\utils.jsx":"45","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\currentForm\\currentForm.jsx":"46","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\createdForm.js":"47","F:\\frontend\\dynamic_forms\\src\\Components\\RespondToForm\\RespondToForm.jsx":"48","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\action.js":"49","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\reducer.js":"50","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\type.js":"51","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Pager.jsx":"52"},{"size":517,"mtime":1610374072713,"results":"53","hashOfConfig":"54"},{"size":375,"mtime":1610374072713,"results":"55","hashOfConfig":"54"},{"size":475,"mtime":1611640897471,"results":"56","hashOfConfig":"54"},{"size":2753,"mtime":1615221066031,"results":"57","hashOfConfig":"54"},{"size":279,"mtime":1610374072713,"results":"58","hashOfConfig":"54"},{"size":2308,"mtime":1616479551140,"results":"59","hashOfConfig":"54"},{"size":1457,"mtime":1615213741876,"results":"60","hashOfConfig":"54"},{"size":470,"mtime":1611851471097,"results":"61","hashOfConfig":"54"},{"size":944,"mtime":1615997936098,"results":"62","hashOfConfig":"54"},{"size":3756,"mtime":1612113767764,"results":"63","hashOfConfig":"54"},{"size":925,"mtime":1610717576710,"results":"64","hashOfConfig":"54"},{"size":1357,"mtime":1610975531674,"results":"65","hashOfConfig":"54"},{"size":151,"mtime":1610627074096,"results":"66","hashOfConfig":"54"},{"size":179,"mtime":1612027919385,"results":"67","hashOfConfig":"54"},{"size":1452,"mtime":1614517977853,"results":"68","hashOfConfig":"54"},{"size":135,"mtime":1612089735144,"results":"69","hashOfConfig":"54"},{"size":960,"mtime":1612089736957,"results":"70","hashOfConfig":"54"},{"size":3232,"mtime":1616479738959,"results":"71","hashOfConfig":"54"},{"size":1196,"mtime":1612089891322,"results":"72","hashOfConfig":"54"},{"size":1480,"mtime":1611497098970,"results":"73","hashOfConfig":"54"},{"size":329,"mtime":1611156217890,"results":"74","hashOfConfig":"54"},{"size":2407,"mtime":1610899584920,"results":"75","hashOfConfig":"54"},{"size":2436,"mtime":1616479902798,"results":"76","hashOfConfig":"54"},{"size":2514,"mtime":1610904803294,"results":"77","hashOfConfig":"54"},{"size":2944,"mtime":1616479772916,"results":"78","hashOfConfig":"54"},{"size":3979,"mtime":1616680315724,"results":"79","hashOfConfig":"54"},{"size":3686,"mtime":1616480698021,"results":"80","hashOfConfig":"54"},{"size":1181,"mtime":1612893043774,"results":"81","hashOfConfig":"54"},{"size":7398,"mtime":1616678548170,"results":"82","hashOfConfig":"54"},{"size":335,"mtime":1614950761565,"results":"83","hashOfConfig":"54"},{"size":82428,"mtime":1616435184200,"results":"84","hashOfConfig":"54"},{"size":2902,"mtime":1616680860223,"results":"85","hashOfConfig":"54"},{"size":415,"mtime":1616680280828,"results":"86","hashOfConfig":"54"},{"size":1178,"mtime":1616680280474,"results":"87","hashOfConfig":"54"},{"size":4672,"mtime":1616434441451,"results":"88","hashOfConfig":"54"},{"size":4956,"mtime":1616434441460,"results":"89","hashOfConfig":"54"},{"size":222,"mtime":1613839624447,"results":"90","hashOfConfig":"54"},{"size":737,"mtime":1616345625147,"results":"91","hashOfConfig":"54"},{"size":8745,"mtime":1616435045981,"results":"92","hashOfConfig":"54"},{"size":56,"mtime":1616345526455,"results":"93","hashOfConfig":"54"},{"size":886,"mtime":1614576488184,"results":"94","hashOfConfig":"54"},{"size":251,"mtime":1614785912957,"results":"95","hashOfConfig":"54"},{"size":1857,"mtime":1616479687094,"results":"96","hashOfConfig":"54"},{"size":267,"mtime":1614782134749,"results":"97","hashOfConfig":"54"},{"size":1121,"mtime":1616485740291,"results":"98","hashOfConfig":"54"},{"size":891,"mtime":1615999833115,"results":"99","hashOfConfig":"54"},{"size":4777,"mtime":1616480086301,"results":"100","hashOfConfig":"54"},{"size":3050,"mtime":1616690944234,"results":"101","hashOfConfig":"54"},{"size":1140,"mtime":1616479669262,"results":"102","hashOfConfig":"54"},{"size":734,"mtime":1615998097323,"results":"103","hashOfConfig":"54"},{"size":145,"mtime":1615997290452,"results":"104","hashOfConfig":"54"},{"size":869,"mtime":1616601310473,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"m3no2f",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"108"},"F:\\frontend\\dynamic_forms\\src\\index.js",[],["217","218"],"F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js",[],"F:\\frontend\\dynamic_forms\\src\\App.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx",[],"F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx",[],"F:\\frontend\\dynamic_forms\\src\\store.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx",["219","220","221"],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Home.jsx",["222"],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Toolbox.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ListInput.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ItemDrops.jsx",["223","224","225","226","227","228"],"F:\\frontend\\dynamic_forms\\src\\Components\\PresistedReducers\\PresistedReducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Fields_pb.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\actions.jsx",["229"],"import { createFieldUUID } from \"./utils\"\r\nimport {Field,Radio,Number,Text,validator,Checkbox,DropDown,Date,Label,Range,Image} from \"./protobuf/Fields_pb\"\r\n\r\nexport class GetAction {\r\n    constructor() {\r\n        this.GetRadio = function () {\r\n            const nRadio = new Radio()\r\n            nRadio.setNumofoption(4)\r\n            nRadio.addValues(\"one\")\r\n            nRadio.addValues( \"two\")\r\n            nRadio.addValues(\"three\")\r\n            nRadio.addValues( \"four\")\r\n            nRadio.setLabel(\"enter the question\")\r\n\r\n            const nField = new Field()\r\n            nField.setUid(createFieldUUID())\r\n            nField.setRadio(nRadio)\r\n            nField.setRenderFunc('RenderRadio')\r\n            return nField;\r\n        }\r\n        this.GetNumber=function () {\r\n            const  nNumber=new Number()\r\n            nNumber.setLabel(\"enter the min and max for number Field\");\r\n            nNumber.setMin(0)\r\n            nNumber.setMax(100)\r\n\r\n            const nField = new Field()\r\n            nField.setUid(createFieldUUID())\r\n            nField.setNumber(nNumber)\r\n            nField.setRenderFunc('RenderNumber')\r\n            return nField;\r\n\r\n        }\r\n      this.GetText =function (isEmail) {\r\n          const nField = new Field()\r\n          nField.setUid(createFieldUUID())\r\n            const nText=new Text()\r\n          const valid = new validator();\r\n            valid.setValidation(\"true\")\r\n            valid.setError(\"not to be empty\")\r\n\r\n          const valid1 = new validator();\r\n            valid1.setValidation(\"^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$\")\r\n            valid1.setError(\"email id required\")\r\n            nText.getValidMap().set(\"required\",valid);\r\n            if(isEmail) {\r\n                nText.getValidMap().set(\"pattern\", valid1)\r\n                nText.setType(\"email\")\r\n                nText.setLabel(\"E-mail\")\r\n                nField.setRenderFunc('RenderEmail')\r\n            }\r\n            else{\r\n                nText.setType(\"Text\")\r\n                nText.setLabel(\"Enter your Text\")\r\n                nField.setRenderFunc('RenderText')\r\n            }\r\n\r\n            nField.setText(nText)\r\n\r\n            return nField;\r\n\r\n      }\r\n      this.GetCheckBox=function () {\r\n            const nChekBox=new Checkbox()\r\n            nChekBox.setLabel(\"Enter you check box value\")\r\n            const nField = new Field()\r\n            nField.setUid(createFieldUUID())\r\n            nField.setCheckbox(nChekBox)\r\n            nField.setRenderFunc('RenderCheckBox')\r\n            return nField;\r\n\r\n      }\r\n      this.GetDrop=function () {\r\n                const nDropDown=new DropDown()\r\n                nDropDown.setLabel(\"Edit ur own text\")\r\n                nDropDown.addItems(\"one\")\r\n                nDropDown.addItems(\"two\")\r\n                const nField = new Field()\r\n                nField.setUid(createFieldUUID())\r\n                nField.setDropdown(nDropDown)\r\n                nField.setRenderFunc('RenderDropDown')\r\n            return nField;\r\n      }\r\n      this.GetDate=function () {\r\n                const nDate=new Date()\r\n                nDate.setLabel(\"Choose Your Date\")\r\n                const nField = new Field()\r\n                nField.setUid(createFieldUUID())\r\n                nField.setDate(nDate)\r\n                nField.setRenderFunc('RenderDate')\r\n          return nField;\r\n\r\n      }\r\n      this.GetLabel=function () {\r\n            const  nlabel =new Label()\r\n            nlabel.setValue(\"Enter some label text\")\r\n            const nField = new Field()\r\n            nField.setUid(createFieldUUID())\r\n            nField.setLabel(nlabel)\r\n            nField.setRenderFunc('RenderLabel')\r\n\r\n        return nField;\r\n      }\r\n      this.GetRange=function(){\r\n        const nRange =new Range()\r\n        nRange.setFrom(0)\r\n        nRange.setTo(100)\r\n        nRange.setMultiples(1)\r\n        nRange.setLabel(\"Enter the label or text for Range\")\r\n        const nField = new Field()\r\n        nField.setUid(createFieldUUID())\r\n        nField.setRange(nRange)\r\n        nField.setRenderFunc('RenderRange')\r\n    \r\n        return nField;\r\n      }\r\n      this.GetImage=function () {\r\n            const nImage=new Image()\r\n            nImage.setImagelabel(\"Enter Your Image Description\");\r\n            nImage.setImageurl(\"https://react.semantic-ui.com/images/wireframe/image.png\")\r\n            nImage.setSize(\"small\")\r\n            nImage.setIsRounded(false)\r\n            nImage.setIsCircular(false)\r\n            const nField = new Field()\r\n            nField.setUid(createFieldUUID())\r\n            nField.setImage(nImage)\r\n            nField.setRenderFunc('RenderImage')\r\n          return nField;\r\n\r\n\r\n      }\r\n\r\n    }\r\n}\r\n\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\RenderFields.jsx",["230","231","232","233","234"],"import React from 'react'\r\nimport {Checkbox, Form, FormCheckbox, Image, Label, Radio, Segment} from 'semantic-ui-react';\r\nimport FormInput from \"semantic-ui-react/dist/commonjs/collections/Form/FormInput\";\r\nimport {ConnectForm} from \"./ConnectForm\";\r\nimport {Controller} from \"react-hook-form\";\r\n\r\n\r\n\r\nexport class RenderProto{\r\n  constructor(){\r\n    this.RenderRadio= function(item){\r\n      const arr=item.getRadio().getValuesList();\r\n\r\n    return(\r\n        <ConnectForm>\r\n            {({ register,setValue,trigger,control })=>(\r\n\r\n                <Form.Field>\r\n                    <Label content={item.getRadio().getLabel()} />\r\n                    {\r\n                        arr.map((e,i)=>(\r\n                            <div><input  ref={register({})} type=\"radio\" key={i}  value={e}   name={item.getUid()}/>\r\n                                <label htmlFor={e}>{e}</label>\r\n                            </div>\r\n                            ))\r\n\r\n                    }\r\n\r\n                </Form.Field> )}\r\n        </ConnectForm>\r\n\r\n\r\n    )\r\n    };\r\n    this.RenderNumber=function (item) {\r\n      return(\r\n          <ConnectForm>\r\n              {({register,control})=>(\r\n          <Controller control={control}  defaultValue=\"\" as={FormInput} ref={register({})}  width={5} label={item.getNumber().getLabel()}    name={item.getUid()} type=\"number\" min={item.getNumber().getMin()} max={item.getNumber().getMax()}/>\r\n              )}\r\n          </ConnectForm>\r\n      )\r\n              }\r\n    this.RenderText=function(item){\r\n\r\n        return(\r\n            <ConnectForm>\r\n                {({register,control})=>(\r\n                       <Controller control={control}  defaultValue=\"\" as={FormInput} width={5} name={item.getUid()} label={item.getText().getLabel()}  ref={register({})}   />\r\n\r\n                )}\r\n            </ConnectForm>\r\n        )\r\n    }\r\n    this.RenderEmail=function (item) {\r\n        {\r\n            return(\r\n                <ConnectForm>\r\n                    {({register,control})=>(\r\n                        <Controller control={control} as={Form.Input} defaultValue=\"\" type=\"email\" width={5} name={item.getUid()} label={item.getText().getLabel()}  ref={register({})}   />\r\n                    )}\r\n                </ConnectForm>\r\n            )\r\n        }\r\n\r\n    }\r\n    this.RenderCheckBox=function (item) {\r\n\r\n        return(\r\n          <ConnectForm>\r\n              {({register,trigger,setValue})=>(\r\n                  <Form.Checkbox\r\n                      name={item.getUid()}\r\n                      ref={register({name:item.getUid()})}\r\n                      label=\"I agree to the Terms and Conditions\"\r\n                      onChange={async (e, { name, checked }) => {\r\n                          setValue(name, checked);\r\n                          await trigger({ name });\r\n                      }}\r\n                  />\r\n\r\n                  )}\r\n          </ConnectForm>\r\n        )\r\n\r\n    }\r\n    this.RenderDropDown=function (item) {\r\n        let arr=[];\r\n        item.getDropdown().getItemsList().forEach(e=>{\r\n             arr.push({key:e,text:e,value:e})\r\n            }\r\n        );\r\n\r\n\r\n        return(\r\n            <ConnectForm>\r\n                {({register,control,setValue,trigger})=>(\r\n                <Form.Select defaultValue=\"\" width={5} ref={register({name:item.getUid()})}\r\n                             onChange={async (e, { name, value }) => {\r\n                                 setValue(name, value);\r\n                                 await trigger({ name });\r\n                             }}\r\n                             label={item.getDropdown().getLabel()} type=\"select\"  options={arr} name={item.getUid()}/>)}\r\n            </ConnectForm>\r\n        )\r\n\r\n    }\r\n    this.RenderDate= function(item){\r\n\r\n        return(\r\n            <ConnectForm>\r\n                {({register,control})=>(\r\n                <Controller control={control} as={Form.Input} defaultValue=\"\"  width={5}  ref={register({})}  label={item.getDate().getLabel()} type=\"Date\" name={item.getUid()} />)}\r\n            </ConnectForm>\r\n        )\r\n    }\r\n\r\n    this.RenderLabel=function (item) {\r\n        return(\r\n            <Form.Field>\r\n                <Label content={item.getLabel().getValue()}/>\r\n            </Form.Field>\r\n        )\r\n\r\n    }\r\n    this.RenderRange=function(item){\r\n        return(\r\n            <div>\r\n                 <Label content={item.getRange().getLabel()}/>\r\n                 <input name={item.getUid()} min={item.getRange().getFrom()} max={item.getRange().getTo()} multiple={item.getRange().getMultiples()} />\r\n            </div>\r\n        )\r\n    }\r\n    this.RenderImage=function(item){\r\n        return(\r\n            <div>\r\n                <Label content={item.getImage().getImagelabel()}/>\r\n                <Image size={item.getImage().getSize()} src={item.getImage().getImageurl()} rounded={item.getImage().setIsRounded()} circular={item.getImage().setIsCircular()}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ConnectForm.js",["235","236"],"import React, { memo, } from \"react\";\r\nimport { useFormContext} from \"react-hook-form\";\r\nexport const ConnectForm = ({ children }) => {\r\n    const methods = useFormContext();\r\n\r\n    return children({ ...methods });\r\n};","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\EditsFields.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\MemoEditFields.jsx",["237"],"import React, {memo, useReducer, useState} from 'react'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DragEdit} from \"../../Redux/DnDItems/action\";\r\nimport {Form, Portal, Container, List, Icon, Image} from \"semantic-ui-react\";\r\n\r\nexport const MemoText=memo(({item})=>{\r\n    const {register,handleSubmit}=useForm();\r\n    const [PortalOpen,setPortalOpen]=useState(false);\r\n    const dispatch=useDispatch();\r\n    const done=(e)=>{\r\n        item.getText().setLabel(e.label)\r\n        dispatch(DragEdit())\r\n        setPortalOpen(false)\r\n\r\n    }\r\n    return(\r\n        <div>\r\n            <Form onSubmit={handleSubmit(done)}>\r\n                <input ref={register({ required: true})} required name=\"label\" placeholder={ \"current value:\"+item.getText().getLabel()}  />\r\n                <input type=\"submit\"  value=\"Save\"/>\r\n                <Portal open={PortalOpen} ><h1>✔</h1> </Portal>\r\n            </Form>\r\n        </div>)\r\n})\r\n\r\nexport const Memolabel=memo(({item})=>{\r\n    const {register,handleSubmit}=useForm();\r\n    const [PortalOpen,setPortalOpen]=useState(false);\r\n    const dispatch=useDispatch();\r\n    const done=(e)=>{\r\n     item.getLabel().setValue(e.label)\r\n        dispatch(DragEdit())\r\n        setPortalOpen(false)\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <Form onSubmit={handleSubmit(done)}>\r\n        <input ref={register({ required: true})} required name=\"label\" placeholder={ \"current value:\"+item.getLabel().getValue()}  />\r\n        <input type=\"submit\"  value=\"Save\"/>\r\n            <Portal open={PortalOpen} ><h1>✔</h1> </Portal>\r\n\r\n        </Form>\r\n    </div>)\r\n})\r\n\r\nexport const MemoRadio=memo(function({item}){\r\n    const {register,reset,handleSubmit}=useForm();\r\n    const dispatch=useDispatch();\r\n    const Radio=item.getRadio()\r\n    const AddValue=(e)=>{\r\n        Radio.setLabel(e.label)\r\n        Radio.addValues(e.val)\r\n        reset()\r\n        dispatch(DragEdit())\r\n    }\r\n    const DeleteAnItemFromList=  (pos) => {\r\n        const s = [...Radio.getValuesList().slice(0, pos).concat(Radio.getValuesList().slice(pos + 1, item.getRadio().getValuesList().length))]\r\n        item.getRadio().clearValuesList()\r\n        item.getRadio().setValuesList(s)\r\n        reset()\r\n         dispatch(DragEdit())\r\n    }\r\n      return(\r\n          <div>\r\n              <Form onSubmit={handleSubmit(AddValue)}>\r\n                  <input name=\"label\" defaultValue={Radio.getLabel()}  ref={register()}   placeholder={\"current value:\"+Radio.getLabel().toString()}/>\r\n              <Container>\r\n                  <List >\r\n                      {item.getRadio().getValuesList().map((e,i)=>(\r\n                          <List.Item key={i} >\r\n                              <Icon name='remove' onClick={()=>DeleteAnItemFromList(i)} color=\"blue\"/>\r\n                              <List.Content>\r\n                                  {e}\r\n                              </List.Content>\r\n\r\n                          </List.Item>\r\n                      ))}\r\n                  </List>\r\n              </Container>\r\n\r\n                  <input ref={register({ required: true})} required name=\"val\" placeholder=\"Enter a value to add to list\"  />\r\n                  <input type=\"submit\"  value=\"Save\"/>\r\n              </Form>\r\n          </div>\r\n      )\r\n})\r\n\r\nexport  const MemoNumber=memo(({item})=>{\r\n    const {register,reset,handleSubmit}=useForm();\r\n    const dispatch=useDispatch();\r\n    const Number=item.getNumber();\r\n    const save=(e)=>{\r\n        Number.setLabel(e.label)\r\n        Number.setMax(e.maximum)\r\n        Number.setMin(e.minimum)\r\n        reset()\r\n        dispatch(DragEdit())\r\n    }\r\n    return(\r\n        <div>\r\n            <Form onSubmit={handleSubmit(save)}>\r\n                <input ref={register()} required name=\"label\"  defaultValue={Number.getLabel().toString()}  />\r\n                <input placeholder=\"min\" defaultValue={`${Number.getMin()}`} name=\"minimum\" type=\"number\" ref={register({required:true})}   />\r\n                <input placeholder=\"max\" defaultValue={`${Number.getMax()}`} name=\"maximum\" type=\"number\" ref={register({required:true})}   />\r\n                <input type=\"submit\" />\r\n            </Form>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport  const MemoCheckbox=({item})=>{\r\n    const {register,handleSubmit}=useForm();\r\n    const dispatch=useDispatch();\r\n    const CheckBox=item.getCheckbox();\r\n    const Save=(e)=>{\r\n        CheckBox.setLabel(e.checkbox)\r\n        dispatch(DragEdit())\r\n    }\r\n    return(\r\n        <div>\r\n            <Form onSubmit={handleSubmit(Save)}>\r\n                <input type=\"text\" defaultValue={CheckBox.getLabel()} placeholder={\"current value:\"+CheckBox.getLabel().toString()}  name=\"checkbox\" ref={register({required:true})}/>\r\n                <input type=\"submit\"/>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport  const MemoDropDown=({item})=> {\r\n    const {register, reset,handleSubmit} = useForm()\r\n    const dispatch = useDispatch();\r\n    const DropDown = item.getDropdown();\r\n\r\n    const AddValue=(e)=>{\r\n        DropDown.setLabel(e.dropdownLabel)\r\n        DropDown.addItems(e.val)\r\n        reset()\r\n        dispatch(DragEdit())\r\n    }\r\n    const DeleteAnItemFromList=  (pos) => {\r\n        const s = [...DropDown.getItemsList().slice(0, pos).concat(DropDown.getItemsList().slice(pos + 1, DropDown.getItemsList().length))]\r\n        DropDown.clearItemsList()\r\n        DropDown.setItemsList(s)\r\n        reset()\r\n        dispatch(DragEdit())\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Form onSubmit={handleSubmit(AddValue)}>\r\n                    <input type=\"text\" defaultValue={DropDown.getLabel()} placeholder={\"current value:\" + DropDown.getLabel().toString()} name=\"dropdownLabel\" ref={register({required: true})}/>\r\n                    <Container>\r\n                        <List >\r\n                            {DropDown.getItemsList().map((e,i)=>(\r\n                                <List.Item key={i} >\r\n                                    <Icon name='remove' onClick={()=>DeleteAnItemFromList(i)} color=\"blue\"/>\r\n                                    <List.Content>\r\n                                        {e}\r\n                                    </List.Content>\r\n\r\n                                </List.Item>\r\n                            ))}\r\n                        </List>\r\n                    </Container>\r\n                    <input ref={register({ required: true})} required name=\"val\" placeholder=\"Enter a value to add to list\"  />\r\n                    <input type=\"submit\"/>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport  const MemoDate=({item})=>{\r\n    const {register,handleSubmit}=useForm();\r\n    const dispatch=useDispatch();\r\n    const Date=item.getDate();\r\n    const Save=(e)=>{\r\n        Date.setLabel(e.date)\r\n        dispatch(DragEdit())\r\n    }\r\n    return(\r\n        <div>\r\n            <Form onSubmit={handleSubmit(Save)}>\r\n                <input type=\"text\" defaultValue={Date.getLabel()} placeholder={\"current value:\"+Date.getLabel().toString()}  name=\"date\" ref={register({required:true})}/>\r\n                <input type=\"submit\"/>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const MemoImage=({item})=>{\r\n    const {register,handleSubmit}=useForm();\r\n    const dispatch=useDispatch();\r\n    const nImage=item.getImage();\r\n    const Save=(e)=>{\r\n        item.getImage().setImagelabel(e.label);\r\n        item.getImage().setSize(e.size);\r\n        item.getImage().setIsRounded(e.rounded)\r\n        item.getImage().setIsCircular(e.circular)\r\n        dispatch(DragEdit())\r\n    }\r\n    return(\r\n        <div>\r\n            <Form onSubmit={handleSubmit(Save)}>\r\n                <input type=\"text\" defaultValue={nImage.getImagelabel()} placeholder={\"current value:\"+nImage.getImagelabel().toString()}  name=\"label\" ref={register({required:true})}/>\r\n                <select name=\"size\" ref={register({})}>\r\n                    <option>small </option>\r\n                    <option>mini </option>\r\n                    <option>tiny </option>\r\n                    <option>medium </option>\r\n                    <option>large </option>\r\n                    <option>big </option>\r\n                    <option>huge </option>\r\n                    <option>massive </option>\r\n                </select>\r\n                <input type=\"checkbox\" ref={register({})} name=\"rounded\"  defaultChecked={nImage.getIsRounded()}  />Rounded<br/>\r\n                <input type=\"checkbox\" ref={register({})} name=\"circular\" defaultChecked={nImage.getIsCircular()}   />Circular\r\n                <Image size={nImage.getSize()} src={nImage.getImageurl()} alt={nImage.getImagelabel()}/>\r\n                <input type=\"submit\"/>\r\n            </Form>\r\n        </div>\r\n    )\r\n}","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ExceptionList.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\actions.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\ModalReducer\\ModalReducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\utils.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\currentForm\\currentForm.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\createdForm.js",["238"],"import React, {memo, useEffect, useReducer, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AddNewFormApiCAll, FetchCreatedFormAPICall,FetchBinaryDataApiCall} from \"../Redux/CreatedForm/actions\";\r\nimport {List, Card, Icon, Form, Modal, Button, FormInput} from \"semantic-ui-react\";\r\nimport Segment from \"semantic-ui-react/dist/commonjs/elements/Segment\";\r\nimport { useForm,Controller } from \"react-hook-form\";\r\nimport {modalReducer} from \"../ModalReducer/ModalReducer\";\r\nimport Axios from \"../axiosConfig\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {CurrentForm} from \"../Redux/currentForm/currentForm\";\r\nimport {DeleteFormApiCall} from \"../Redux/DeleteForm/action\";\r\n\r\n\r\n\r\nconst CreatedForm = () => {\r\n    const dispatch=useDispatch()\r\n    const data=useSelector(state=>state.createdForm)\r\n    const history=useHistory()\r\n    useEffect(()=> dispatch(FetchCreatedFormAPICall()),[])\r\n\r\n    return (\r\n        <Segment verticalAlign=\"top\"   fluid text  textAlign=\"center\" >\r\n            <List animated  >\r\n            {data.data.map(e=>(\r\n                <List.Item as={Card} >\r\n                <List.Content floated=\"right\" >\r\n                    <Icon  name=\"edit\"\r\n                          onClick={()=>{\r\n                                dispatch(FetchBinaryDataApiCall({\"form_id\":e.form_id}))\r\n                                    .then(e=>{\r\n                                    dispatch(CurrentForm(e.data))\r\n                                    history.push(\"/createForm\")\r\n\r\n                                })\r\n                          }}  color=\"blue\" />\r\n                    <DeleteFormModal dispatch={dispatch} id={e.form_id} name={e.name}/>\r\n                </List.Content>\r\n                <ListsForms item={e}/>\r\n\r\n            </List.Item>))}\r\n\r\n            </List>\r\n            <CreateFormModal dispatch={dispatch}/>\r\n        </Segment>\r\n    );\r\n};\r\nconst ListsForms=memo(({item})=>{\r\n\r\n    const [isIconEdit,setisIconEdit]=useState(false)\r\n    const UpdateFormName=(data)=>{\r\n        data[\"name\"]=document.getElementById(\"newName\").value\r\n        Axios().patch(\"dynamicforms/updateName\",data).then(e=>console.log(e)).catch(e=>console.log(\"lool\",e))\r\n    }\r\n    return(\r\n        <List.Content  floated=\"left\"><Icon color=\"blue\" name=\"dot circle\"/>\r\n        {!isIconEdit? item.name:\r\n            <div>\r\n                <input id=\"newName\" style={{width:\"100px\",height:\"q20px\"}} type=\"text\"  placeholder={item.name} defaultValue={item.name}/>\r\n                 <Icon color={\"green\"} onClick={()=>{UpdateFormName({\"form_id\":item.form_id})}} name=\"save\"/></div>}\r\n                 {!isIconEdit ?\r\n                                (<Icon onClick={()=>{setisIconEdit(!isIconEdit)}} name=\"edit\"/>)\r\n                              : (<Icon  onClick={()=>setisIconEdit(!isIconEdit)} name=\"delete\" />)}\r\n\r\n        </List.Content>\r\n    )\r\n})\r\nexport default CreatedForm;\r\n\r\nconst CreateFormModal=({dispatch})=>{\r\n    const{register,handleSubmit,control}=useForm()\r\n    const[state,dispatches]=useReducer(modalReducer,{isOpen:false})\r\n     const create=(data)=>{\r\n        dispatch(AddNewFormApiCAll(data)).then(e=>dispatches({type:\"CLOSE\"})).catch(e=>{})\r\n    }\r\n    return(\r\n        <Modal size={\"tiny\"} trigger={ <Button   color=\"blue\"   circular icon={\"add\"} onClick={()=>dispatches({type:\"OPEN\"})} />} basic closeIcon  open={state.isOpen} onClose={()=>{dispatches({type:\"CLOSE\"})}}>\r\n            <Modal.Header>Enter the name for your form</Modal.Header>\r\n            <Form onSubmit={handleSubmit(create)}>\r\n                <Controller  control={control} as={FormInput} type=\"text\" name=\"name\" ref={register({required:{value:true,message:\"Required\"}})}/>\r\n            </Form>\r\n            <Modal.Content ><Button size={5} positive onClick={handleSubmit(create)}>\r\n                CREATE\r\n            </Button></Modal.Content>\r\n            <Modal.Actions >\r\n                <Button negative onClick={() => dispatches({ type: 'CLOSE' })}>\r\n                    CLOSE\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nconst DeleteFormModal=({dispatch,id,name})=>{\r\n    const[state,dispatches]=useReducer(modalReducer,{isOpen:false})\r\n\r\n    return(\r\n        <Modal trigger={<Icon name=\"delete\" onClick={()=>{dispatches({type:\"OPEN\"})}} />} closeIcon   open={state.isOpen} onClose={()=>{dispatches({type:\"CLOSE\"})}}>\r\n        <Modal.Header>Are sure you wanna delete</Modal.Header>\r\n        <Modal.Description textAlign=\"center\">\r\n         <h1> {name}</h1>\r\n        </Modal.Description>\r\n        <Modal.Content>\r\n            <Button size={5} positive  onClick={()=>dispatch(DeleteFormApiCall({\"id\":id})).then()} >\r\n           Confrim Delete\r\n        </Button></Modal.Content>\r\n    </Modal>)\r\n}","F:\\frontend\\dynamic_forms\\src\\Components\\RespondToForm\\RespondToForm.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\reducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Pager.jsx",["239","240"],"import React from 'react';\r\nimport {Button} from \"semantic-ui-react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ListFields,ListPageForm} from './protobuf/Fields_pb'\r\nimport {uuidv4} from \"./utils\";\r\nimport {AddFormPage} from \"../Redux/DnDItems/action\";\r\nconst Pager = () => {\r\n    const dispatch=useDispatch()\r\n    const DnD=useSelector(state=>state.dnd)\r\n    const createNewPage=()=>{\r\n        const nListFields=new ListFields()\r\n        const id=uuidv4().toString();\r\n        nListFields.setFormid(id)\r\n        nListFields.setFieldsList([])\r\n        const data={\r\n            id:id,\r\n            page:nListFields\r\n        }\r\n        dispatch(AddFormPage(data))\r\n    }\r\n    return (\r\n        <div>\r\n         <Button icon=\"add\" onClick={()=>createNewPage()}  circular content=\"Add New Page\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pager;\r\n",{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":3,"column":61,"nodeType":"247","messageId":"248","endLine":3,"endColumn":67},{"ruleId":"245","severity":1,"message":"249","line":25,"column":11,"nodeType":"247","messageId":"248","endLine":25,"endColumn":16},{"ruleId":"245","severity":1,"message":"250","line":26,"column":11,"nodeType":"247","messageId":"248","endLine":26,"endColumn":19},{"ruleId":"245","severity":1,"message":"251","line":5,"column":20,"nodeType":"247","messageId":"248","endLine":5,"endColumn":25},{"ruleId":"245","severity":1,"message":"252","line":11,"column":5,"nodeType":"247","messageId":"248","endLine":11,"endColumn":16},{"ruleId":"245","severity":1,"message":"253","line":13,"column":9,"nodeType":"247","messageId":"248","endLine":13,"endColumn":19},{"ruleId":"245","severity":1,"message":"254","line":16,"column":19,"nodeType":"247","messageId":"248","endLine":16,"endColumn":33},{"ruleId":"245","severity":1,"message":"255","line":16,"column":49,"nodeType":"247","messageId":"248","endLine":16,"endColumn":59},{"ruleId":"256","severity":1,"message":"257","line":40,"column":8,"nodeType":"258","endLine":40,"endColumn":10,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":121,"column":29,"nodeType":"262","endLine":121,"endColumn":65},{"ruleId":"263","severity":1,"message":"264","line":22,"column":28,"nodeType":"265","messageId":"266","endLine":22,"endColumn":40},{"ruleId":"245","severity":1,"message":"267","line":2,"column":9,"nodeType":"247","messageId":"248","endLine":2,"endColumn":17},{"ruleId":"245","severity":1,"message":"268","line":2,"column":25,"nodeType":"247","messageId":"248","endLine":2,"endColumn":37},{"ruleId":"245","severity":1,"message":"269","line":2,"column":53,"nodeType":"247","messageId":"248","endLine":2,"endColumn":58},{"ruleId":"245","severity":1,"message":"270","line":2,"column":60,"nodeType":"247","messageId":"248","endLine":2,"endColumn":67},{"ruleId":"271","severity":1,"message":"272","line":56,"column":9,"nodeType":"273","messageId":"274","endLine":64,"endColumn":10},{"ruleId":"245","severity":1,"message":"275","line":1,"column":8,"nodeType":"247","messageId":"248","endLine":1,"endColumn":13},{"ruleId":"245","severity":1,"message":"276","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":21},{"ruleId":"245","severity":1,"message":"277","line":1,"column":22,"nodeType":"247","messageId":"248","endLine":1,"endColumn":32},{"ruleId":"256","severity":1,"message":"278","line":19,"column":56,"nodeType":"258","endLine":19,"endColumn":58,"suggestions":"279"},{"ruleId":"245","severity":1,"message":"280","line":4,"column":20,"nodeType":"247","messageId":"248","endLine":4,"endColumn":32},{"ruleId":"245","severity":1,"message":"281","line":9,"column":11,"nodeType":"247","messageId":"248","endLine":9,"endColumn":14},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","'sdata' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Pages' is defined but never used.","'SetDragItem' is defined but never used.","'ListFields' is defined but never used.","'useFormContext' is defined but never used.","'Controller' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentForm.bindata' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["284"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","'Checkbox' is defined but never used.","'FormCheckbox' is defined but never used.","'Radio' is defined but never used.","'Segment' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'React' is defined but never used.","'memo' is defined but never used.","'useReducer' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["285"],"'ListPageForm' is defined but never used.","'DnD' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [currentForm.bindata, dispatch]",{"range":"290","text":"291"},"Update the dependencies array to be: [dispatch]",{"range":"292","text":"293"},[1457,1459],"[currentForm.bindata, dispatch]",[929,931],"[dispatch]"]