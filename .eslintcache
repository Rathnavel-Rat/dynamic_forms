[{"F:\\frontend\\dynamic_forms\\src\\index.js":"1","F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js":"2","F:\\frontend\\dynamic_forms\\src\\App.js":"3","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx":"4","F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js":"5","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx":"6","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx":"7","F:\\frontend\\dynamic_forms\\src\\store.js":"8","F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js":"9","F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx":"10","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js":"11","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js":"12","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js":"13","F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx":"14","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js":"15","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js":"16","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js":"17","F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx":"18","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js":"19","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js":"20","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js":"21","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx":"22","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js":"23","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx":"24","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx":"25","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Home.jsx":"26","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Toolbox.jsx":"27","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ListInput.js":"28","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ItemDrops.jsx":"29","F:\\frontend\\dynamic_forms\\src\\Components\\PresistedReducers\\PresistedReducers.js":"30","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Fields_pb.js":"31","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\reducers.js":"32","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\type.js":"33","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\action.js":"34","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\actions.jsx":"35","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\RenderFields.jsx":"36","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ConnectForm.js":"37","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\EditsFields.jsx":"38","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\MemoEditFields.jsx":"39","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ExceptionList.js":"40","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\createForm.js":"41","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\reducers.js":"42","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\type.js":"43","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\actions.js":"44","F:\\frontend\\dynamic_forms\\src\\Components\\ModalReducer\\ModalReducer.js":"45","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\utils.jsx":"46"},{"size":517,"mtime":1610374072713,"results":"47","hashOfConfig":"48"},{"size":375,"mtime":1610374072713,"results":"49","hashOfConfig":"48"},{"size":475,"mtime":1611640897471,"results":"50","hashOfConfig":"48"},{"size":2601,"mtime":1614519842404,"results":"51","hashOfConfig":"48"},{"size":279,"mtime":1610374072713,"results":"52","hashOfConfig":"48"},{"size":2467,"mtime":1614445035654,"results":"53","hashOfConfig":"48"},{"size":1454,"mtime":1611764482639,"results":"54","hashOfConfig":"48"},{"size":470,"mtime":1611851471097,"results":"55","hashOfConfig":"48"},{"size":736,"mtime":1614517977467,"results":"56","hashOfConfig":"48"},{"size":3756,"mtime":1612113767764,"results":"57","hashOfConfig":"48"},{"size":925,"mtime":1610717576710,"results":"58","hashOfConfig":"48"},{"size":1357,"mtime":1610975531674,"results":"59","hashOfConfig":"48"},{"size":151,"mtime":1610627074096,"results":"60","hashOfConfig":"48"},{"size":179,"mtime":1612027919385,"results":"61","hashOfConfig":"48"},{"size":1452,"mtime":1614517977853,"results":"62","hashOfConfig":"48"},{"size":135,"mtime":1612089735144,"results":"63","hashOfConfig":"48"},{"size":960,"mtime":1612089736957,"results":"64","hashOfConfig":"48"},{"size":3247,"mtime":1613139165459,"results":"65","hashOfConfig":"48"},{"size":1196,"mtime":1612089891322,"results":"66","hashOfConfig":"48"},{"size":1480,"mtime":1611497098970,"results":"67","hashOfConfig":"48"},{"size":329,"mtime":1611156217890,"results":"68","hashOfConfig":"48"},{"size":2407,"mtime":1610899584920,"results":"69","hashOfConfig":"48"},{"size":2456,"mtime":1611497141158,"results":"70","hashOfConfig":"48"},{"size":2514,"mtime":1610904803294,"results":"71","hashOfConfig":"48"},{"size":3105,"mtime":1610986117013,"results":"72","hashOfConfig":"48"},{"size":2612,"mtime":1614443576690,"results":"73","hashOfConfig":"48"},{"size":3780,"mtime":1613456746924,"results":"74","hashOfConfig":"48"},{"size":1181,"mtime":1612893043774,"results":"75","hashOfConfig":"48"},{"size":5190,"mtime":1614875891003,"results":"76","hashOfConfig":"48"},{"size":321,"mtime":1612715137160,"results":"77","hashOfConfig":"48"},{"size":73805,"mtime":1614086709581,"results":"78","hashOfConfig":"48"},{"size":796,"mtime":1614096047488,"results":"79","hashOfConfig":"48"},{"size":195,"mtime":1613238175830,"results":"80","hashOfConfig":"48"},{"size":513,"mtime":1613239669125,"results":"81","hashOfConfig":"48"},{"size":3894,"mtime":1614875730221,"results":"82","hashOfConfig":"48"},{"size":3075,"mtime":1614182205301,"results":"83","hashOfConfig":"48"},{"size":222,"mtime":1613839624447,"results":"84","hashOfConfig":"48"},{"size":584,"mtime":1614434941766,"results":"85","hashOfConfig":"48"},{"size":6492,"mtime":1614434941777,"results":"86","hashOfConfig":"48"},{"size":83,"mtime":1614434949655,"results":"87","hashOfConfig":"48"},{"size":4606,"mtime":1614882263458,"results":"88","hashOfConfig":"48"},{"size":886,"mtime":1614576488184,"results":"89","hashOfConfig":"48"},{"size":251,"mtime":1614785912957,"results":"90","hashOfConfig":"48"},{"size":2358,"mtime":1614875557811,"results":"91","hashOfConfig":"48"},{"size":267,"mtime":1614782134749,"results":"92","hashOfConfig":"48"},{"size":892,"mtime":1614876452124,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"m3no2f",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\frontend\\dynamic_forms\\src\\index.js",[],["196","197"],"F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js",[],"F:\\frontend\\dynamic_forms\\src\\App.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx",[],"F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx",["198"],"import React,{ useState} from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { NavLink, Link,withRouter, useHistory} from 'react-router-dom'\r\nimport { Menu,Dropdown, Button, } from 'semantic-ui-react'\r\nimport {LogoutApiCall} from \"../Redux/UserDetails/UserDetails\";\r\n\r\n\r\nfunction MenuComponent(props) {\r\n    const [activeTab, setactiveTab] = useState('home')\r\n    const onclickTab = (name) => {\r\n        setactiveTab(name)\r\n    };\r\n    const dispatch = useDispatch()\r\n    const logout=()=>{\r\n      dispatch(LogoutApiCall())\r\n\r\n    }\r\n\r\n    const userdata = useSelector(state => state.userdetails);\r\n\r\n    return (\r\n       \r\n        <Menu secondary pointing>\r\n          \r\n    \r\n        <Menu.Item as={NavLink} to='/Home'  name='home' active={activeTab === 'home'} onClick={()=>onclickTab('home')}/>\r\n        {userdata.islogin ?(\r\n          <Menu.Menu>\r\n         <Menu.Item as={NavLink} to=\"/createForm\" name='createform' active={activeTab === 'createform'} onClick={()=>onclickTab('createform')} />\r\n         <Menu.Item as={NavLink} to=\"/createdForms\" name='createdforms' active={activeTab === 'createdforms'} onClick={()=>onclickTab('createdforms')} />\r\n         <Menu.Item as={NavLink} to=\"/respondedForm\" name=\"respondedForm\" active={activeTab=== 'respondedForm'} onClick={()=>onclickTab('respondedForm')} /></Menu.Menu>\r\n        ):null\r\n        }\r\n        { userdata.islogin  ? \r\n        (\r\n          <Menu.Menu position='right'>\r\n          <Menu.Item>\r\n            <Dropdown item  text={userdata.username[0].toUpperCase()}>\r\n               <Dropdown.Menu>\r\n                <Dropdown.Item >{userdata.email}</Dropdown.Item>\r\n                 <Dropdown.Item as={Link} to=\"/userSettings\" >settings</Dropdown.Item>\r\n                 <Dropdown.Item as={Link} to=\"\">change password</Dropdown.Item>\r\n                 <Dropdown.Item as={Button} onClick={()=>logout()} >logout</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n          </Menu.Menu>\r\n        ):\r\n        ( \r\n        <Menu.Menu position=\"right\">\r\n        <Button as={NavLink} active={activeTab === 'login'} to='/login' onClick={()=>onclickTab('login')} color=\"teal\">SignIn</Button>\r\n        <Button as={NavLink} active={activeTab === 'Register'} to=\"/Register\" onClick={()=>onclickTab('Register')}  color=\"twitter\">SignUp</Button>\r\n        </Menu.Menu>)\r\n       }\r\n      </Menu>\r\n    )\r\n}\r\n\r\nexport default withRouter(MenuComponent);","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx",[],"F:\\frontend\\dynamic_forms\\src\\store.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx",["199","200"],"import React,{useEffect} from 'react'\r\nimport { Button,Form, Grid, Header, Label, Loader, Message, Segment,Dimmer,Image } from 'semantic-ui-react'\r\nimport { useForm,Controller } from \"react-hook-form\";\r\nimport { useSelector,useDispatch} from 'react-redux';\r\nimport {   useHistory } from 'react-router-dom';\r\nimport { LoginApiCall } from '../Redux/Login/action';\r\n\r\n\r\nfunction Login(props) {\r\n  //form\r\n  const {register,errors,handleSubmit,trigger,setValue,control}=useForm();\r\n\r\n  useEffect(() => {\r\n     \r\n      register({ name: \"password\" }, { required: {value:true,message:\"Password required\"}});\r\n      register({name:\"email\"},{required:{value:true,message:\"Email id required\"},pattern:  {value:/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,message:\"Invalid E-mail Id\"}})\r\n  }, );\r\n \r\n  const valid=async (e, { name, value }) => {\r\n    setValue(name, value);\r\n    await trigger({ name });\r\n  }\r\n  const submitTo=(data)=>{\r\n    dispatch(LoginApiCall(data))\r\n  }\r\n\r\n  //redirect\r\n  var history=useHistory();\r\n  const onClickSignIn=()=>{\r\n    history.push(\"/Register\")\r\n  }  \r\n  const onClickForgot=()=>{\r\n    history.push(\"/ForgotPassword\")\r\n  }\r\n  //redux\r\n  const sdata=useSelector(state=>state.login)\r\n  const dispatch = useDispatch()\r\n  if(sdata.islogin===true){\r\n    history.push(\"/Home\")\r\n  }\r\n  \r\n  //style\r\n  const TransStyle={\r\n      border:\"none\",\r\n      borderRadius: \"5px\",\r\n      background: \"rgba(255, 255, 255,0)\",\r\n      color:\"teal\",\r\n      cursor: \"pointer\"\r\n  }\r\n \r\n\r\n   \r\n    return (\r\n      <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\r\n      <Grid.Column style={{ maxWidth: 450 }} >\r\n        <Header as='h2' textAlign='center'>\r\n          Sign-in\r\n        </Header>\r\n        <Form size='large' onSubmit={handleSubmit(submitTo)}>\r\n        <Segment stacked>\r\n        \r\n          <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"email\" fluid icon='mail' iconPosition='left'  placeholder='email' onChange={valid} error={errors.email ? true :false}/>\r\n          {errors.email && <Label pointing=\"above\" color=\"red\">{errors.email.message}</Label>}\r\n          <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"password\" fluid icon='lock' iconPosition='left'    placeholder='Password' type='password' onChange={valid} error={errors.password ? true :false} />\r\n          {errors.password && <Label pointing=\"above\" color=\"red\">{errors.password.message}</Label>}\r\n          <Button color='blue' fluid size='large'>\r\n            LogIn\r\n          </Button>\r\n          <button  style={TransStyle} color=\"white\" onClick={()=>onClickForgot()}>ForgotPassword</button><br/>\r\n         Not an User <button   style={TransStyle}  color=\"blue\" onClick={()=>onClickSignIn()}>Sign Up</button>\r\n        </Segment>\r\n      </Form>\r\n        \r\n    <Segment>\r\n      {console.log(sdata.laoding)}\r\n        {sdata.laoding===true ?(<Dimmer active>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>):( sdata.message)}\r\n    </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n    )\r\n}\r\n/*const mapStateToProps=state=>{\r\n  return{\r\n    laod:state.loading\r\n  }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    disp:()=>dispatch(RegisterApiCall())\r\n  }\r\n}*/\r\n\r\n\r\nexport default  Login;","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js",["201"],"import Axios from \"../../axiosConfig\";\r\nimport { PASSWORD_REQUEST, PASSWORD_REQ_FAILURE, PASSWORD_REQ_SUCCESS, PASSWORD_RESET_FAILURE, PASSWORD_RESET_REQUEST, PASSWORD_RESET_SUCCESS } from \"./types\"\r\n\r\n\r\nconst passwordChangeRequest=()=>{\r\n     return{\r\n         type:PASSWORD_REQUEST         \r\n}\r\n}\r\n\r\nconst passwordChangeReqSuccces=(data)=>{\r\n    return{\r\n        type:PASSWORD_REQ_SUCCESS,\r\n        payload:data\r\n    }\r\n}\r\n\r\nconst passwordChangeReqFaiure=(error)=>{\r\n    return{\r\n        type:PASSWORD_REQ_FAILURE,\r\n        payload:error\r\n    }\r\n}\r\n\r\nconst  passwordResetRquest=()=>{\r\n    return{\r\n        type:PASSWORD_RESET_REQUEST         \r\n       }\r\n}\r\n\r\nconst passwordResetSuccess=(data)=>{\r\n    return{\r\n        type:PASSWORD_RESET_SUCCESS,\r\n        payload:data\r\n    }\r\n}\r\n\r\nconst passwordResetFailure=(error)=>{\r\n    return{\r\n        type:PASSWORD_RESET_FAILURE,\r\n        payload:error\r\n    }\r\n}\r\n\r\nexport const PasswordRequestAPI=(data)=>{\r\n    return (dispatch)=>{\r\n        dispatch(passwordChangeRequest())\r\n        Axios().post(\"/authentication/RequestPasswordChange\",data)\r\n               .then(response=>{\r\n                   if(response.data[\"success\"]===true){\r\n                   dispatch(passwordChangeReqSuccces(\"check your email for verification\"))\r\n                }\r\n                else{\r\n                    dispatch(passwordChangeReqSuccces(\"something went wrong\"))\r\n                }\r\n               })\r\n               .catch(error=>{\r\n                try {\r\n                   \r\n                    if(error.response.data!==null){\r\n                        dispatch(passwordChangeReqFaiure(error.response.data[\"detail\"]))\r\n                    }\r\n                }\r\n                catch(e){\r\n                    dispatch(passwordChangeReqFaiure(\"try again later\"))\r\n                }\r\n                  \r\n               })\r\n    }\r\n}\r\n\r\nexport const PasswordResetAPI=(data)=>{\r\n    return (dispatch)=>{\r\n        dispatch(passwordResetRquest())\r\n        Axios().patch(\"authentication/SetNewPassword\",data).then( respsone=>{\r\n           \r\n           if(respsone.data[\"success\"]===true){\r\n               dispatch(passwordResetSuccess(\"password reset Successfully\"))\r\n           }\r\n      }\r\n    ).catch(error=>{\r\n        if(error.response.status!==404)\r\n          dispatch(passwordResetSuccess(\"password reset Successfully\"))\r\n        else\r\n         dispatch(passwordResetSuccess(\"Try again later\"))\r\n    \r\n    })\r\n  }\r\n        \r\n\r\n}","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx",["202","203","204"],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx",["205","206","207","208","209"],"\r\nimport React,{useEffect, useState} from 'react'\r\nimport { Button,Form, Grid, Header, Label, Message, Segment,Loader } from 'semantic-ui-react'\r\nimport { useForm,Controller } from \"react-hook-form\";\r\nimport { useSelector,useDispatch} from 'react-redux';\r\nimport Axios from '../../axiosConfig';\r\nimport { PasswordResetAPI } from '../../Redux/passwordChange/actions';\r\n\r\n\r\n\r\nfunction Passwordreset(props) {\r\n    const {register,errors,handleSubmit,trigger,setValue,control}=useForm()\r\n   \r\n    \r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const valid_cred = urlParams.get('token_valid','');\r\n    const message=urlParams.get('message',\"\")\r\n    const uid64=urlParams.get(\"uidb64\",\"\")\r\n    const token=urlParams.get(\"token\",\"\")\r\n    //http://localhost:3000/passwordReset?token_valid=True&message=CredentialsValid&uidb64=NzhkZTg1YTQtMzBkYy00NTNiLTk4ZGItOGJmZmI5MzJhMTYz&token=agorxd-e8dad31e03a17dbdd0b82efa3f86bb2c\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n        register({name:\"password\"},{required:{value:true,message:\"PleaseFill\"},minLength:{value:6,message:\"Must be 6 Character length\"}})\r\n        register({name:\"confrimpassword\"},{required:{value:true,message:\"PleaseFill\"},minLength:{value:6,message:\"Must be 6 Character length\"}})\r\n    }, );\r\n  \r\n   \r\n    const valid=async (e, { name, value }) => {\r\n      setValue(name, value);\r\n      await trigger({ name });\r\n    }\r\n   \r\n     \r\n      \r\n  \r\n    //redirect\r\n\r\n    //redux\r\n    const sdata=useSelector(state=>state.changepassword)\r\n    const dispatch=useDispatch()\r\n\r\n    const submitTo=(data)=>{\r\n      data[\"token\"]=token\r\n      data[\"uid\"]=uid64\r\n      delete data['confrimpassword'];\r\n      dispatch(PasswordResetAPI(data))\r\n    }\r\n    \r\n\r\n  \r\n\r\n    \r\n\r\n  \r\n     \r\n      return (\r\n        <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 450 }} >\r\n          <Header as='h2' textAlign='center'>\r\n           Password Reset\r\n          </Header>\r\n          <Form size='large' onSubmit={handleSubmit(submitTo)}>\r\n          <Segment stacked>\r\n            <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"password\" fluid icon='lock' iconPosition='left'    placeholder='Password' type='password' onChange={valid} error={errors.password ? true :false} />\r\n            {errors.password && <Label pointing=\"above\" color=\"red\">{errors.password.message}</Label>}\r\n            <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"confrimpassword\" fluid icon='lock' iconPosition='left'    placeholder='ConfrimPassword' type='password' onChange={valid} error={errors.password ? true :false} />\r\n            {errors.confrimpassword && <Label pointing=\"above\" color=\"red\">{errors.confrimpassword.message}</Label>}\r\n            <Button color='blue' fluid size='large'>\r\n              set Password\r\n            </Button>\r\n            \r\n          </Segment>\r\n        </Form>\r\n          <Message>\r\n            {sdata.message}\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n      )\r\n      }\r\n\r\nexport default Passwordreset\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Home.jsx",["210"],"import React from 'react'\r\nimport { DragDropContext} from 'react-beautiful-dnd'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport {  Grid, Segment, } from 'semantic-ui-react'\r\nimport ItemDrops from './ItemDrops'\r\nimport Toolbox from './Toolbox'\r\nimport {SetDragItem} from '../Redux/DnDItems/action'\r\nimport { items as Tools } from './ListInput'\r\nimport { GetAction } from './actions'\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\nconst atPosition = (ExistingList, destinationIndex,Newdata) => {\r\n    const destClone = Array.from(ExistingList);\r\n    destClone.splice(destinationIndex, 0,Newdata);\r\n    return destClone;\r\n}\r\n\r\n\r\nfunction Home() {\r\n\r\n    const  DnD= useSelector(state => state.dnd)\r\n    const dispatch = useDispatch()\r\n    const actions = new GetAction();\r\n\r\n    const dragEndCall=(result)=>{\r\n        \r\n        let data;\r\n        const { source, destination,draggableId} = result;\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        if(source.droppableId!==destination.droppableId){\r\n            if(draggableId===\"inputemail\")\r\n                {\r\n                    data = actions[String(Tools.find(e=>e.id===draggableId).action)](true);\r\n                }\r\n            else\r\n                {\r\n                    data = actions[String(Tools.find(e => e.id === draggableId).action)]();\r\n                }\r\n               \r\n              const list=atPosition(DnD.fields,destination.index,data)\r\n              dispatch(SetDragItem(list))\r\n                    \r\n        }\r\n        if(source.droppableId===destination.droppableId){\r\n           const reordered= reorder(DnD.fields,source.index,destination.index)\r\n           dispatch(SetDragItem(reordered))\r\n        }\r\n       \r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <DragDropContext onDragEnd={dragEndCall} >\r\n            <Grid celled stackable doubling >\r\n                <Grid.Row  stretched columns={2}> \r\n                    \r\n                <Grid.Column  computer={3} >\r\n                     {/*  toolbox*/ }\r\n                    <Toolbox/>\r\n                 </Grid.Column > \r\n            \r\n                 <Grid.Column  computer={8} >     \r\n                     {/* WA*/ }              \r\n                    \r\n                    <ItemDrops  />\r\n                </Grid.Column>\r\n            \r\n             </Grid.Row>\r\n          </Grid>\r\n          </DragDropContext>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Toolbox.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ListInput.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ItemDrops.jsx",["211","212","213","214","215","216"],"import React,{memo,useReducer} from 'react'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Segment,Image, Label, Form, Header, } from 'semantic-ui-react'\r\nimport {DeleteAnDrags, RemoveAllDrags, SetDragItem} from '../Redux/DnDItems/action'\r\nimport {ListFields} from './protobuf/Fields_pb'\r\nimport { RenderProto } from './Fields/RenderFields'\r\nimport {EditRenderField} from \"./Fields/EditsFields\";\r\nimport { useForm, useFormContext, FormProvider, Controller } from \"react-hook-form\";\r\nimport Axios from \"../axiosConfig\";\r\nimport {ExceptionList} from \"./Fields/ExceptionList\";\r\nimport {modalReducer} from \"../ModalReducer/ModalReducer\";\r\n\r\n\r\nfunction bufferToBase64(buffer) {\r\n    const binary = String.fromCharCode.apply(null, buffer);\r\n    return window.btoa(binary);\r\n}\r\nfunction base64ToArrayBuffer(base64) { // use while rerender\r\n    const binary_string = window.atob(base64);\r\n    const len = binary_string.length;\r\n    const bytes = new Uint8Array(len);\r\n    for (let i = 0; i < len; i++) {\r\n        bytes[i] = binary_string.charCodeAt(i);\r\n    }\r\n    console.log(bytes.buffer)\r\n    return bytes;\r\n}\r\nfunction ItemDrops() {\r\n  const  DnD= useSelector(state => state.dnd)\r\n  const dispatch = useDispatch()\r\n  const onSave=()=>{\r\n   const nlistFields=new ListFields()\r\n   nlistFields.setFieldsList(DnD.fields)\r\n   const serialized=nlistFields.serializeBinary()//save in Database\r\n      const data={\"data\":bufferToBase64(serialized)}\r\n     Axios().post(\"dynamicforms/saveform\",data,).then(e=>{\r\n\r\n   }).catch(er=>{console.log(er)})\r\n  }\r\n\r\n    return (\r\n        <Segment secondary  stacked>\r\n          <Segment>\r\n          <Label size={50} onClick={()=>dispatch(RemoveAllDrags())} color=\"red\" attached=\"top right\" style={{paddingRight:\"18px\",height:\"10Ppx\"}} icon=\"remove\"   removeIcon />\r\n          <Header> Drag Items from toolbar and place here </Header>\r\n          <Label size={50} onClick={()=>onSave()} color=\"green\" attached=\"top left\" style={{paddingRight:\"18px\",height:\"10Ppx\"}} icon=\"save\"   />\r\n          </Segment>\r\n          \r\n        <Droppable  isCombineEnabled={true}  style={{height:\"500px\"}} droppableId=\"workingArea\" >\r\n      \r\n        {(provided,snapshot )=>(\r\n      \r\n               <div ref={provided.innerRef} {...provided.droppableProps} isDraggingOver={snapshot.isDraggingOver}  >\r\n                 <Segment  widths=\"equal\"  style={{height:\"max-content\",minHeight:\"450px\", backgroundColor:\"#fff\"}}>\r\n                   \r\n                    <DropList snapshot={snapshot} items={DnD.fields}/>\r\n                 </Segment>\r\n\r\n                {provided.placeholder}\r\n               </div>\r\n                    \r\n              \r\n           )}\r\n       \r\n         </Droppable>\r\n      </Segment>\r\n       \r\n    )\r\n}\r\n\r\nexport default ItemDrops\r\n\r\n\r\n function  DropList({snapshot,items}) {\r\n     const methods = useForm();\r\n  return(\r\n      <FormProvider {...methods} >\r\n    <Form divided={snapshot.isDragging} verticalAlign='middle'>\r\n\r\n        {items.map((item,i)=>{\r\n              \r\n            return (\r\n             \r\n             <Draggable key={item.getUid()} draggableId={item.getUid()} index={i}>\r\n            {(provided, snapshot) => (\r\n                          <div ref={provided.innerRef} key={item.getUid()} \r\n                            {...provided.draggableProps} isDragging={snapshot.isDraggingOver}\r\n                            isDragging={snapshot.isDraggingOver}   style={provided.draggableProps.style}  >\r\n                              \r\n                                 <EachItem item={item} provided={provided}/>\r\n                             \r\n                         </div>\r\n                      \r\n        )}  \r\n       \r\n      </Draggable>\r\n   \r\n      )})}\r\n                  \r\n    </Form>\r\n      </FormProvider>\r\n          )}\r\n\r\n\r\nconst  EachItem=({item,provided}) =>{\r\n\r\n    const nRenderProto = new RenderProto();\r\n    const field = nRenderProto[String(item.getRenderFunc())](item);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n  return (\r\n                               <Segment textAlign=\"left\"  secondary  >\r\n                            \r\n                                 <Label color=\"orange\" attached=\"top left\" ribbon style={{width:\"min-content\"}} icon=\"align justify\" {...provided.dragHandleProps} />\r\n                                \r\n                                 <Label  attached=\"bottom right\" onClick={()=>{dispatch(DeleteAnDrags(item.getUid()))}} color=\"red\" style={{width:\"min-content\"}} icon=\"trash alternate\"  />  <br></br>\r\n                                   <CustomModal item={item}/>\r\n                                   {field}\r\n                                 \r\n                                </Segment >\r\n  )\r\n}\r\n\r\n\r\n\r\nconst CustomModal=memo(({item})=>{\r\n\r\n    const[state,dispatches]=useReducer(modalReducer,{isOpen:false,item:item})\r\n    const nEditRenderField=new EditRenderField()\r\n    let render=null;\r\n    if (!ExceptionList.includes(String(item.getRenderFunc())) )\r\n        render= nEditRenderField[String(item.getRenderFunc())](item)\r\n\r\n    return (\r\n        <Modal\r\n            closeIcon\r\n            open={state.isOpen}\r\n            onClose={() => dispatches({type:\"CLOSE\"})}\r\n            trigger={render!==null?<Label onClick={()=>dispatches({type:\"OPEN\"})} attached=\"top right\"  color=\"yellow\" style={{width:\"min-content\"}} icon=\"edit\"  />:null}>\r\n            <Modal.Header>Make Your Changes</Modal.Header>\r\n            <Modal.Content>\r\n                {render}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n\r\n})\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\PresistedReducers\\PresistedReducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Fields_pb.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\actions.jsx",["217"],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\RenderFields.jsx",["218","219","220","221","222"],"import React,{memo} from 'react'\r\nimport {Checkbox, Form, Label, Radio, Segment} from 'semantic-ui-react';\r\nimport FormInput from \"semantic-ui-react/dist/commonjs/collections/Form/FormInput\";\r\nimport {useFormContext} from \"react-hook-form\";\r\nimport {ConnectForm} from \"./ConnectForm\";\r\n\r\n\r\nexport class RenderProto{\r\n  constructor(){\r\n    this.RenderRadio= function(item){\r\n      const arr=item.getRadio().getValuesList();\r\n\r\n    return(\r\n        <ConnectForm>\r\n            {({ register })=>(\r\n\r\n        <Form.Field  >\r\n          <Label content={item.getRadio().getLabel()} />\r\n    \r\n           { \r\n           arr.map((e,i)=>(<Form.Input  ref={register({})} type=\"radio\" key={i}  value={e} label={e}  name={item.getUid()}  />))\r\n           }\r\n       \r\n        </Form.Field> )}\r\n            </ConnectForm>\r\n      \r\n    )\r\n    };\r\n    this.RenderNumber=function (item) {\r\n      return(\r\n          <ConnectForm>\r\n              {({register,control})=>(\r\n          <Form.Input  ref={register({})}  width={5} label={item.getNumber().getLabel()}    name={item.getUid()} type=\"number\" min={item.getNumber().getMin()} max={item.getNumber().getMax()}/>\r\n              )}\r\n          </ConnectForm>\r\n      )\r\n              }\r\n    this.RenderText=function(item){\r\n\r\n        return(\r\n            <ConnectForm>\r\n                {({register,control})=>(\r\n                <Form.Input width={5} label={item.getText().getLabel()}  ref={register({})}   required/>)}\r\n            </ConnectForm>\r\n        )\r\n    }\r\n    this.RenderCheckBox=function (item) {\r\n        return(\r\n          <ConnectForm>\r\n              {({register})=>(\r\n        <Form.Checkbox  ref={register({})}  label={item.getCheckbox().getLabel()} name={item.getUid()}/>)}\r\n          </ConnectForm>\r\n        )\r\n\r\n    }\r\n    this.RenderDropDown=function (item) {\r\n        let arr=[];\r\n        item.getDropdown().getItemsList().forEach(e=>{\r\n             arr.push({key:e,text:e,value:e})\r\n            }\r\n        );\r\n\r\n\r\n        return(\r\n            <ConnectForm>\r\n                {({register})=>(\r\n                <Form.Select width={5} ref={register({})}  renderLabel  label={item.getDropdown().getLabel()}  options={arr} name={item.getUid()}/>)}\r\n            </ConnectForm>\r\n        )\r\n\r\n    }\r\n    this.RenderDate= function(item){\r\n\r\n        return(\r\n            <ConnectForm>\r\n                {({register})=>(\r\n                <FormInput  width={5}  ref={register({})}  label={item.getDate().getLabel()} type=\"Date\" name={item.getUid()} />)}\r\n            </ConnectForm>\r\n        )\r\n    }\r\n\r\n    this.RenderLabel=function (item) {\r\n        return(\r\n            <Form.Field>\r\n                <Label content={item.getLabel().getValue()}/>\r\n            </Form.Field>\r\n        )\r\n\r\n    }\r\n    this.RenderRange=function(item){\r\n        return(\r\n            <div>\r\n                 <Label content={item.getRange().getLabel()}/>\r\n                 <input name={item.getUid()} min={item.getRange().getFrom()} max={item.getRange().getTo()} multiple={item.getRange().getMultiples()} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ConnectForm.js",["223","224"],"import React, { memo, } from \"react\";\r\nimport { useFormContext} from \"react-hook-form\";\r\nexport const ConnectForm = ({ children }) => {\r\n    const methods = useFormContext();\r\n\r\n    return children({ ...methods });\r\n};","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\EditsFields.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\MemoEditFields.jsx",["225","226"],"import React, {memo, useReducer, useState} from 'react'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DragEdit} from \"../../Redux/DnDItems/action\";\r\nimport {Form, Portal, Container, List, Icon, Button} from \"semantic-ui-react\";\r\n\r\n\r\n\r\nexport const Memolabel=memo(({item})=>{\r\n    const {register,handleSubmit}=useForm();\r\n    const [PortalOpen,setPortalOpen]=useState(false);\r\n    const dispatch=useDispatch();\r\n    const done=(e)=>{\r\n     item.getLabel().setValue(e.label)\r\n        dispatch(DragEdit())\r\n        setPortalOpen(false)\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <Form onSubmit={handleSubmit(done)}>\r\n        <input ref={register({ required: true})} required name=\"label\" placeholder={ \"current value:\"+item.getLabel().getValue()}  />\r\n        <input type=\"submit\"  value=\"Save\"/>\r\n            <Portal open={PortalOpen} ><h1>✔</h1> </Portal>\r\n\r\n        </Form>\r\n    </div>)\r\n})\r\n\r\nexport const MemoRadio=memo(function({item}){\r\n    const {register,reset,handleSubmit}=useForm();\r\n    const dispatch=useDispatch();\r\n    const Radio=item.getRadio()\r\n    const AddValue=(e)=>{\r\n        Radio.setLabel(e.label)\r\n        Radio.addValues(e.val)\r\n        reset()\r\n        dispatch(DragEdit())\r\n    }\r\n    const DeleteAnItemFromList=  (pos) => {\r\n        const s = [...Radio.getValuesList().slice(0, pos).concat(Radio.getValuesList().slice(pos + 1, item.getRadio().getValuesList().length))]\r\n        item.getRadio().clearValuesList()\r\n        item.getRadio().setValuesList(s)\r\n        reset()\r\n         dispatch(DragEdit())\r\n    }\r\n      return(\r\n          <div>\r\n              <Form onSubmit={handleSubmit(AddValue)}>\r\n                  <input name=\"label\" defaultValue={Radio.getLabel()}  ref={register()}   placeholder={\"current value:\"+Radio.getLabel().toString()}/>\r\n              <Container>\r\n                  <List >\r\n                      {item.getRadio().getValuesList().map((e,i)=>(\r\n                          <List.Item key={i} >\r\n                              <Icon name='remove' onClick={()=>DeleteAnItemFromList(i)} color=\"blue\"/>\r\n                              <List.Content>\r\n                                  {e}\r\n                              </List.Content>\r\n\r\n                          </List.Item>\r\n                      ))}\r\n                  </List>\r\n              </Container>\r\n\r\n                  <input ref={register({ required: true})} required name=\"val\" placeholder=\"Enter a value to add to list\"  />\r\n                  <input type=\"submit\"  value=\"Save\"/>\r\n              </Form>\r\n          </div>\r\n      )\r\n})\r\n\r\nexport  const MemoNumber=memo(({item})=>{\r\n    const {register,reset,handleSubmit}=useForm();\r\n    const dispatch=useDispatch();\r\n    const Number=item.getNumber();\r\n    const save=(e)=>{\r\n        Number.setLabel(e.label)\r\n        Number.setMax(e.maximum)\r\n        Number.setMin(e.minimum)\r\n        reset()\r\n        dispatch(DragEdit())\r\n    }\r\n    return(\r\n        <div>\r\n            <Form onSubmit={handleSubmit(save)}>\r\n                <input ref={register()} required name=\"label\"  defaultValue={Number.getLabel().toString()}  />\r\n                <input placeholder=\"min\" defaultValue={`${Number.getMin()}`} name=\"minimum\" type=\"number\" ref={register({required:true})}   />\r\n                <input placeholder=\"max\" defaultValue={`${Number.getMax()}`} name=\"maximum\" type=\"number\" ref={register({required:true})}   />\r\n                <input type=\"submit\" />\r\n            </Form>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport  const MemoCheckbox=({item})=>{\r\n    const {register,handleSubmit}=useForm();\r\n    const dispatch=useDispatch();\r\n    const CheckBox=item.getCheckbox();\r\n    const Save=(e)=>{\r\n        CheckBox.setLabel(e.checkbox)\r\n        dispatch(DragEdit())\r\n    }\r\n    return(\r\n        <div>\r\n            <Form onSubmit={handleSubmit(Save)}>\r\n                <input type=\"text\" defaultValue={CheckBox.getLabel()} placeholder={\"current value:\"+CheckBox.getLabel().toString()}  name=\"checkbox\" ref={register({required:true})}/>\r\n                <input type=\"submit\"/>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport  const MemoDropDown=({item})=> {\r\n    const {register, reset,handleSubmit} = useForm()\r\n    const dispatch = useDispatch();\r\n    const DropDown = item.getDropdown();\r\n\r\n    const AddValue=(e)=>{\r\n        DropDown.setLabel(e.dropdownLabel)\r\n        DropDown.addItems(e.val)\r\n        reset()\r\n        dispatch(DragEdit())\r\n    }\r\n    const DeleteAnItemFromList=  (pos) => {\r\n        const s = [...DropDown.getItemsList().slice(0, pos).concat(DropDown.getItemsList().slice(pos + 1, DropDown.getItemsList().length))]\r\n        DropDown.clearItemsList()\r\n        DropDown.setItemsList(s)\r\n        reset()\r\n        dispatch(DragEdit())\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Form onSubmit={handleSubmit(AddValue)}>\r\n                    <input type=\"text\" defaultValue={DropDown.getLabel()} placeholder={\"current value:\" + DropDown.getLabel().toString()} name=\"dropdownLabel\" ref={register({required: true})}/>\r\n                    <Container>\r\n                        <List >\r\n                            {DropDown.getItemsList().map((e,i)=>(\r\n                                <List.Item key={i} >\r\n                                    <Icon name='remove' onClick={()=>DeleteAnItemFromList(i)} color=\"blue\"/>\r\n                                    <List.Content>\r\n                                        {e}\r\n                                    </List.Content>\r\n\r\n                                </List.Item>\r\n                            ))}\r\n                        </List>\r\n                    </Container>\r\n                    <input ref={register({ required: true})} required name=\"val\" placeholder=\"Enter a value to add to list\"  />\r\n                    <input type=\"submit\"/>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ExceptionList.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\createForm.js",["227","228","229"],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\actions.js",["230"],"F:\\frontend\\dynamic_forms\\src\\Components\\ModalReducer\\ModalReducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\utils.jsx",[],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":3,"column":36,"nodeType":"237","messageId":"238","endLine":3,"endColumn":46},{"ruleId":"235","severity":1,"message":"239","line":2,"column":52,"nodeType":"237","messageId":"238","endLine":2,"endColumn":59},{"ruleId":"235","severity":1,"message":"240","line":2,"column":76,"nodeType":"237","messageId":"238","endLine":2,"endColumn":81},{"ruleId":"235","severity":1,"message":"241","line":38,"column":7,"nodeType":"237","messageId":"238","endLine":38,"endColumn":27},{"ruleId":"235","severity":1,"message":"242","line":3,"column":61,"nodeType":"237","messageId":"238","endLine":3,"endColumn":67},{"ruleId":"235","severity":1,"message":"243","line":25,"column":11,"nodeType":"237","messageId":"238","endLine":25,"endColumn":16},{"ruleId":"235","severity":1,"message":"244","line":26,"column":11,"nodeType":"237","messageId":"238","endLine":26,"endColumn":19},{"ruleId":"235","severity":1,"message":"245","line":2,"column":26,"nodeType":"237","messageId":"238","endLine":2,"endColumn":34},{"ruleId":"235","severity":1,"message":"242","line":3,"column":61,"nodeType":"237","messageId":"238","endLine":3,"endColumn":67},{"ruleId":"235","severity":1,"message":"246","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":13},{"ruleId":"235","severity":1,"message":"247","line":16,"column":11,"nodeType":"237","messageId":"238","endLine":16,"endColumn":21},{"ruleId":"235","severity":1,"message":"248","line":17,"column":11,"nodeType":"237","messageId":"238","endLine":17,"endColumn":18},{"ruleId":"235","severity":1,"message":"249","line":4,"column":17,"nodeType":"237","messageId":"238","endLine":4,"endColumn":24},{"ruleId":"235","severity":1,"message":"240","line":4,"column":25,"nodeType":"237","messageId":"238","endLine":4,"endColumn":30},{"ruleId":"235","severity":1,"message":"250","line":5,"column":40,"nodeType":"237","messageId":"238","endLine":5,"endColumn":51},{"ruleId":"235","severity":1,"message":"251","line":9,"column":19,"nodeType":"237","messageId":"238","endLine":9,"endColumn":33},{"ruleId":"235","severity":1,"message":"252","line":9,"column":49,"nodeType":"237","messageId":"238","endLine":9,"endColumn":59},{"ruleId":"235","severity":1,"message":"253","line":19,"column":10,"nodeType":"237","messageId":"238","endLine":19,"endColumn":29},{"ruleId":"254","severity":1,"message":"255","line":89,"column":29,"nodeType":"256","endLine":89,"endColumn":65},{"ruleId":"257","severity":1,"message":"258","line":22,"column":28,"nodeType":"259","messageId":"260","endLine":22,"endColumn":40},{"ruleId":"235","severity":1,"message":"261","line":1,"column":15,"nodeType":"237","messageId":"238","endLine":1,"endColumn":19},{"ruleId":"235","severity":1,"message":"262","line":2,"column":9,"nodeType":"237","messageId":"238","endLine":2,"endColumn":17},{"ruleId":"235","severity":1,"message":"263","line":2,"column":32,"nodeType":"237","messageId":"238","endLine":2,"endColumn":37},{"ruleId":"235","severity":1,"message":"249","line":2,"column":39,"nodeType":"237","messageId":"238","endLine":2,"endColumn":46},{"ruleId":"235","severity":1,"message":"251","line":4,"column":9,"nodeType":"237","messageId":"238","endLine":4,"endColumn":23},{"ruleId":"235","severity":1,"message":"264","line":1,"column":8,"nodeType":"237","messageId":"238","endLine":1,"endColumn":13},{"ruleId":"235","severity":1,"message":"261","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":21},{"ruleId":"235","severity":1,"message":"265","line":1,"column":22,"nodeType":"237","messageId":"238","endLine":1,"endColumn":32},{"ruleId":"235","severity":1,"message":"266","line":5,"column":46,"nodeType":"237","messageId":"238","endLine":5,"endColumn":52},{"ruleId":"235","severity":1,"message":"267","line":4,"column":48,"nodeType":"237","messageId":"238","endLine":4,"endColumn":53},{"ruleId":"268","severity":1,"message":"269","line":19,"column":6,"nodeType":"270","endLine":19,"endColumn":8,"suggestions":"271"},{"ruleId":"272","severity":1,"message":"273","line":29,"column":88,"nodeType":"274","messageId":"275","endLine":29,"endColumn":89,"fix":"276"},{"ruleId":"235","severity":1,"message":"253","line":61,"column":10,"nodeType":"237","messageId":"238","endLine":61,"endColumn":29},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Message' is defined but never used.","'Image' is defined but never used.","'passwordResetFailure' is assigned a value but never used.","'Loader' is defined but never used.","'sdata' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'valid_cred' is assigned a value but never used.","'message' is assigned a value but never used.","'Segment' is defined but never used.","'SetDragItem' is defined but never used.","'useFormContext' is defined but never used.","'Controller' is defined but never used.","'base64ToArrayBuffer' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","'memo' is defined but never used.","'Checkbox' is defined but never used.","'Radio' is defined but never used.","'React' is defined but never used.","'useReducer' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["279"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"280","text":"281"},"no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},[1277,1312],"\r\n                                .","Update the dependencies array to be: [dispatch]",{"range":"284","text":"285"},[861,863],"[dispatch]"]