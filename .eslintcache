[{"F:\\frontend\\dynamic_forms\\src\\index.js":"1","F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js":"2","F:\\frontend\\dynamic_forms\\src\\App.js":"3","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx":"4","F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js":"5","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx":"6","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx":"7","F:\\frontend\\dynamic_forms\\src\\store.js":"8","F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js":"9","F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx":"10","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js":"11","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js":"12","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js":"13","F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx":"14","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js":"15","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js":"16","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js":"17","F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx":"18","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js":"19","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js":"20","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js":"21","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx":"22","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js":"23","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx":"24","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx":"25","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Home.jsx":"26","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Toolbox.jsx":"27","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ListInput.js":"28","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ItemDrops.jsx":"29","F:\\frontend\\dynamic_forms\\src\\Components\\PresistedReducers\\PresistedReducers.js":"30","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Fields_pb.js":"31","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\reducers.js":"32","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\type.js":"33","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\action.js":"34","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\actions.jsx":"35","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Utils.jsx":"36","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\utils.jsx":"37","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\RenderFields.jsx":"38"},{"size":517,"mtime":1610374072713,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1610374072713,"results":"41","hashOfConfig":"40"},{"size":475,"mtime":1611640897471,"results":"42","hashOfConfig":"40"},{"size":2569,"mtime":1612968303054,"results":"43","hashOfConfig":"40"},{"size":279,"mtime":1610374072713,"results":"44","hashOfConfig":"40"},{"size":2358,"mtime":1612968303102,"results":"45","hashOfConfig":"40"},{"size":1454,"mtime":1611764482639,"results":"46","hashOfConfig":"40"},{"size":470,"mtime":1611851471097,"results":"47","hashOfConfig":"40"},{"size":629,"mtime":1612619289308,"results":"48","hashOfConfig":"40"},{"size":3756,"mtime":1612113767764,"results":"49","hashOfConfig":"40"},{"size":925,"mtime":1610717576710,"results":"50","hashOfConfig":"40"},{"size":1357,"mtime":1610975531674,"results":"51","hashOfConfig":"40"},{"size":151,"mtime":1610627074096,"results":"52","hashOfConfig":"40"},{"size":179,"mtime":1612027919385,"results":"53","hashOfConfig":"40"},{"size":1562,"mtime":1612089795047,"results":"54","hashOfConfig":"40"},{"size":135,"mtime":1612089735144,"results":"55","hashOfConfig":"40"},{"size":960,"mtime":1612089736957,"results":"56","hashOfConfig":"40"},{"size":3247,"mtime":1612762477230,"results":"57","hashOfConfig":"40"},{"size":1196,"mtime":1612089891322,"results":"58","hashOfConfig":"40"},{"size":1480,"mtime":1611497098970,"results":"59","hashOfConfig":"40"},{"size":329,"mtime":1611156217890,"results":"60","hashOfConfig":"40"},{"size":2407,"mtime":1610899584920,"results":"61","hashOfConfig":"40"},{"size":2456,"mtime":1611497141158,"results":"62","hashOfConfig":"40"},{"size":2514,"mtime":1610904803294,"results":"63","hashOfConfig":"40"},{"size":3105,"mtime":1610986117013,"results":"64","hashOfConfig":"40"},{"size":2002,"mtime":1612974756602,"results":"65","hashOfConfig":"40"},{"size":3821,"mtime":1612969574538,"results":"66","hashOfConfig":"40"},{"size":1181,"mtime":1612893043774,"results":"67","hashOfConfig":"40"},{"size":4040,"mtime":1612975275610,"results":"68","hashOfConfig":"40"},{"size":321,"mtime":1612715137160,"results":"69","hashOfConfig":"40"},{"size":72983,"mtime":1612969743877,"results":"70","hashOfConfig":"40"},{"size":989,"mtime":1612887556324,"results":"71","hashOfConfig":"40"},{"size":117,"mtime":1612629402698,"results":"72","hashOfConfig":"40"},{"size":355,"mtime":1612632488320,"results":"73","hashOfConfig":"40"},{"size":3543,"mtime":1612969793470,"results":"74","hashOfConfig":"40"},{"size":361,"mtime":1612888216887,"results":"75","hashOfConfig":"40"},{"size":361,"mtime":1612888216887,"results":"76","hashOfConfig":"40"},{"size":2005,"mtime":1612978082661,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"m3no2f",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},"F:\\frontend\\dynamic_forms\\src\\index.js",[],["164","165"],"F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js",[],"F:\\frontend\\dynamic_forms\\src\\App.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx",[],"F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx",["166"],"import React,{ useState} from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { NavLink, Link,withRouter, useHistory} from 'react-router-dom'\r\nimport { Menu,Dropdown, Button, } from 'semantic-ui-react'\r\nimport {LogoutApiCall} from \"../Redux/UserDetails/UserDetails\";\r\n\r\n\r\nfunction MenuComponent(props) {\r\n    const [activeTab, setactiveTab] = useState('home')\r\n    const history=useHistory()\r\n    const onclickTab = (name) => {\r\n        setactiveTab(name)\r\n    };\r\n    const dispatch = useDispatch()\r\n    const logout=()=>{\r\n      dispatch(LogoutApiCall())\r\n\r\n    }\r\n\r\n    const userdata = useSelector(state => state.userdetails);\r\n    console.log(\"userdata\",userdata.islogin)\r\n\r\n    return (\r\n       \r\n        <Menu secondary pointing>\r\n          \r\n    \r\n        <Menu.Item as={NavLink} to='/Home'  name='home' active={activeTab === 'home'} onClick={()=>onclickTab('home')}/>\r\n        {userdata.islogin ?(\r\n          <Menu.Menu>\r\n         <Menu.Item as={NavLink} to=\"/createForm\" name='createform' active={activeTab === 'createform'} onClick={()=>onclickTab('createform')} />\r\n         <Menu.Item as={NavLink} to=\"/respondedForm\" name=\"respondedForm\" active={activeTab=== 'respondedForm'} onClick={()=>onclickTab('respondedForm')} /></Menu.Menu>\r\n        ):null\r\n        }\r\n        { userdata.islogin  ? \r\n        (\r\n          <Menu.Menu position='right'>\r\n          <Menu.Item>\r\n            <Dropdown item  text={userdata.username[0].toUpperCase()}>\r\n               <Dropdown.Menu>\r\n                <Dropdown.Item >{userdata.email}</Dropdown.Item>\r\n                 <Dropdown.Item as={Link} to=\"/userSettings\" >settings</Dropdown.Item>\r\n                 <Dropdown.Item as={Link} to=\"\">change password</Dropdown.Item>\r\n                 <Dropdown.Item as={Button} onClick={()=>logout()} >logout</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n          </Menu.Menu>\r\n        ):\r\n        ( \r\n        <Menu.Menu position=\"right\">\r\n        <Button as={NavLink} active={activeTab === 'login'} to='/login' onClick={()=>onclickTab('login')} color=\"teal\">SignIn</Button>\r\n        <Button as={NavLink} active={activeTab === 'Register'} to=\"/Register\" onClick={()=>onclickTab('Register')}  color=\"twitter\">SignUp</Button>\r\n        </Menu.Menu>)\r\n       }\r\n      </Menu>\r\n    )\r\n}\r\n\r\nexport default withRouter(MenuComponent);","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx",[],"F:\\frontend\\dynamic_forms\\src\\store.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx",["167","168"],"import React,{useEffect} from 'react'\r\nimport { Button,Form, Grid, Header, Label, Loader, Message, Segment,Dimmer,Image } from 'semantic-ui-react'\r\nimport { useForm,Controller } from \"react-hook-form\";\r\nimport { useSelector,useDispatch} from 'react-redux';\r\nimport {   useHistory } from 'react-router-dom';\r\nimport { LoginApiCall } from '../Redux/Login/action';\r\n\r\n\r\nfunction Login(props) {\r\n  //form\r\n  const {register,errors,handleSubmit,trigger,setValue,control}=useForm();\r\n\r\n  useEffect(() => {\r\n     \r\n      register({ name: \"password\" }, { required: {value:true,message:\"Password required\"}});\r\n      register({name:\"email\"},{required:{value:true,message:\"Email id required\"},pattern:  {value:/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,message:\"Invalid E-mail Id\"}})\r\n  }, );\r\n \r\n  const valid=async (e, { name, value }) => {\r\n    setValue(name, value);\r\n    await trigger({ name });\r\n  }\r\n  const submitTo=(data)=>{\r\n    dispatch(LoginApiCall(data))\r\n  }\r\n\r\n  //redirect\r\n  var history=useHistory();\r\n  const onClickSignIn=()=>{\r\n    history.push(\"/Register\")\r\n  }  \r\n  const onClickForgot=()=>{\r\n    history.push(\"/ForgotPassword\")\r\n  }\r\n  //redux\r\n  const sdata=useSelector(state=>state.login)\r\n  const dispatch = useDispatch()\r\n  if(sdata.islogin===true){\r\n    history.push(\"/Home\")\r\n  }\r\n  \r\n  //style\r\n  const TransStyle={\r\n      border:\"none\",\r\n      borderRadius: \"5px\",\r\n      background: \"rgba(255, 255, 255,0)\",\r\n      color:\"teal\",\r\n      cursor: \"pointer\"\r\n  }\r\n \r\n\r\n   \r\n    return (\r\n      <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\r\n      <Grid.Column style={{ maxWidth: 450 }} >\r\n        <Header as='h2' textAlign='center'>\r\n          Sign-in\r\n        </Header>\r\n        <Form size='large' onSubmit={handleSubmit(submitTo)}>\r\n        <Segment stacked>\r\n        \r\n          <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"email\" fluid icon='mail' iconPosition='left'  placeholder='email' onChange={valid} error={errors.email ? true :false}/>\r\n          {errors.email && <Label pointing=\"above\" color=\"red\">{errors.email.message}</Label>}\r\n          <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"password\" fluid icon='lock' iconPosition='left'    placeholder='Password' type='password' onChange={valid} error={errors.password ? true :false} />\r\n          {errors.password && <Label pointing=\"above\" color=\"red\">{errors.password.message}</Label>}\r\n          <Button color='blue' fluid size='large'>\r\n            LogIn\r\n          </Button>\r\n          <button  style={TransStyle} color=\"white\" onClick={()=>onClickForgot()}>ForgotPassword</button><br/>\r\n         Not an User <button   style={TransStyle}  color=\"blue\" onClick={()=>onClickSignIn()}>Sign Up</button>\r\n        </Segment>\r\n      </Form>\r\n        \r\n    <Segment>\r\n      {console.log(sdata.laoding)}\r\n        {sdata.laoding===true ?(<Dimmer active>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>):( sdata.message)}\r\n    </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n    )\r\n}\r\n/*const mapStateToProps=state=>{\r\n  return{\r\n    laod:state.loading\r\n  }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    disp:()=>dispatch(RegisterApiCall())\r\n  }\r\n}*/\r\n\r\n\r\nexport default  Login;","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js",["169"],"import Axios from \"../../axiosConfig\";\r\nimport { PASSWORD_REQUEST, PASSWORD_REQ_FAILURE, PASSWORD_REQ_SUCCESS, PASSWORD_RESET_FAILURE, PASSWORD_RESET_REQUEST, PASSWORD_RESET_SUCCESS } from \"./types\"\r\n\r\n\r\nconst passwordChangeRequest=()=>{\r\n     return{\r\n         type:PASSWORD_REQUEST         \r\n}\r\n}\r\n\r\nconst passwordChangeReqSuccces=(data)=>{\r\n    return{\r\n        type:PASSWORD_REQ_SUCCESS,\r\n        payload:data\r\n    }\r\n}\r\n\r\nconst passwordChangeReqFaiure=(error)=>{\r\n    return{\r\n        type:PASSWORD_REQ_FAILURE,\r\n        payload:error\r\n    }\r\n}\r\n\r\nconst  passwordResetRquest=()=>{\r\n    return{\r\n        type:PASSWORD_RESET_REQUEST         \r\n       }\r\n}\r\n\r\nconst passwordResetSuccess=(data)=>{\r\n    return{\r\n        type:PASSWORD_RESET_SUCCESS,\r\n        payload:data\r\n    }\r\n}\r\n\r\nconst passwordResetFailure=(error)=>{\r\n    return{\r\n        type:PASSWORD_RESET_FAILURE,\r\n        payload:error\r\n    }\r\n}\r\n\r\nexport const PasswordRequestAPI=(data)=>{\r\n    return (dispatch)=>{\r\n        dispatch(passwordChangeRequest())\r\n        Axios().post(\"/authentication/RequestPasswordChange\",data)\r\n               .then(response=>{\r\n                   if(response.data[\"success\"]===true){\r\n                   dispatch(passwordChangeReqSuccces(\"check your email for verification\"))\r\n                }\r\n                else{\r\n                    dispatch(passwordChangeReqSuccces(\"something went wrong\"))\r\n                }\r\n               })\r\n               .catch(error=>{\r\n                try {\r\n                   \r\n                    if(error.response.data!==null){\r\n                        dispatch(passwordChangeReqFaiure(error.response.data[\"detail\"]))\r\n                    }\r\n                }\r\n                catch(e){\r\n                    dispatch(passwordChangeReqFaiure(\"try again later\"))\r\n                }\r\n                  \r\n               })\r\n    }\r\n}\r\n\r\nexport const PasswordResetAPI=(data)=>{\r\n    return (dispatch)=>{\r\n        dispatch(passwordResetRquest())\r\n        Axios().patch(\"authentication/SetNewPassword\",data).then( respsone=>{\r\n           \r\n           if(respsone.data[\"success\"]===true){\r\n               dispatch(passwordResetSuccess(\"password reset Successfully\"))\r\n           }\r\n      }\r\n    ).catch(error=>{\r\n        if(error.response.status!==404)\r\n          dispatch(passwordResetSuccess(\"password reset Successfully\"))\r\n        else\r\n         dispatch(passwordResetSuccess(\"Try again later\"))\r\n    \r\n    })\r\n  }\r\n        \r\n\r\n}","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx",["170","171","172"],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx",["173","174","175","176","177"],"\r\nimport React,{useEffect, useState} from 'react'\r\nimport { Button,Form, Grid, Header, Label, Message, Segment,Loader } from 'semantic-ui-react'\r\nimport { useForm,Controller } from \"react-hook-form\";\r\nimport { useSelector,useDispatch} from 'react-redux';\r\nimport Axios from '../../axiosConfig';\r\nimport { PasswordResetAPI } from '../../Redux/passwordChange/actions';\r\n\r\n\r\n\r\nfunction Passwordreset(props) {\r\n    const {register,errors,handleSubmit,trigger,setValue,control}=useForm()\r\n   \r\n    \r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const valid_cred = urlParams.get('token_valid','');\r\n    const message=urlParams.get('message',\"\")\r\n    const uid64=urlParams.get(\"uidb64\",\"\")\r\n    const token=urlParams.get(\"token\",\"\")\r\n    //http://localhost:3000/passwordReset?token_valid=True&message=CredentialsValid&uidb64=NzhkZTg1YTQtMzBkYy00NTNiLTk4ZGItOGJmZmI5MzJhMTYz&token=agorxd-e8dad31e03a17dbdd0b82efa3f86bb2c\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n        register({name:\"password\"},{required:{value:true,message:\"PleaseFill\"},minLength:{value:6,message:\"Must be 6 Character length\"}})\r\n        register({name:\"confrimpassword\"},{required:{value:true,message:\"PleaseFill\"},minLength:{value:6,message:\"Must be 6 Character length\"}})\r\n    }, );\r\n  \r\n   \r\n    const valid=async (e, { name, value }) => {\r\n      setValue(name, value);\r\n      await trigger({ name });\r\n    }\r\n   \r\n     \r\n      \r\n  \r\n    //redirect\r\n\r\n    //redux\r\n    const sdata=useSelector(state=>state.changepassword)\r\n    const dispatch=useDispatch()\r\n\r\n    const submitTo=(data)=>{\r\n      data[\"token\"]=token\r\n      data[\"uid\"]=uid64\r\n      delete data['confrimpassword'];\r\n      dispatch(PasswordResetAPI(data))\r\n    }\r\n    \r\n\r\n  \r\n\r\n    \r\n\r\n  \r\n     \r\n      return (\r\n        <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 450 }} >\r\n          <Header as='h2' textAlign='center'>\r\n           Password Reset\r\n          </Header>\r\n          <Form size='large' onSubmit={handleSubmit(submitTo)}>\r\n          <Segment stacked>\r\n            <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"password\" fluid icon='lock' iconPosition='left'    placeholder='Password' type='password' onChange={valid} error={errors.password ? true :false} />\r\n            {errors.password && <Label pointing=\"above\" color=\"red\">{errors.password.message}</Label>}\r\n            <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"confrimpassword\" fluid icon='lock' iconPosition='left'    placeholder='ConfrimPassword' type='password' onChange={valid} error={errors.password ? true :false} />\r\n            {errors.confrimpassword && <Label pointing=\"above\" color=\"red\">{errors.confrimpassword.message}</Label>}\r\n            <Button color='blue' fluid size='large'>\r\n              set Password\r\n            </Button>\r\n            \r\n          </Segment>\r\n        </Form>\r\n          <Message>\r\n            {sdata.message}\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n      )\r\n      }\r\n\r\nexport default Passwordreset\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Home.jsx",["178","179","180","181"],"import React,{useState} from 'react'\r\nimport { DragDropContext} from 'react-beautiful-dnd'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport {  Grid, Segment } from 'semantic-ui-react'\r\nimport ItemDrops from './ItemDrops'\r\nimport { createUUID } from './protobuf/utils'\r\nimport Toolbox from './Toolbox'\r\nimport {DragItemAdd} from '../Redux/DnDItems/action'\r\nimport { items as Tools } from './ListInput'\r\nimport { GetAction } from './actions'\r\n\r\n\r\nfunction Home() {\r\n\r\n    const  DnD= useSelector(state => state.dnd)\r\n    const dispatch = useDispatch()\r\n    var actions=new GetAction()\r\n\r\n    const dragEndCall=(result)=>{\r\n        \r\n        let data;\r\n        const { source, destination,draggableId} = result;\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        console.log(result)\r\n        if(source.droppableId!==destination.droppableId){\r\n            if(draggableId===\"inputemail\")\r\n                {\r\n                    data = actions[String(Tools.find(e=>e.id===draggableId).action)](true);\r\n                }\r\n            else\r\n                {\r\n                    data = actions[String(Tools.find(e => e.id === draggableId).action)]();\r\n                }\r\n            dispatch(DragItemAdd(data))\r\n            \r\n                        \r\n        }\r\n       \r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <DragDropContext onDragEnd={dragEndCall} >\r\n            <Grid celled stackable >\r\n                <Grid.Row  stretched columns={2}> \r\n            {/*  toolbox*/ }\r\n        \r\n                <Grid.Column  computer={3} >\r\n                    \r\n                    <Toolbox/>\r\n                \r\n                </Grid.Column > \r\n            \r\n              {/* WA*/ }\r\n               <Grid.Column computer={8} floated>                   \r\n                    <ItemDrops  />\r\n                </Grid.Column>\r\n            \r\n             </Grid.Row>\r\n          </Grid>\r\n          </DragDropContext>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Toolbox.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ListInput.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ItemDrops.jsx",["182","183","184","185","186","187","188","189"],"import React,{useState} from 'react'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Container,Button, Modal, List, Segment,Image, Label, Form, Grid, } from 'semantic-ui-react'\r\nimport { DragEdit, RemoveAllDrags } from '../Redux/DnDItems/action'\r\nimport { DRAG_EDITS } from '../Redux/DnDItems/type'\r\nimport { RenderProto } from './Fields/RenderFields'\r\n\r\n\r\nfunction ItemDrops() {\r\n  const  DnD= useSelector(state => state.dnd)\r\n  const dispatch = useDispatch()\r\n\r\n    return (\r\n        <Segment >\r\n          <Label size={50} onClick={()=>dispatch(RemoveAllDrags())} color=\"red\" attached=\"top right\" style={{paddingRight:\"18px\",height:\"10Ppx\"}} icon=\"remove\"   removeIcon />\r\n          \r\n        <Droppable  isCombineEnabled={true}  style={{height:\"500px\"}} droppableId=\"workingArea\" >\r\n      \r\n        {(provided,snapshot )=>(\r\n      \r\n               <div ref={provided.innerRef} {...provided.droppableProps} isDraggingOver={snapshot.isDraggingOver}  >\r\n                 <Container widths=\"equal\" style={{height:\"500px\",backgroundColor:\"#fff\"}}>\r\n                    <DropList snapshot={snapshot} items={DnD.fields}></DropList>\r\n                 </Container>\r\n\r\n                {provided.placeholder}\r\n               </div>\r\n                    \r\n              \r\n           )}\r\n       \r\n         </Droppable>\r\n      </Segment>\r\n       \r\n    )\r\n}\r\n\r\nexport default ItemDrops\r\n\r\n\r\n function  DropList({snapshot,items}) {\r\n  return(\r\n    <Form divided={snapshot.isDragging} verticalAlign='middle'>\r\n\r\n        {items.map((item,i)=>{\r\n              \r\n            return (\r\n             \r\n             <Draggable key={item.getUid()} draggableId={item.getUid()} index={i}>\r\n            {(provided, snapshot) => (\r\n                          <div ref={provided.innerRef} key={item.getUid()} \r\n                            {...provided.draggableProps} isDragging={snapshot.isDraggingOver}\r\n                            isDragging={snapshot.isDraggingOver}   style={provided.draggableProps.style}  >\r\n                              \r\n                                 <EachItem item={item} provided={provided}/>\r\n                             \r\n                         </div>\r\n                      \r\n        )}  \r\n       \r\n      </Draggable>\r\n   \r\n      )})}\r\n                  \r\n    </Form>)}\r\n\r\n\r\nfunction EachItem({item,provided}) {\r\n\r\n  var nRenderProto=new RenderProto()\r\n  var g=nRenderProto[String(item.getRenderFunc())](item)\r\n\r\n  return (\r\n                               <Segment textAlign=\"left\"  secondary  >\r\n                            \r\n                                 <Label color=\"orange\" attached=\"top left\" ribbon style={{width:\"min-content\"}} icon=\"align justify\" {...provided.dragHandleProps} />\r\n                                \r\n                                 <Label attached=\"bottom right\"   color=\"red\" style={{width:\"min-content\"}} icon=\"trash alternate\"  />  <br></br>   \r\n                                  <Modal \r\n                                      content={Edits(item={item})}\r\n                                      trigger={<Label  attached=\"top right\"   color=\"green\" style={{width:\"min-content\"}} icon=\"edit\"/> }\r\n                                      actions={CustomModalActions(item=item)}\r\n                                     />\r\n                                   {g}\r\n                                 \r\n                                </Segment >\r\n  )\r\n}\r\n\r\nconst Edits=({item})=>{\r\n   \r\n  return(\r\n      <Modal.Content image>\r\n        <Image size='medium' src='/images/avatar/large/rachel.png' wrapped />\r\n        <Modal.Description>\r\n          <p>\r\n            {item.id}\r\n          </p>\r\n          <p>Is it okay to use this photo?</p>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n  );\r\n}\r\n\r\nconst CustomModalActions=({item})=>{\r\n \r\n\r\n\r\n  return(\r\n  <Modal.Actions>\r\n  <Button color='green' \r\n        labelPosition='right'\r\n        icon='checkmark' >\r\n          Done\r\n  </Button>\r\n  \r\n</Modal.Actions>)\r\n}\r\n\r\n\r\n\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\PresistedReducers\\PresistedReducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Fields_pb.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\reducers.js",["190"],"import { act } from \"react-dom/test-utils\"\r\nimport { DEL_ALL_DRAGS, DRAG_EDITS, DRAG_END } from \"./type\"\r\n\r\n\r\nconst initstate={\r\n    fields:[]\r\n}\r\n\r\nexport const DndReducers=(state=initstate,action)=>{\r\n    switch(action.type){\r\n        \r\n        case DRAG_END:\r\n\r\n            return{\r\n                ...state,\r\n                fields:[...state.fields,action.data]\r\n            }\r\n        case DRAG_EDITS:\r\n            const index = state.fields.findIndex(e => e.uid === action.data.uid); //finding index of the item\r\n            const newArray = [...state.fields]; //making a new array\r\n            newArray[index].modalOpen=action.data.modalOpen//changing value in the new array\r\n        \r\n           \r\n            return {\r\n                ...state,\r\n                fields:newArray\r\n                \r\n            }                \r\n        case DEL_ALL_DRAGS:\r\n            return{\r\n                fields:[],\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\actions.jsx",["191"],"import { createUUID } from \"./protobuf/utils\"\r\nimport {Field,Radio,Number,Text,validator,Checkbox,DropDown,Date,Label} from \"./protobuf/Fields_pb\"\r\n\r\nexport class GetAction {\r\n    constructor() {\r\n        this.GetRadio = function () {\r\n            const nRadio = new Radio()\r\n            nRadio.setNumofoption(4)\r\n            nRadio.getValuesMap().set(1, \"one\")\r\n            nRadio.getValuesMap().set(2, \"two\")\r\n            nRadio.getValuesMap().set(3, \"three\")\r\n            nRadio.getValuesMap().set(4, \"four\")\r\n            nRadio.setLabel(\"enter the question\")\r\n\r\n            const nField = new Field()\r\n            nField.setUid(createUUID())\r\n            nField.setRadio(nRadio)\r\n            nField.setRenderFunc('RenderRadio')\r\n            return nField;\r\n        }\r\n        this.GetNumber=function () {\r\n            const  nNumber=new Number()\r\n            nNumber.setLabel(\"enter the min and max for number Field\");\r\n            nNumber.setMin(0)\r\n            nNumber.setMax(100)\r\n\r\n            const nField = new Field()\r\n            nField.setUid(createUUID())\r\n            nField.setNumber(nNumber)\r\n            nField.setRenderFunc('RenderNumber')\r\n            return nField;\r\n\r\n        }\r\n      this.GetText =function (isEmail) {\r\n            const nText=new Text()\r\n            console.log(\"love me  \",isEmail)\r\n            nText.setLabel(\"Enter your label \")\r\n            var valid=new validator()\r\n            valid.setValidation(\"true\")\r\n            valid.setError(\"not to be empty\")\r\n            var valid1=new validator()\r\n            valid1.setValidation(\"^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$\")\r\n            valid1.setError(\"email id required\")\r\n            nText.getValidMap().set(\"required\",valid);\r\n            if(isEmail)\r\n            nText.getValidMap().set(\"pattern\",valid1)\r\n            nText.setType(\"email\")\r\n\r\n            const nField = new Field()\r\n            nField.setUid(createUUID())\r\n            nField.setText(nText)\r\n            nField.setRenderFunc('RenderText')\r\n            return nField;\r\n\r\n      }\r\n      this.GetCheckBox=function () {\r\n            const nChekBox=new Checkbox()\r\n            nChekBox.setLabel(\"Enter you check box value\")\r\n            const nField = new Field()\r\n            nField.setUid(createUUID())\r\n            nField.setCheckbox(nChekBox)\r\n            nField.setRenderFunc('RenderCheckBox')\r\n            return nField;\r\n\r\n      }\r\n      this.GetDrop=function () {\r\n                const nDropDown=new DropDown()\r\n                nDropDown.setLabel(\"Edit ur own text\")\r\n                nDropDown.addItems(\"one\")\r\n                nDropDown.addItems(\"two\")\r\n                const nField = new Field()\r\n                nField.setUid(createUUID())\r\n                nField.setDropdown(nDropDown)\r\n                nField.setRenderFunc('RenderDropDown')\r\n            return nField;\r\n      }\r\n      this.GetDate=function () {\r\n                const nDate=new Date()\r\n                nDate.setLabel(\"Choose Your Date\")\r\n                const nField = new Field()\r\n                nField.setUid(createUUID())\r\n                nField.setDate(nDate)\r\n                nField.setRenderFunc('RenderDate')\r\n          return nField;\r\n\r\n      }\r\n      this.GetLabel=function () {\r\n            const  nlabel =new Label()\r\n            nlabel.setValue(\"Enter some label text\")\r\n            const nField = new Field()\r\n            nField.setUid(createUUID())\r\n            nField.setLabel(nlabel)\r\n            nField.setRenderFunc('RenderLabel')\r\n\r\n        return nField;\r\n      }\r\n\r\n    }\r\n}\r\n\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Utils.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\utils.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\RenderFields.jsx",["192","193","194"],"import React from 'react'\r\nimport {Checkbox, Form, Label, Radio, Segment} from 'semantic-ui-react';\r\nimport FormInput from \"semantic-ui-react/dist/commonjs/collections/Form/FormInput\";\r\n\r\n\r\n\r\nexport class RenderProto{\r\n  constructor(){\r\n    this.RenderRadio= function(item){\r\n      const arr=[];\r\n      item.getRadio().getValuesMap().forEach(function(v, k) {\r\n        arr.push(v)\r\n    });\r\n  \r\n    return(\r\n        <Form.Field  >\r\n          <Label content={item.getRadio().getLabel()} />\r\n    \r\n           { \r\n           arr.map((e,i)=>(<Form.Input control=\"input\" type=\"radio\" key={i}   label={e}  name={item.getUid()}  />))\r\n           }\r\n       \r\n        </Form.Field>\r\n      \r\n    )\r\n    };\r\n    this.RenderNumber=function (item) {\r\n      return(          \r\n          <Form.Input width={5} label={item.getNumber().getLabel()}  type=\"number\" min={item.getNumber().getMin()} max={item.getNumber().getMax()}/>)\r\n    }\r\n    this.RenderText=function(item){\r\n\r\n        return( \r\n                <Form.Input width={5} label={item.getText().getLabel()}    required></Form.Input>\r\n        )\r\n    }\r\n    this.RenderCheckBox=function (item) {\r\n        return(\r\n        <Form.Checkbox   label={item.getCheckbox().getLabel()} name={item.getUid()}/>)\r\n\r\n    }\r\n    this.RenderDropDown=function (item) {\r\n        let arr=[];\r\n        item.getDropdown().getItemsList().forEach(e=>{\r\n             arr.push({key:e,text:e,value:e})\r\n            }\r\n        );\r\n\r\n\r\n        return(\r\n                <Form.Select width={5} renderLabel  label={item.getDropdown().getLabel()}  options={arr} name={item.getUid()}/>\r\n        )\r\n\r\n    }\r\n    this.RenderDate= function(item){\r\n\r\n        return(\r\n                <FormInput width={5} label={item.getDate().getLabel()} type=\"Date\" name={item.getUid()} />\r\n        )\r\n    }\r\n\r\n    this.RenderLabel=function (item) {\r\n        return(\r\n            <Form.Field>\r\n                <Label content={item.getLabel().getValue()}/>\r\n            </Form.Field>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n}",{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":10,"column":11,"nodeType":"201","messageId":"202","endLine":10,"endColumn":18},{"ruleId":"199","severity":1,"message":"203","line":2,"column":52,"nodeType":"201","messageId":"202","endLine":2,"endColumn":59},{"ruleId":"199","severity":1,"message":"204","line":2,"column":76,"nodeType":"201","messageId":"202","endLine":2,"endColumn":81},{"ruleId":"199","severity":1,"message":"205","line":38,"column":7,"nodeType":"201","messageId":"202","endLine":38,"endColumn":27},{"ruleId":"199","severity":1,"message":"206","line":3,"column":61,"nodeType":"201","messageId":"202","endLine":3,"endColumn":67},{"ruleId":"199","severity":1,"message":"207","line":25,"column":11,"nodeType":"201","messageId":"202","endLine":25,"endColumn":16},{"ruleId":"199","severity":1,"message":"208","line":26,"column":11,"nodeType":"201","messageId":"202","endLine":26,"endColumn":19},{"ruleId":"199","severity":1,"message":"209","line":2,"column":26,"nodeType":"201","messageId":"202","endLine":2,"endColumn":34},{"ruleId":"199","severity":1,"message":"206","line":3,"column":61,"nodeType":"201","messageId":"202","endLine":3,"endColumn":67},{"ruleId":"199","severity":1,"message":"210","line":6,"column":8,"nodeType":"201","messageId":"202","endLine":6,"endColumn":13},{"ruleId":"199","severity":1,"message":"211","line":16,"column":11,"nodeType":"201","messageId":"202","endLine":16,"endColumn":21},{"ruleId":"199","severity":1,"message":"212","line":17,"column":11,"nodeType":"201","messageId":"202","endLine":17,"endColumn":18},{"ruleId":"199","severity":1,"message":"209","line":1,"column":15,"nodeType":"201","messageId":"202","endLine":1,"endColumn":23},{"ruleId":"199","severity":1,"message":"213","line":4,"column":17,"nodeType":"201","messageId":"202","endLine":4,"endColumn":24},{"ruleId":"199","severity":1,"message":"214","line":6,"column":10,"nodeType":"201","messageId":"202","endLine":6,"endColumn":20},{"ruleId":"199","severity":1,"message":"215","line":15,"column":12,"nodeType":"201","messageId":"202","endLine":15,"endColumn":15},{"ruleId":"199","severity":1,"message":"209","line":1,"column":15,"nodeType":"201","messageId":"202","endLine":1,"endColumn":23},{"ruleId":"199","severity":1,"message":"216","line":4,"column":10,"nodeType":"201","messageId":"202","endLine":4,"endColumn":14},{"ruleId":"199","severity":1,"message":"217","line":4,"column":41,"nodeType":"201","messageId":"202","endLine":4,"endColumn":45},{"ruleId":"199","severity":1,"message":"218","line":4,"column":75,"nodeType":"201","messageId":"202","endLine":4,"endColumn":79},{"ruleId":"199","severity":1,"message":"219","line":5,"column":10,"nodeType":"201","messageId":"202","endLine":5,"endColumn":18},{"ruleId":"199","severity":1,"message":"220","line":6,"column":10,"nodeType":"201","messageId":"202","endLine":6,"endColumn":20},{"ruleId":"221","severity":1,"message":"222","line":54,"column":29,"nodeType":"223","endLine":54,"endColumn":65},{"ruleId":"224","severity":1,"message":"225","line":83,"column":72,"nodeType":"201","messageId":"226","endLine":83,"endColumn":76},{"ruleId":"199","severity":1,"message":"227","line":1,"column":10,"nodeType":"201","messageId":"202","endLine":1,"endColumn":13},{"ruleId":"228","severity":1,"message":"229","line":22,"column":28,"nodeType":"230","messageId":"231","endLine":22,"endColumn":40},{"ruleId":"199","severity":1,"message":"232","line":2,"column":9,"nodeType":"201","messageId":"202","endLine":2,"endColumn":17},{"ruleId":"199","severity":1,"message":"233","line":2,"column":32,"nodeType":"201","messageId":"202","endLine":2,"endColumn":37},{"ruleId":"199","severity":1,"message":"213","line":2,"column":39,"nodeType":"201","messageId":"202","endLine":2,"endColumn":46},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'Message' is defined but never used.","'Image' is defined but never used.","'passwordResetFailure' is assigned a value but never used.","'Loader' is defined but never used.","'sdata' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'valid_cred' is assigned a value but never used.","'message' is assigned a value but never used.","'Segment' is defined but never used.","'createUUID' is defined but never used.","'DnD' is assigned a value but never used.","'Card' is defined but never used.","'List' is defined but never used.","'Grid' is defined but never used.","'DragEdit' is defined but never used.","'DRAG_EDITS' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-self-assign","'item' is assigned to itself.","selfAssignment","'act' is defined but never used.","no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","'Checkbox' is defined but never used.","'Radio' is defined but never used.","no-global-assign","no-unsafe-negation"]