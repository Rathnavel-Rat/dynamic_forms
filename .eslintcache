[{"F:\\frontend\\dynamic_forms\\src\\index.js":"1","F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js":"2","F:\\frontend\\dynamic_forms\\src\\App.js":"3","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx":"4","F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js":"5","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx":"6","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx":"7","F:\\frontend\\dynamic_forms\\src\\store.js":"8","F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js":"9","F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx":"10","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js":"11","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js":"12","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js":"13","F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx":"14","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js":"15","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js":"16","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js":"17","F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx":"18","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js":"19","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js":"20","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js":"21","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx":"22","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js":"23","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx":"24","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx":"25","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Home.jsx":"26","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Toolbox.jsx":"27","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ListInput.js":"28","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ItemDrops.jsx":"29","F:\\frontend\\dynamic_forms\\src\\Components\\PresistedReducers\\PresistedReducers.js":"30","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Fields_pb.js":"31","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\reducers.js":"32","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\type.js":"33","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\action.js":"34","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\actions.jsx":"35","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\RenderFields.jsx":"36","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ConnectForm.js":"37","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\EditsFields.jsx":"38","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\MemoEditFields.jsx":"39","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ExceptionList.js":"40","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\reducers.js":"41","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\type.js":"42","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\actions.js":"43","F:\\frontend\\dynamic_forms\\src\\Components\\ModalReducer\\ModalReducer.js":"44","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\utils.jsx":"45","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\currentForm\\currentForm.jsx":"46","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\createdForm.js":"47","F:\\frontend\\dynamic_forms\\src\\Components\\RespondToForm\\RespondToForm.jsx":"48","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\action.js":"49","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\reducer.js":"50","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\type.js":"51","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Pager.jsx":"52","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\RespondToForm\\reducers.js":"53","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\RespondToForm\\type.js":"54","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\RespondToForm\\actions.js":"55","F:\\frontend\\dynamic_forms\\src\\Components\\FromResponses\\FormResponses.jsx":"56","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\GetFormReponses\\reducers.js":"57","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\GetFormReponses\\actions.js":"58","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\GetFormReponses\\type.js":"59","F:\\frontend\\dynamic_forms\\src\\Components\\Home\\Home.jsx":"60","F:\\frontend\\dynamic_forms\\src\\Components\\FileUploadHandle\\FileUploadHandle.js":"61","F:\\frontend\\dynamic_forms\\src\\Components\\FromResponses\\getLabebId.jsx":"62","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ExcetionMandatory.js":"63"},{"size":517,"mtime":1610374072713,"results":"64","hashOfConfig":"65"},{"size":375,"mtime":1610374072713,"results":"66","hashOfConfig":"65"},{"size":503,"mtime":1616777740293,"results":"67","hashOfConfig":"65"},{"size":3061,"mtime":1616865148796,"results":"68","hashOfConfig":"65"},{"size":279,"mtime":1610374072713,"results":"69","hashOfConfig":"65"},{"size":2301,"mtime":1618829769978,"results":"70","hashOfConfig":"65"},{"size":1457,"mtime":1615213741876,"results":"71","hashOfConfig":"65"},{"size":470,"mtime":1611851471097,"results":"72","hashOfConfig":"65"},{"size":1175,"mtime":1616819368615,"results":"73","hashOfConfig":"65"},{"size":3756,"mtime":1616949427078,"results":"74","hashOfConfig":"65"},{"size":925,"mtime":1610717576710,"results":"75","hashOfConfig":"65"},{"size":1357,"mtime":1610975531674,"results":"76","hashOfConfig":"65"},{"size":151,"mtime":1610627074096,"results":"77","hashOfConfig":"65"},{"size":179,"mtime":1612027919385,"results":"78","hashOfConfig":"65"},{"size":1452,"mtime":1614517977853,"results":"79","hashOfConfig":"65"},{"size":135,"mtime":1612089735144,"results":"80","hashOfConfig":"65"},{"size":960,"mtime":1612089736957,"results":"81","hashOfConfig":"65"},{"size":3232,"mtime":1616479738959,"results":"82","hashOfConfig":"65"},{"size":1128,"mtime":1616818812290,"results":"83","hashOfConfig":"65"},{"size":1480,"mtime":1611497098970,"results":"84","hashOfConfig":"65"},{"size":329,"mtime":1611156217890,"results":"85","hashOfConfig":"65"},{"size":2417,"mtime":1618829728675,"results":"86","hashOfConfig":"65"},{"size":2436,"mtime":1616479902798,"results":"87","hashOfConfig":"65"},{"size":2514,"mtime":1610904803294,"results":"88","hashOfConfig":"65"},{"size":2944,"mtime":1616479772916,"results":"89","hashOfConfig":"65"},{"size":3979,"mtime":1616680315724,"results":"90","hashOfConfig":"65"},{"size":3686,"mtime":1616480698021,"results":"91","hashOfConfig":"65"},{"size":1400,"mtime":1618902984877,"results":"92","hashOfConfig":"65"},{"size":7761,"mtime":1618902156191,"results":"93","hashOfConfig":"65"},{"size":322,"mtime":1618899668422,"results":"94","hashOfConfig":"65"},{"size":101544,"mtime":1618903287255,"results":"95","hashOfConfig":"65"},{"size":2902,"mtime":1616680860223,"results":"96","hashOfConfig":"65"},{"size":415,"mtime":1616680280828,"results":"97","hashOfConfig":"65"},{"size":1178,"mtime":1616680280474,"results":"98","hashOfConfig":"65"},{"size":6270,"mtime":1618903450855,"results":"99","hashOfConfig":"65"},{"size":6654,"mtime":1618903997204,"results":"100","hashOfConfig":"65"},{"size":222,"mtime":1613839624447,"results":"101","hashOfConfig":"65"},{"size":1049,"mtime":1618904115543,"results":"102","hashOfConfig":"65"},{"size":12579,"mtime":1618904369702,"results":"103","hashOfConfig":"65"},{"size":56,"mtime":1618904333253,"results":"104","hashOfConfig":"65"},{"size":886,"mtime":1614576488184,"results":"105","hashOfConfig":"65"},{"size":251,"mtime":1614785912957,"results":"106","hashOfConfig":"65"},{"size":1857,"mtime":1616479687094,"results":"107","hashOfConfig":"65"},{"size":267,"mtime":1614782134749,"results":"108","hashOfConfig":"65"},{"size":1152,"mtime":1617854053209,"results":"109","hashOfConfig":"65"},{"size":891,"mtime":1615999833115,"results":"110","hashOfConfig":"65"},{"size":6920,"mtime":1617849852311,"results":"111","hashOfConfig":"65"},{"size":6906,"mtime":1618830198913,"results":"112","hashOfConfig":"65"},{"size":1140,"mtime":1616479669262,"results":"113","hashOfConfig":"65"},{"size":734,"mtime":1615998097323,"results":"114","hashOfConfig":"65"},{"size":145,"mtime":1615997290452,"results":"115","hashOfConfig":"65"},{"size":856,"mtime":1618901930873,"results":"116","hashOfConfig":"65"},{"size":541,"mtime":1616777675275,"results":"117","hashOfConfig":"65"},{"size":112,"mtime":1616777335874,"results":"118","hashOfConfig":"65"},{"size":284,"mtime":1616777613418,"results":"119","hashOfConfig":"65"},{"size":2692,"mtime":1617861048504,"results":"120","hashOfConfig":"65"},{"size":2046,"mtime":1617857039784,"results":"121","hashOfConfig":"65"},{"size":664,"mtime":1616832044015,"results":"122","hashOfConfig":"65"},{"size":298,"mtime":1616831770350,"results":"123","hashOfConfig":"65"},{"size":13435,"mtime":1617555235507,"results":"124","hashOfConfig":"65"},{"size":83,"mtime":1617009716494,"results":"125","hashOfConfig":"65"},{"size":1322,"mtime":1617858920699,"results":"126","hashOfConfig":"65"},{"size":66,"mtime":1618903721783,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"m3no2f",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"130"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"130"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"130"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"130"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"130"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"130"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\frontend\\dynamic_forms\\src\\index.js",[],["263","264"],"F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js",[],"F:\\frontend\\dynamic_forms\\src\\App.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx",[],"F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx",[],"F:\\frontend\\dynamic_forms\\src\\store.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx",["265","266","267"],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Home.jsx",["268"],"import React from 'react'\r\nimport { DragDropContext} from 'react-beautiful-dnd'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport {  Grid, } from 'semantic-ui-react'\r\nimport ItemDrops, {Pages} from './ItemDrops'\r\nimport Toolbox from './Toolbox'\r\nimport {SetDragItem, Swap_Between_Page} from '../Redux/DnDItems/action'\r\nimport { items as Tools } from './ListInput'\r\nimport { GetAction } from './actions'\r\nimport Pager from \"./Pager\";\r\n\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\nconst atPosition = (ExistingList, destinationIndex,Newdata) => {\r\n    const destClone = Array.from(ExistingList);\r\n    destClone.splice(destinationIndex, 0,Newdata);\r\n    return destClone;\r\n}\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[\"source\"] = sourceClone;\r\n    result[\"destination\"] =destClone;\r\n\r\n    return result;\r\n};\r\n\r\n\r\n\r\nfunction Home() {\r\n\r\n    const  DnD= useSelector(state => state.dnd)\r\n    const dispatch = useDispatch()\r\n    const actions = new GetAction();\r\n    const selector=useSelector(state=>state.currentForm)\r\n\r\n\r\n    const dragEndCall=(result)=>{\r\n        let data;\r\n        const { source, destination,draggableId} = result;\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        if(source.droppableId!==destination.droppableId && source.droppableId===\"toolbox\"){\r\n            if(draggableId===\"inputemail\")\r\n                {\r\n                    data = actions[String(Tools.find(e=>e.id===draggableId).action)](true);\r\n                }\r\n            else\r\n                {\r\n                    data = actions[String(Tools.find(e => e.id === draggableId).action)]();\r\n                }\r\n               const list=atPosition(DnD.formPage[destination.droppableId.toString()].page.getFieldsList(),destination.index,data)\r\n            dispatch(SetDragItem({id:destination.droppableId,list:list}))\r\n\r\n                    \r\n        }\r\n        else if(source.droppableId!==destination.droppableId){\r\n           const result= move(DnD.formPage[source.droppableId.toString()].page.getFieldsList(),DnD.formPage[destination.droppableId.toString()].page.getFieldsList(),source,destination)\r\n            dispatch(Swap_Between_Page({sourceid:source.droppableId,destinationid:destination.droppableId,source:result[\"source\"],destination:result[\"destination\"]}))\r\n        }\r\n        if(source.droppableId===destination.droppableId){\r\n            const list=reorder(DnD.formPage[destination.droppableId.toString()].page.getFieldsList(),source.index,destination.index)\r\n            dispatch(SetDragItem({id:destination.droppableId,list:list}))\r\n        }\r\n       \r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <Grid.Row>\r\n                <h1>{selector.name}</h1>\r\n            </Grid.Row>\r\n            <DragDropContext onDragEnd={dragEndCall} >\r\n            <Grid celled stackable doubling >\r\n                <Grid.Row  stretched columns={3}>\r\n                    \r\n                <Grid.Column  computer={3} >\r\n                     {/*  toolbox*/ }\r\n                    <Toolbox/>\r\n                 </Grid.Column > \r\n            \r\n                 <Grid.Column  computer={8} >     \r\n                     {/* WA*/ }              \r\n                    \r\n                    <ItemDrops/>\r\n\r\n                </Grid.Column>\r\n\r\n                    <Grid.Column  computer={3} >\r\n\r\n                       <Pager/>\r\n\r\n                    </Grid.Column>\r\n             </Grid.Row>\r\n          </Grid>\r\n          </DragDropContext>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Toolbox.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ListInput.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ItemDrops.jsx",["269","270","271","272"],"F:\\frontend\\dynamic_forms\\src\\Components\\PresistedReducers\\PresistedReducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Fields_pb.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\actions.jsx",["273"],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\RenderFields.jsx",["274","275","276","277","278","279","280","281"],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ConnectForm.js",["282","283"],"import React, { memo, } from \"react\";\r\nimport { useFormContext} from \"react-hook-form\";\r\nexport const ConnectForm = ({ children }) => {\r\n    const methods = useFormContext();\r\n\r\n    return children({ ...methods });\r\n};","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\EditsFields.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\MemoEditFields.jsx",["284","285"],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ExceptionList.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\CreatedForm\\actions.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\ModalReducer\\ModalReducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\utils.jsx",["286","287"],"\r\n\r\nexport function createFieldUUID() {\r\n\r\n    const s = [];\r\n    const hexDigits = \"0123456789abcdef\";\r\n    for (var i = 0; i < 36; i++) {\r\n        s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n    }\r\n    s[14] = \"4\"; \r\n    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  \r\n    s[8] = s[13] = s[18] = s[23] = \"-\";\r\n\r\n    return s.join(\"\");\r\n}\r\nexport function base64ToArrayBuffer(base64) { // use while rerender\r\n    console.log(\"base\",base64)\r\n    try{\r\n        const binary_string = window.atob(base64);\r\n        const len = binary_string.length;\r\n        let bytes = new Uint8Array(len);\r\n    for (let i = 0; i < len; i++) {\r\n        bytes[i] = binary_string.charCodeAt(i);\r\n    }\r\n    return bytes\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n\r\n}\r\nexport  function uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\nexport function bufferToBase64(buffer) {\r\n    const binary = String.fromCharCode.apply(null, buffer);\r\n    return window.btoa(binary);\r\n}","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\currentForm\\currentForm.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\createdForm.js",["288","289","290"],"import React, {Component, memo, useEffect, useReducer, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AddNewFormApiCAll, FetchCreatedFormAPICall,FetchBinaryDataApiCall} from \"../Redux/CreatedForm/actions\";\r\nimport {\r\n    List,\r\n    Grid,\r\n    Icon,\r\n    TransitionablePortal,\r\n    Form,\r\n    Modal,\r\n    Button,\r\n    Label,\r\n    FormInput,\r\n    Container,\r\n    Radio,\r\n} from \"semantic-ui-react\";\r\nimport Segment from \"semantic-ui-react/dist/commonjs/elements/Segment\";\r\nimport { useForm,Controller } from \"react-hook-form\";\r\nimport {modalReducer} from \"../ModalReducer/ModalReducer\";\r\nimport Axios from \"../axiosConfig\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {CurrentForm} from \"../Redux/currentForm/currentForm\";\r\nimport {DeleteFormApiCall} from \"../Redux/DeleteForm/action\";\r\nimport {GetFormResponsesApiCall} from \"../Redux/GetFormReponses/reducers\";\r\n\r\n\r\n\r\n\r\nconst CreatedForm = () => {\r\n    const dispatch=useDispatch()\r\n    const data=useSelector(state=>state.createdForm)\r\n    const history=useHistory()\r\n    useEffect(()=> dispatch(FetchCreatedFormAPICall()),[])\r\n\r\n\r\n    function FormVisisble(form_id,isAvailable) {\r\n        Axios().post(\"dynamicforms/MakeFormVisible\",{form_id:form_id,isPublish:isAvailable}).then(e=>{}).catch(e=>{})\r\n\r\n    }\r\n\r\n    return (\r\n        <Grid textAlign='center' verticalAlign='middle' >\r\n            <Grid.Column as={Segment} raised  style={{maxWidth:\"650px\",marginTop:70}}>\r\n        <Segment    fluid text  textAlign=\"center\" >\r\n            <List animated divided   >\r\n            {data.data.map(e=>(\r\n                <List.Item as={Container}  >\r\n                    <EditNameForms item={e}/>\r\n                <List.Content floated=\"right\" >\r\n                    <Button icon  onClick={()=>{\r\n                        dispatch(FetchBinaryDataApiCall({\"form_id\":e.form_id}))\r\n                            .then(e=>{\r\n                                dispatch(CurrentForm(e.data))\r\n                                history.push(\"/createForm\")\r\n\r\n                            })\r\n                    }} >\r\n                    <Icon  name=\"edit\"\r\n                          color=\"blue\" /></Button>\r\n                      <Copy access_id={e.access_id}/>\r\n                      <Button content=\"Click To See Responses\" icon=\"eye\" onClick={()=>{\r\n                           dispatch(GetFormResponsesApiCall({\"form_id\":e.form_id})).then().catch()\r\n                          history.push(\"/ViewFormResponses\")}}/>\r\n                    <DeleteFormModal dispatch={dispatch} id={e.form_id} name={e.name}/>\r\n                    <Radio onChange={()=>FormVisisble(e.form_id,!e.isPublish)} toggle  defaultChecked={e.isPublish} />\r\n                </List.Content>\r\n\r\n\r\n            </List.Item>))}\r\n\r\n            </List>\r\n            <CreateFormModal dispatch={dispatch}/>\r\n        </Segment>\r\n        </Grid.Column>\r\n        </Grid>\r\n    );\r\n};\r\nconst EditNameForms=memo(({item})=>{\r\n\r\n    const [isIconEdit,setisIconEdit]=useState(false)\r\n    const UpdateFormName=(data)=>{\r\n        data[\"name\"]=document.getElementById(\"newName\").value\r\n        Axios().patch(\"dynamicforms/updateName\",data).then(e=>console.log(e)).catch(e=>console.log(\"lool\",e))\r\n    }\r\n    return(\r\n        <List.Content  style={{marginTop: 10}} floated=\"left\"><Icon color=\"blue\" name=\"dot circle\"/>\r\n        {!isIconEdit? item.name:\r\n            <div>\r\n                <input id=\"newName\" style={{width:\"100px\",height:\"q20px\"}} type=\"text\"  placeholder={item.name} defaultValue={item.name}/>\r\n                 <Icon color={\"green\"} onClick={()=>{UpdateFormName({\"form_id\":item.form_id})}} name=\"save\"/></div>}\r\n                 {!isIconEdit ?\r\n                                (<Icon onClick={()=>{setisIconEdit(!isIconEdit)}} name=\"edit\"/>)\r\n                              : (<Icon  onClick={()=>setisIconEdit(!isIconEdit)} name=\"delete\" />)}\r\n\r\n        </List.Content>\r\n    )\r\n})\r\nexport default CreatedForm;\r\n\r\nconst CreateFormModal=({dispatch})=>{\r\n    const{register,handleSubmit,control}=useForm()\r\n    const[state,dispatches]=useReducer(modalReducer,{isOpen:false})\r\n     const create=(data)=>{\r\n        dispatch(AddNewFormApiCAll(data)).then(e=>dispatches({type:\"CLOSE\"})).catch(e=>{})\r\n    }\r\n    return(\r\n        <Modal size={\"tiny\"} trigger={ <Button   color=\"blue\"   circular icon={\"add\"} onClick={()=>dispatches({type:\"OPEN\"})} />} basic closeIcon  open={state.isOpen} onClose={()=>{dispatches({type:\"CLOSE\"})}}>\r\n            <Modal.Header>Enter the name for your form</Modal.Header>\r\n            <Form onSubmit={handleSubmit(create)}>\r\n                <Controller  control={control} as={FormInput} type=\"text\" name=\"name\" ref={register({required:{value:true,message:\"Required\"}})}/>\r\n            </Form>\r\n            <Modal.Content ><Button size={5} positive onClick={handleSubmit(create)}>\r\n                CREATE\r\n            </Button></Modal.Content>\r\n            <Modal.Actions >\r\n                <Button negative onClick={() => dispatches({ type: 'CLOSE' })}>\r\n                    CLOSE\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nconst DeleteFormModal=({dispatch,id,name})=>{\r\n    const[state,dispatches]=useReducer(modalReducer,{isOpen:false})\r\n\r\n    return(\r\n\r\n        <Modal trigger={<Button icon onClick={()=>{dispatches({type:\"OPEN\"})}}>\r\n            <Icon color=\"blue\" name=\"trash\" hint={\"delete\"}  />\r\n        </Button>} closeIcon   open={state.isOpen} onClose={()=>{dispatches({type:\"CLOSE\"})}}>\r\n        <Modal.Header>Are sure you wanna delete</Modal.Header>\r\n        <Modal.Description textAlign=\"center\">\r\n         <h1> {name}</h1>\r\n        </Modal.Description>\r\n        <Modal.Content>\r\n            <Button size={5} positive  onClick={()=>dispatch(DeleteFormApiCall({\"id\":id})).then(_=>{dispatches({type:\"CLOSE\"})} )} >\r\n           Confrim Delete\r\n        </Button></Modal.Content>\r\n    </Modal>)\r\n}\r\n\r\n\r\n\r\nconst  Copy= ({access_id}) =>{\r\n    function copyToClipboard(id){\r\n        let copy = document.createElement(\"input\");\r\n        document.body.appendChild(copy);\r\n        copy.setAttribute('value', id);\r\n        copy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(copy);\r\n    }\r\n    const[state,dispatches]=useReducer(modalReducer,{isOpen:false})\r\n\r\n        return (\r\n\r\n                <TransitionablePortal\r\n                    trigger={ <Button icon onClick={()=>{dispatches({type:\"OPEN\"});copyToClipboard(access_id)}} >\r\n                        <Icon color=\"blue\" name=\"clipboard\" />\r\n                    </Button>}\r\n                    onClose={()=>dispatches({type:\"CLOSE\"})}  open={state.isOpen}>\r\n                    <Segment style={{ left: '40%', position: 'fixed', top: '50%', zIndex: 1000 }}>\r\n                        Form Access Id Copied to Clipboard\r\n                    </Segment>\r\n                </TransitionablePortal>\r\n        )\r\n\r\n}","F:\\frontend\\dynamic_forms\\src\\Components\\RespondToForm\\RespondToForm.jsx",["291","292"],"import React, { memo,useReducer, useState} from 'react';\r\nimport {\r\n    Button,\r\n    Container,\r\n    Divider,\r\n    Form,\r\n    FormInput,\r\n    Grid,\r\n    Icon,\r\n    List,\r\n    Modal,\r\n    Segment,\r\n    TransitionablePortal\r\n} from 'semantic-ui-react'\r\nimport {useForm,Controller, FormProvider} from \"react-hook-form\";\r\nimport Axios from \"../axiosConfig\";\r\nimport {base64ToArrayBuffer} from \"../CreateForms/utils\";\r\nimport {ListPageForm} from \"../CreateForms/protobuf/Fields_pb\";\r\nimport {RenderProto} from \"../CreateForms/Fields/RenderFields\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SetFormAccessId} from \"../Redux/RespondToForm/actions\";\r\nimport {modalReducer} from \"../ModalReducer/ModalReducer\";\r\n\r\n\r\nconst RespondToForm = () => {\r\n    const [PageForm,setPageForm]=useState([])\r\n    const {register,handleSubmit,errors,control}= useForm()\r\n    const state=useSelector(state=>state.respondToForm)\r\n    const dispatch=useDispatch()\r\n    const[states,dispatches]=useReducer(modalReducer,{isOpen:false})\r\n    const[msg,setmsg]=useState(\"\")\r\n    const Search=(e)=>{\r\n        setPageForm([])\r\n        dispatch(SetFormAccessId({access_id:e.key}))\r\n        Axios().get(\"dynamicforms/AccessForm\", {\r\n            params: {\r\n                access_id: e.key,\r\n            }\r\n        }).then(e=>{\r\n            if(e.data[\"success\"]){\r\n              const data= base64ToArrayBuffer(e.data.data)\r\n             setPageForm(ListPageForm.deserializeBinary(data).getPageList())}\r\n            else{\r\n              dispatches({type:\"OPEN\"})\r\n                setmsg(\"Form do not support any responses.Contact owner of the form \\n\")\r\n            }\r\n        }).catch(e=>{\r\n            dispatches({type:\"OPEN\"})\r\n            setmsg(e.response.data[\"non_field_errors\"])\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid textAlign=\"center\" verticalAlign=\"middle\">\r\n                <Grid.Column style={{ maxWidth: \"450px\" }} >\r\n                    <Container fluid textAlign={\"center\"} text>\r\n                <Form  onSubmit={handleSubmit(Search)} >\r\n                <Controller as={Form.Input} control={control}\r\n                            ref={register({required:{value:true,message:\"Please enter a valid id\"}})}\r\n                            name=\"key\"\r\n                            type=\"text\" placeholder=\"enter the form access-id\" />\r\n                    {errors[\"key\"] && errors[\"key\"].message}\r\n                <Form.Button  type={\"submit\"}  >Get</Form.Button>\r\n                 </Form></Container>\r\n                </Grid.Column>\r\n            </Grid>\r\n            <Grid textAlign=\"center\" verticalAlign=\"middle\" >\r\n                <Grid.Column style={{ maxWidth: \"900px\" }} text>\r\n                    {state.access_id!==null ? <FormDisplay  data={PageForm}/>:null}\r\n                </Grid.Column>\r\n            </Grid>\r\n            <TransitionablePortal onClose={()=>dispatches({type:\"CLOSE\"})}  open={states.isOpen}>\r\n                <Grid centered stackable textAlign=\"center\" verticalAlign=\"middle\" >\r\n\r\n                <Segment  textAlign={\"center\"} stacked  style={{  zIndex: 1000,border:\" 2px solid black\",backgroundColor:\"#55f3e01f\" }}>\r\n                    {msg}\r\n                </Segment>\r\n\r\n\r\n                </Grid>\r\n            </TransitionablePortal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RespondToForm;\r\n\r\nconst FormDisplay=({data})=>{\r\n    const methods=useForm()\r\n    const state=useSelector(state=>state.respondToForm)\r\n    const[states,dispatches]=useReducer(modalReducer,{isOpen:false})\r\n    const[msg,setMsg]=useState(\"\")\r\n    const submit=(data)=> {\r\n        const _data = {\"access_id\": state.access_id, \"Responses\": data}\r\n\r\n        const list = Object.keys(data).filter(e => e.toString().includes('file'))\r\n        if (list.length !== 0) {\r\n            const formdata = new FormData();\r\n\r\n            list.forEach(e => {\r\n                formdata.append(e.toString(), data[e][0])\r\n            })\r\n            formdata.append(\"access_id\", state.access_id)\r\n\r\n            Axios().post(\"dynamicforms/saveFile\", formdata, {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            ).then(e => {\r\n                    const data = e.data[\"filepath\"]\r\n                    list.forEach(d => {\r\n                        _data.Responses[d] = data[d]\r\n                    })\r\n\r\n                    Axios().post(\"dynamicforms/SubmitResponse\", _data).then(e => {\r\n                        setMsg(\"submitted successFully\")\r\n                        dispatches({type: \"OPEN\"})\r\n                        methods.reset()\r\n                    }).catch(e => {\r\n                        setMsg(e.response.data['non_field_errors'])\r\n                        dispatches({type: \"OPEN\"})\r\n                    })\r\n                }\r\n            ).catch(e => {\r\n\r\n                    setMsg(e.response.data['non_field_errors'])\r\n                    dispatches({type: \"OPEN\"})\r\n                }\r\n            )\r\n\r\n\r\n        }\r\n        else {\r\n            Axios().post(\"dynamicforms/SubmitResponse\",_data).then(e=>{\r\n                setMsg(\"submitted successFully\")\r\n                dispatches({type:\"OPEN\"})\r\n\r\n            }).catch(e=>{\r\n                setMsg(e.response.data['non_field_errors'])\r\n                dispatches({type:\"OPEN\"})\r\n            })\r\n        }\r\n        methods.reset()\r\n    }\r\n    return(\r\n        <FormProvider {...methods} >\r\n                    <Form  unstackable onSubmit={methods.handleSubmit(submit)} width={\"equal\"}>\r\n                        {data.map((e,i)=>(\r\n                            <FromFrame  data={e.getFieldsList()}/>\r\n                        ))}\r\n                        {data.length>0 ? <Form.Button content=\"submit\" primary  />:null}\r\n                    </Form>\r\n            <ErrorModal isOpen={states.isOpen} msg={msg} dispatches={dispatches} />\r\n        </FormProvider>\r\n    )\r\n}\r\n\r\nconst FromFrame=({data,})=>{\r\n    return(\r\n        <Segment>\r\n        <List>\r\n                {data.map((e,i)=>(\r\n                    <RenderEachItem item={e} key={i}/>\r\n                ))}\r\n        </List>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nconst RenderEachItem=({item})=>{\r\n    const nRenderProto = new RenderProto();\r\n    const field = nRenderProto[String(item.getRenderFunc())](item);\r\n    return(\r\n        <List.Item as={Container}  textAlign=\"left\">\r\n            {field}\r\n            <Divider/>\r\n        </List.Item>\r\n\r\n    )\r\n}\r\n\r\nconst ErrorModal=memo(({isOpen,msg,dispatches})=>{\r\n    return(\r\n        <Modal size={\"tiny\"}   closeIcon  open={isOpen} onClose={()=>{dispatches({type:\"CLOSE\"})}}>\r\n            <Modal.Content >\r\n                {msg}\r\n            </Modal.Content>\r\n            <Modal.Actions >\r\n                <Button positive onClick={() => dispatches({ type: 'CLOSE' })}>\r\n                    ok\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n\r\n    )\r\n})\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\reducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DeleteForm\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Pager.jsx",["293"],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\RespondToForm\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\RespondToForm\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\RespondToForm\\actions.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\FromResponses\\FormResponses.jsx",["294"],"import React, {memo, useEffect} from 'react';\r\nimport {Table, Popup, Container} from \"semantic-ui-react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ResetFormResponses} from \"../Redux/GetFormReponses/actions\";\r\nimport {ListPageForm} from \"../CreateForms/protobuf/Fields_pb\";\r\nimport {LabelFromProto} from \"./getLabebId\";\r\n\r\nconst ViewFormResponses = () => {\r\n    const dispatch=useDispatch()\r\n    let state= useSelector(state=>state.getFromResponses)\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            dispatch(ResetFormResponses())\r\n        }\r\n    },[])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <h1>{state.name}</h1>\r\n                {state.list!==null&&state.list.length!==0 ? <div>no of Responses:{state.list.length}</div>:<div>0<br/>Responses</div>}\r\n            </Container>\r\n            {state.list!==null&&state.list.length!==0 ? <TableView binData={state.binaryData} data={state.list}/>:null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewFormResponses;\r\n\r\nconst getLabelForId=(data)=>{\r\n    const a={}\r\n    const getLabelId=new LabelFromProto()\r\n    data.getPageList().forEach(e=>e.getFieldsList().forEach(i=>{\r\n        if(String(i.getRenderFunc())!==\"RenderLabel\")\r\n        a[i.getUid()]= getLabelId[String(i.getRenderFunc())](i)}\r\n    ))\r\n    return a;\r\n}\r\n\r\nconst TableView=memo(({data,binData})=>{\r\n\r\n    const array=[]\r\n    const labelIdData=getLabelForId(ListPageForm.deserializeBinary(binData))\r\n\r\n    for (const p in data[0])\r\n            if( data[0].hasOwnProperty(p) && p!==\"Responses\" )\r\n                array.push(p)\r\n\r\n    for(const p in data[0].Responses)\r\n        if(data[0].Responses.hasOwnProperty(p))\r\n            array.push(p)\r\n\r\n    return(\r\n        <Table stackable  sorted={true} celled striped selectable role=\"grid\" aria-labelledby=\"header\">\r\n            <Table.Header>\r\n                <Table.Row>\r\n\r\n                    {array.map((e,i)=>(\r\n\r\n                        <Popup  content={labelIdData[e]} trigger={ <Table.HeaderCell style={{cursor:\"pointer\"}}  key={i}>{e}</Table.HeaderCell>} />\r\n                    ))}\r\n                </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n\r\n                    {data.map((e,i)=>{\r\n\r\n                        return(\r\n                        <Table.Row>\r\n                            <Table.Cell>{e.MailName}</Table.Cell>\r\n                            {Object.values(e.Responses).map((e,i)=>(\r\n                                <Table.Cell>{e.toString()}</Table.Cell>\r\n                            ))}\r\n                        </Table.Row>\r\n\r\n                        )})}\r\n                </Table.Body>\r\n        </Table>\r\n    )\r\n})","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\GetFormReponses\\reducers.js",["295"],"import {\r\n    GET_FORM_RESPONSES_REQUEST,\r\n    GET_FORM_RESPONSES_REQUEST_FAILURE,\r\n    GET_FORM_RESPONSES_REQUEST_SUCCESS, RESET_FORM_RESPONSES\r\n} from \"./type\";\r\nimport {RequestFormRepsonses, RequestFormRepsonsesFailure, RequestFormRepsonsesSuccess} from \"./actions\";\r\nimport Axios from \"../../axiosConfig\";\r\nimport {act} from \"@testing-library/react\";\r\n\r\n\r\n\r\nconst initState={\r\n     form_id:null,\r\n     message:\"\",\r\n     list:null\r\n}\r\nexport const FromResponseReducers=(state=initState,action)=>{\r\n    switch (action.type) {\r\n        case GET_FORM_RESPONSES_REQUEST:\r\n            return {\r\n                ...state,\r\n                message: \"fetching\"\r\n            }\r\n        case GET_FORM_RESPONSES_REQUEST_FAILURE:\r\n            return {\r\n                ...state,\r\n                message: \"Failed\"\r\n            }\r\n        case GET_FORM_RESPONSES_REQUEST_SUCCESS:\r\n            console.log(action.data)\r\n            return {\r\n                ...state,\r\n                message: \"success\",\r\n                form_id :action.data.data[\"Form\"],\r\n                list:action.data.data[\"List\"],\r\n                name:action.data.data[\"FormName\"],\r\n                binaryData:action.data[\"binaryData\"]\r\n            }\r\n        case RESET_FORM_RESPONSES:\r\n            return {\r\n                ...state,\r\n                name:\"\",\r\n                form_id:\"\",\r\n                message:\"\",\r\n                binaryData:null,\r\n                list:null\r\n\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const GetFormResponsesApiCall=(data)=>(dispatch)=>{\r\n    return new Promise((resolve,reject)=> {\r\n        dispatch(RequestFormRepsonses())\r\n        Axios().post(\"dynamicforms/GetResponse\",{\"Form\":data.form_id}).then(e=>{\r\n            console.log(e.data,\"kkk\")\r\n            dispatch(RequestFormRepsonsesSuccess(e.data.data))\r\n            return resolve({isSuccess:true})\r\n        }).catch(e=>{\r\n            dispatch(RequestFormRepsonsesFailure())\r\n            return reject({isSuccess:false})\r\n        })\r\n\r\n\r\n    })\r\n}","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\GetFormReponses\\actions.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\GetFormReponses\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Home\\Home.jsx",["296","297","298"],"import React, { useLayoutEffect, useRef, useState } from 'react'\r\nimport ScrollAnimation from 'react-animate-on-scroll';\r\nimport styles from './styles.module.css'\r\nimport {Container, List,Segment,Card, Grid, Header, Divider} from \"semantic-ui-react\";\r\nconst CreativeFormHome = () => {\r\n    return (\r\n        <div>\r\n           <div className={styles.homebackgroundImage}>\r\n            <Head />\r\n\r\n            <Container className={styles.subText}>\r\n              Create Your Own Forms\r\n            </Container>\r\n           </div>\r\n            <Features/>\r\n            <div style={{marginTop:50}}>\r\n            <ContentOne/>\r\n            <ContentTwo/>\r\n            <ContentThree/>\r\n            </div>\r\n            <MoreInfo/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreativeFormHome;\r\n\r\n\r\nconst Head=()=>{\r\n    return(\r\n        <ScrollAnimation animateIn='flipInY'  animateOut='flipOutY'>\r\n            <h1 className={styles.charFade}>\r\n              Creative Forms\r\n            </h1>\r\n\r\n        </ScrollAnimation>\r\n\r\n    )\r\n}\r\n\r\nconst Features=()=>{\r\n\r\n    return(\r\n        <ScrollAnimation animateIn='slideInRight'  animateOut='slideOutLeft'>\r\n        <Grid  style={{marginTop:10,height:400}}>\r\n            <Grid.Row style={{marginLeft:60}} columns={3} textAlign=\"center\" verticalAlign=\"middle\">\r\n\r\n                <Grid.Column  >\r\n                    <Card   color={\"blue\"}>\r\n                        <Card.Content className={styles.gradientCard}>\r\n                     <Card.Header  >\r\n                         Future Design\r\n                         <Divider/>\r\n                     </Card.Header>\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce odio diam, fermentum ut consectetur id, dignissim vel erat. Aenean orci est, dignissim sed pellentesque fringilla, tincidunt et felis. Vestibulum rhoncus aliquet nulla a vehicula. Donec dignissim lobortis est, ac malesuada sapien pulvinar non\r\n                     </Card.Content>\r\n                    </Card>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                    <Card inverted>\r\n                        <Card.Content  className={styles.gradientCard}>\r\n                            <Card.Header style={{backgroundColor:\"#333\",color:\"white\"}} >\r\n                                Simple and Elegant\r\n                                <Divider/>\r\n                            </Card.Header>\r\n\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce odio diam, fermentum ut consectetur id, dignissim vel erat. Aenean orci est, dignissim sed pellentesque fringilla, tincidunt et felis. Vestibulum rhoncus aliquet nulla a vehicula. Donec dignissim lobortis est, ac malesuada sapien pulvinar non\r\n                        </Card.Content>\r\n                    </Card>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                    <Card color={\"blue\"} >\r\n                        <Card.Content  className={styles.gradientCard}>\r\n                            <Card.Header>\r\n                                Faster and Better\r\n                                <Divider/>\r\n                            </Card.Header>\r\n\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce odio diam, fermentum ut consectetur id, dignissim vel erat. Aenean orci est, dignissim sed pellentesque fringilla, tincidunt et felis. Vestibulum rhoncus aliquet nulla a vehicula. Donec dignissim lobortis est, ac malesuada sapien pulvinar non\r\n                        </Card.Content>\r\n                    </Card>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n        </Grid>\r\n        </ScrollAnimation>\r\n    )\r\n}\r\n\r\nconst ContentOne=()=>{\r\n    return (\r\n        <ScrollAnimation animateIn=\"slideInUp\" animateOut='slideOutup'>\r\n            <Grid style={{backgroundColor: \"#ff4f85\", color: \"white\"}} stackable>\r\n\r\n                <Grid.Column width={10}>\r\n\r\n                    <Header style={{color: \"white\"}} size=\"huge\">\r\n                        One\r\n                    </Header>\r\n                    <Container className={styles.details}>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce odio diam, fermentum ut consectetur id, dignissim vel erat. Aenean orci est, dignissim sed pellentesque fringilla, tincidunt et felis. Vestibulum rhoncus aliquet nulla a vehicula. Donec dignissim lobortis est, ac malesuada sapien pulvinar non. Donec a lacus accumsan, ornare leo vel, semper elit. Donec eu massa et nunc aliquam ultricies. Cras quis mauris arcu. Nullam id mauris ac augue vehicula posuere a id tellus. Nunc consectetur nunc eget lorem accumsan blandit. Ut aliquam interdum dui, eget vestibulum ante ultrices in. Etiam sit amet risus vel ipsum maximus aliquam vitae in urna. Sed id dignissim ex. Curabitur malesuada venenatis ante vitae rutrum. Suspendisse aliquet faucibus neque, et scelerisque felis. Nunc eget auctor quam. Sed mollis purus eu diam egestas, a iaculis mauris cursus.\r\n\r\n                        Vivamus tellus turpis, mollis ut ornare id, consequat id sapien. Nunc congue condimentum nunc et hendrerit. Praesent tristique erat quis eros malesuada ullamcorper. Nunc viverra nibh non nunc auctor dapibus. Fusce volutpat ullamcorper orci et porta. Nam bibendum est at turpis consequat, nec commodo lectus porttitor. Proin metus purus, tincidunt eu ultricies ut, sollicitudin nec libero. Cras convallis tempus nunc vitae blandit. Nunc vehicula, nisi ac consequat pellentesque, lacus turpis ullamcorper enim, eget tempor est leo ac libero. Morbi dictum iaculis enim, ultrices vestibulum dui. Morbi cursus orci quis massa consectetur, et vulputate elit iaculis. Ut a diam lacinia, rutrum arcu non, rutrum arcu. Maecenas vestibulum tempor nulla, pellentesque porta dui accumsan in. Ut accumsan enim in nunc lobortis, in pellentesque erat tristique. Curabitur ut arcu at risus varius vestibulum.\r\n\r\n                    </Container>\r\n\r\n                    <Grid.Column width={6}>\r\n\r\n                    </Grid.Column>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </ScrollAnimation>\r\n    );\r\n}\r\n\r\nconst ContentTwo=()=>{\r\n    return(\r\n        <ScrollAnimation animateIn=\"slideInUp\" animateOut='fadeOut' >\r\n        <Grid  style={{backgroundColor:\"#0bdbf6\",color:\"white\"}}  stackable>\r\n            <Grid.Column width={6}>\r\n\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n                <Header style={{color:\"white\"}} size=\"large\" >\r\n                    About the Department\r\n                </Header>\r\n                <Container className={styles.details} >\r\n                    Pellentesque pellentesque volutpat bibendum. Mauris dapibus est non nunc sodales, in congue eros congue. Suspendisse dapibus tempor nunc in gravida. Morbi eu mauris vehicula, congue nunc in, consequat erat. Cras consequat tempus sapien, eget gravida quam pellentesque ac. Pellentesque interdum varius euismod. Etiam vitae velit vitae lacus pharetra finibus. Donec efficitur erat quis mauris condimentum laoreet. Suspendisse non ornare elit. Mauris scelerisque semper scelerisque. Donec accumsan tortor ut mollis tristique.\r\n\r\n                    Nulla facilisi. Quisque tortor mauris, mollis sit amet lorem nec, hendrerit pulvinar enim. Mauris magna mi, imperdiet a tortor quis, pretium lobortis felis. Vivamus quis sem lobortis, euismod velit nec, fermentum quam. Praesent volutpat malesuada odio, nec fringilla quam tincidunt ac. Mauris justo augue, mattis a justo eget, interdum molestie odio. Donec condimentum vel ex vel feugiat. Vestibulum mattis dui non odio sodales, eget porta sapien porta. Maecenas interdum quam vel purus euismod, id viverra nibh pellentesque. Praesent dignissim porta enim vel semper. Aliquam elementum ante quis turpis facilisis gravida. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et est ac risus maximus vulputate volutpat quis felis. Praesent pulvinar, leo id dignissim lacinia, erat ligula gravida neque, id accumsan diam sem sed velit. Pellentesque rutrum leo id massa eleifend facilisis.\r\n\r\n\r\n                </Container>\r\n            </Grid.Column>\r\n        </Grid>\r\n        </ScrollAnimation>\r\n    )\r\n}\r\n\r\nconst ContentThree=()=>{\r\n    return(\r\n        <ScrollAnimation animateIn=\"slideInUp\" animateOut='fadeOut' >\r\n        <Grid  style={{backgroundColor:\"#ff4f85\",color:\"white\"}}  stackable>\r\n\r\n            <Grid.Column width={10}>\r\n                <Header style={{color:\"white\"}} size=\"large\">\r\n                    About the Department\r\n                </Header>\r\n                <Container className={styles.details} >\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce odio diam, fermentum ut consectetur id, dignissim vel erat. Aenean orci est, dignissim sed pellentesque fringilla, tincidunt et felis. Vestibulum rhoncus aliquet nulla a vehicula. Donec dignissim lobortis est, ac malesuada sapien pulvinar non. Donec a lacus accumsan, ornare leo vel, semper elit. Donec eu massa et nunc aliquam ultricies. Cras quis mauris arcu. Nullam id mauris ac augue vehicula posuere a id tellus. Nunc consectetur nunc eget lorem accumsan blandit. Ut aliquam interdum dui, eget vestibulum ante ultrices in. Etiam sit amet risus vel ipsum maximus aliquam vitae in urna. Sed id dignissim ex. Curabitur malesuada venenatis ante vitae rutrum. Suspendisse aliquet faucibus neque, et scelerisque felis. Nunc eget auctor quam. Sed mollis purus eu diam egestas, a iaculis mauris cursus.\r\n\r\n                    Vivamus tellus turpis, mollis ut ornare id, consequat id sapien. Nunc congue condimentum nunc et hendrerit. Praesent tristique erat quis eros malesuada ullamcorper. Nunc viverra nibh non nunc auctor dapibus. Fusce volutpat ullamcorper orci et porta. Nam bibendum est at turpis consequat, nec commodo lectus porttitor. Proin metus purus, tincidunt eu ultricies ut, sollicitudin nec libero. Cras convallis tempus nunc vitae blandit. Nunc vehicula, nisi ac consequat pellentesque, lacus turpis ullamcorper enim, eget tempor est leo ac libero. Morbi dictum iaculis enim, ultrices vestibulum dui. Morbi cursus orci quis massa consectetur, et vulputate elit iaculis. Ut a diam lacinia, rutrum arcu non, rutrum arcu. Maecenas vestibulum tempor nulla, pellentesque porta dui accumsan in. Ut accumsan enim in nunc lobortis, in pellentesque erat tristique. Curabitur ut arcu at risus varius vestibulum.\r\n\r\n                    Praesent commodo porta nisl. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Proin a sem nec libero vehicula ultrices et sit amet ipsum. Proin nec eros sodales lorem lobortis accumsan vitae a lacus. Sed ac tristique nisi. Maecenas a ultrices mi. Nunc gravida tincidunt eleifend. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. In quam nunc, ultricies et nulla pharetra, facilisis ultricies lectus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Ut mi libero, venenatis eget porta nec, finibus nec est. Aliquam erat volutpat. In tempor porttitor dolor, in pretium ipsum varius vel. Nunc vulputate nulla id massa mollis, vulputate egestas dolor ultrices. Nulla turpis magna, suscipit ac mauris at, porta consequat mauris.\r\n                    ------------------------------------------------------------\r\n\r\n                </Container>\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n\r\n            </Grid.Column>\r\n        </Grid>\r\n\r\n        </ScrollAnimation>\r\n    )\r\n}\r\n\r\nconst MoreInfo=()=>{\r\n    return(\r\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\r\n            <Container>\r\n                <Grid divided inverted stackable>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={3}>\r\n                            <Header inverted as='h4' content='About' />\r\n                            <List link inverted>\r\n                                <List.Item as='a'>Sitemap</List.Item>\r\n                                <List.Item as='a'>Contact Us</List.Item>\r\n                                <List.Item as='a'>Religious Ceremonies</List.Item>\r\n                                <List.Item as='a'>Gazebo Plans</List.Item>\r\n                            </List>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                            <Header inverted as='h4' content='Services' />\r\n                            <List link inverted>\r\n                                <List.Item as='a'>Banana Pre-Order</List.Item>\r\n                                <List.Item as='a'>DNA FAQ</List.Item>\r\n                                <List.Item as='a'>How To Access</List.Item>\r\n                                <List.Item as='a'>Favorite X-Men</List.Item>\r\n                            </List>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={7}>\r\n                            <Header as='h4' inverted>\r\n                                Footer Header\r\n                            </Header>\r\n                            <p>\r\n                                Extra space for a call to action inside the footer that could help re-engage users.\r\n                            </p>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Container>\r\n        </Segment>\r\n    )\r\n}","F:\\frontend\\dynamic_forms\\src\\Components\\FileUploadHandle\\FileUploadHandle.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\FromResponses\\getLabebId.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ExcetionMandatory.js",[],{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":3,"column":61,"nodeType":"305","messageId":"306","endLine":3,"endColumn":67},{"ruleId":"303","severity":1,"message":"307","line":25,"column":11,"nodeType":"305","messageId":"306","endLine":25,"endColumn":16},{"ruleId":"303","severity":1,"message":"308","line":26,"column":11,"nodeType":"305","messageId":"306","endLine":26,"endColumn":19},{"ruleId":"303","severity":1,"message":"309","line":5,"column":20,"nodeType":"305","messageId":"306","endLine":5,"endColumn":25},{"ruleId":"303","severity":1,"message":"310","line":15,"column":19,"nodeType":"305","messageId":"306","endLine":15,"endColumn":33},{"ruleId":"303","severity":1,"message":"311","line":15,"column":49,"nodeType":"305","messageId":"306","endLine":15,"endColumn":59},{"ruleId":"312","severity":1,"message":"313","line":40,"column":8,"nodeType":"314","endLine":40,"endColumn":10,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":121,"column":29,"nodeType":"318","endLine":121,"endColumn":65},{"ruleId":"319","severity":1,"message":"320","line":23,"column":28,"nodeType":"321","messageId":"322","endLine":23,"endColumn":40},{"ruleId":"303","severity":1,"message":"323","line":2,"column":9,"nodeType":"305","messageId":"306","endLine":2,"endColumn":17},{"ruleId":"303","severity":1,"message":"324","line":2,"column":25,"nodeType":"305","messageId":"306","endLine":2,"endColumn":37},{"ruleId":"303","severity":1,"message":"325","line":2,"column":60,"nodeType":"305","messageId":"306","endLine":2,"endColumn":65},{"ruleId":"303","severity":1,"message":"326","line":2,"column":67,"nodeType":"305","messageId":"306","endLine":2,"endColumn":74},{"ruleId":"303","severity":1,"message":"327","line":2,"column":76,"nodeType":"305","messageId":"306","endLine":2,"endColumn":81},{"ruleId":"303","severity":1,"message":"328","line":6,"column":9,"nodeType":"305","messageId":"306","endLine":6,"endColumn":13},{"ruleId":"329","severity":1,"message":"330","line":58,"column":9,"nodeType":"331","messageId":"332","endLine":66,"endColumn":10},{"ruleId":"333","severity":1,"message":"334","line":170,"column":72,"nodeType":"335","endLine":170,"endColumn":122},{"ruleId":"303","severity":1,"message":"336","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"303","severity":1,"message":"337","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":21},{"ruleId":"303","severity":1,"message":"338","line":1,"column":22,"nodeType":"305","messageId":"306","endLine":1,"endColumn":32},{"ruleId":"303","severity":1,"message":"339","line":5,"column":23,"nodeType":"305","messageId":"306","endLine":5,"endColumn":29},{"ruleId":"340","severity":1,"message":"341","line":34,"column":64,"nodeType":"342","messageId":"343","endLine":34,"endColumn":65},{"ruleId":"340","severity":1,"message":"341","line":34,"column":70,"nodeType":"342","messageId":"343","endLine":34,"endColumn":71},{"ruleId":"303","severity":1,"message":"344","line":1,"column":16,"nodeType":"305","messageId":"306","endLine":1,"endColumn":25},{"ruleId":"303","severity":1,"message":"345","line":12,"column":5,"nodeType":"305","messageId":"306","endLine":12,"endColumn":10},{"ruleId":"312","severity":1,"message":"346","line":33,"column":56,"nodeType":"314","endLine":33,"endColumn":58,"suggestions":"347"},{"ruleId":"303","severity":1,"message":"348","line":7,"column":5,"nodeType":"305","messageId":"306","endLine":7,"endColumn":14},{"ruleId":"303","severity":1,"message":"349","line":9,"column":5,"nodeType":"305","messageId":"306","endLine":9,"endColumn":9},{"ruleId":"303","severity":1,"message":"350","line":9,"column":11,"nodeType":"305","messageId":"306","endLine":9,"endColumn":14},{"ruleId":"312","severity":1,"message":"346","line":15,"column":7,"nodeType":"314","endLine":15,"endColumn":9,"suggestions":"351"},{"ruleId":"303","severity":1,"message":"352","line":8,"column":9,"nodeType":"305","messageId":"306","endLine":8,"endColumn":12},{"ruleId":"303","severity":1,"message":"353","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":32},{"ruleId":"303","severity":1,"message":"354","line":1,"column":34,"nodeType":"305","messageId":"306","endLine":1,"endColumn":40},{"ruleId":"303","severity":1,"message":"355","line":1,"column":42,"nodeType":"305","messageId":"306","endLine":1,"endColumn":50},"no-native-reassign",["356"],"no-negated-in-lhs",["357"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","'sdata' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Pages' is defined but never used.","'useFormContext' is defined but never used.","'Controller' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentForm.bindata' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["358"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","'Checkbox' is defined but never used.","'FormCheckbox' is defined but never used.","'Radio' is defined but never used.","'Segment' is defined but never used.","'Table' is defined but never used.","'Link' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'React' is defined but never used.","'memo' is defined but never used.","'useReducer' is defined but never used.","'Button' is defined but never used.","no-mixed-operators","Unexpected mix of '&' and '|'.","BinaryExpression","unexpectedMixedOperator","'Component' is defined but never used.","'Label' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["359"],"'FormInput' is defined but never used.","'Icon' is defined but never used.","'DnD' is assigned a value but never used.",["360"],"'act' is defined but never used.","'useLayoutEffect' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"363","fix":"365"},"Update the dependencies array to be: [currentForm.bindata, dispatch]",{"range":"366","text":"367"},"Update the dependencies array to be: [dispatch]",{"range":"368","text":"369"},{"range":"370","text":"369"},[1484,1486],"[currentForm.bindata, dispatch]",[1124,1126],"[dispatch]",[577,579]]