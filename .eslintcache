[{"F:\\frontend\\dynamic_forms\\src\\index.js":"1","F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js":"2","F:\\frontend\\dynamic_forms\\src\\App.js":"3","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx":"4","F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js":"5","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx":"6","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx":"7","F:\\frontend\\dynamic_forms\\src\\store.js":"8","F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js":"9","F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx":"10","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js":"11","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js":"12","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js":"13","F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx":"14","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js":"15","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js":"16","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js":"17","F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx":"18","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js":"19","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js":"20","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js":"21","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx":"22","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js":"23","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx":"24","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx":"25","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Home.jsx":"26","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Toolbox.jsx":"27","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ListInput.js":"28","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ItemDrops.jsx":"29","F:\\frontend\\dynamic_forms\\src\\Components\\PresistedReducers\\PresistedReducers.js":"30","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Fields_pb.js":"31","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\reducers.js":"32","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\type.js":"33","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\action.js":"34","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\actions.jsx":"35","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Utils.jsx":"36","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\utils.jsx":"37","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\RenderFields.jsx":"38","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ConnectForm.js":"39","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\EditsFields.jsx":"40","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\MemoEditFields.jsx":"41"},{"size":517,"mtime":1610374072713,"results":"42","hashOfConfig":"43"},{"size":375,"mtime":1610374072713,"results":"44","hashOfConfig":"43"},{"size":475,"mtime":1611640897471,"results":"45","hashOfConfig":"43"},{"size":2569,"mtime":1612968303054,"results":"46","hashOfConfig":"43"},{"size":279,"mtime":1610374072713,"results":"47","hashOfConfig":"43"},{"size":2312,"mtime":1614096538859,"results":"48","hashOfConfig":"43"},{"size":1454,"mtime":1611764482639,"results":"49","hashOfConfig":"43"},{"size":470,"mtime":1611851471097,"results":"50","hashOfConfig":"43"},{"size":629,"mtime":1612619289308,"results":"51","hashOfConfig":"43"},{"size":3756,"mtime":1612113767764,"results":"52","hashOfConfig":"43"},{"size":925,"mtime":1610717576710,"results":"53","hashOfConfig":"43"},{"size":1357,"mtime":1610975531674,"results":"54","hashOfConfig":"43"},{"size":151,"mtime":1610627074096,"results":"55","hashOfConfig":"43"},{"size":179,"mtime":1612027919385,"results":"56","hashOfConfig":"43"},{"size":1562,"mtime":1612089795047,"results":"57","hashOfConfig":"43"},{"size":135,"mtime":1612089735144,"results":"58","hashOfConfig":"43"},{"size":960,"mtime":1612089736957,"results":"59","hashOfConfig":"43"},{"size":3247,"mtime":1613139165459,"results":"60","hashOfConfig":"43"},{"size":1196,"mtime":1612089891322,"results":"61","hashOfConfig":"43"},{"size":1480,"mtime":1611497098970,"results":"62","hashOfConfig":"43"},{"size":329,"mtime":1611156217890,"results":"63","hashOfConfig":"43"},{"size":2407,"mtime":1610899584920,"results":"64","hashOfConfig":"43"},{"size":2456,"mtime":1611497141158,"results":"65","hashOfConfig":"43"},{"size":2514,"mtime":1610904803294,"results":"66","hashOfConfig":"43"},{"size":3105,"mtime":1610986117013,"results":"67","hashOfConfig":"43"},{"size":2607,"mtime":1613237241623,"results":"68","hashOfConfig":"43"},{"size":3780,"mtime":1613456746924,"results":"69","hashOfConfig":"43"},{"size":1181,"mtime":1612893043774,"results":"70","hashOfConfig":"43"},{"size":5779,"mtime":1614096047536,"results":"71","hashOfConfig":"43"},{"size":321,"mtime":1612715137160,"results":"72","hashOfConfig":"43"},{"size":73805,"mtime":1614086709581,"results":"73","hashOfConfig":"43"},{"size":796,"mtime":1614096047488,"results":"74","hashOfConfig":"43"},{"size":195,"mtime":1613238175830,"results":"75","hashOfConfig":"43"},{"size":513,"mtime":1613239669125,"results":"76","hashOfConfig":"43"},{"size":3863,"mtime":1614086785240,"results":"77","hashOfConfig":"43"},{"size":361,"mtime":1612888216887,"results":"78","hashOfConfig":"43"},{"size":361,"mtime":1612888216887,"results":"79","hashOfConfig":"43"},{"size":3075,"mtime":1614182205301,"results":"80","hashOfConfig":"43"},{"size":222,"mtime":1613839624447,"results":"81","hashOfConfig":"43"},{"size":416,"mtime":1614182336362,"results":"82","hashOfConfig":"43"},{"size":2644,"mtime":1614188694877,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"m3no2f",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\frontend\\dynamic_forms\\src\\index.js",[],["175","176"],"F:\\frontend\\dynamic_forms\\src\\reportWebVitals.js",[],"F:\\frontend\\dynamic_forms\\src\\App.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\TopBar.jsx",[],"F:\\frontend\\dynamic_forms\\src\\gloabalsMediaProvider.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Menu.jsx",["177"],"import React,{ useState} from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { NavLink, Link,withRouter, useHistory} from 'react-router-dom'\r\nimport { Menu,Dropdown, Button, } from 'semantic-ui-react'\r\nimport {LogoutApiCall} from \"../Redux/UserDetails/UserDetails\";\r\n\r\n\r\nfunction MenuComponent(props) {\r\n    const [activeTab, setactiveTab] = useState('home')\r\n    const onclickTab = (name) => {\r\n        setactiveTab(name)\r\n    };\r\n    const dispatch = useDispatch()\r\n    const logout=()=>{\r\n      dispatch(LogoutApiCall())\r\n\r\n    }\r\n\r\n    const userdata = useSelector(state => state.userdetails);\r\n\r\n    return (\r\n       \r\n        <Menu secondary pointing>\r\n          \r\n    \r\n        <Menu.Item as={NavLink} to='/Home'  name='home' active={activeTab === 'home'} onClick={()=>onclickTab('home')}/>\r\n        {userdata.islogin ?(\r\n          <Menu.Menu>\r\n         <Menu.Item as={NavLink} to=\"/createForm\" name='createform' active={activeTab === 'createform'} onClick={()=>onclickTab('createform')} />\r\n         <Menu.Item as={NavLink} to=\"/respondedForm\" name=\"respondedForm\" active={activeTab=== 'respondedForm'} onClick={()=>onclickTab('respondedForm')} /></Menu.Menu>\r\n        ):null\r\n        }\r\n        { userdata.islogin  ? \r\n        (\r\n          <Menu.Menu position='right'>\r\n          <Menu.Item>\r\n            <Dropdown item  text={userdata.username[0].toUpperCase()}>\r\n               <Dropdown.Menu>\r\n                <Dropdown.Item >{userdata.email}</Dropdown.Item>\r\n                 <Dropdown.Item as={Link} to=\"/userSettings\" >settings</Dropdown.Item>\r\n                 <Dropdown.Item as={Link} to=\"\">change password</Dropdown.Item>\r\n                 <Dropdown.Item as={Button} onClick={()=>logout()} >logout</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n          </Menu.Menu>\r\n        ):\r\n        ( \r\n        <Menu.Menu position=\"right\">\r\n        <Button as={NavLink} active={activeTab === 'login'} to='/login' onClick={()=>onclickTab('login')} color=\"teal\">SignIn</Button>\r\n        <Button as={NavLink} active={activeTab === 'Register'} to=\"/Register\" onClick={()=>onclickTab('Register')}  color=\"twitter\">SignUp</Button>\r\n        </Menu.Menu>)\r\n       }\r\n      </Menu>\r\n    )\r\n}\r\n\r\nexport default withRouter(MenuComponent);","F:\\frontend\\dynamic_forms\\src\\Components\\menuComponent\\Mobilemenu.jsx",[],"F:\\frontend\\dynamic_forms\\src\\store.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RootReducer\\RootReducer.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\RegComponent\\Register.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Register\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\axiosConfig.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\Login\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Logincomponent\\Login.jsx",["178","179"],"import React,{useEffect} from 'react'\r\nimport { Button,Form, Grid, Header, Label, Loader, Message, Segment,Dimmer,Image } from 'semantic-ui-react'\r\nimport { useForm,Controller } from \"react-hook-form\";\r\nimport { useSelector,useDispatch} from 'react-redux';\r\nimport {   useHistory } from 'react-router-dom';\r\nimport { LoginApiCall } from '../Redux/Login/action';\r\n\r\n\r\nfunction Login(props) {\r\n  //form\r\n  const {register,errors,handleSubmit,trigger,setValue,control}=useForm();\r\n\r\n  useEffect(() => {\r\n     \r\n      register({ name: \"password\" }, { required: {value:true,message:\"Password required\"}});\r\n      register({name:\"email\"},{required:{value:true,message:\"Email id required\"},pattern:  {value:/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,message:\"Invalid E-mail Id\"}})\r\n  }, );\r\n \r\n  const valid=async (e, { name, value }) => {\r\n    setValue(name, value);\r\n    await trigger({ name });\r\n  }\r\n  const submitTo=(data)=>{\r\n    dispatch(LoginApiCall(data))\r\n  }\r\n\r\n  //redirect\r\n  var history=useHistory();\r\n  const onClickSignIn=()=>{\r\n    history.push(\"/Register\")\r\n  }  \r\n  const onClickForgot=()=>{\r\n    history.push(\"/ForgotPassword\")\r\n  }\r\n  //redux\r\n  const sdata=useSelector(state=>state.login)\r\n  const dispatch = useDispatch()\r\n  if(sdata.islogin===true){\r\n    history.push(\"/Home\")\r\n  }\r\n  \r\n  //style\r\n  const TransStyle={\r\n      border:\"none\",\r\n      borderRadius: \"5px\",\r\n      background: \"rgba(255, 255, 255,0)\",\r\n      color:\"teal\",\r\n      cursor: \"pointer\"\r\n  }\r\n \r\n\r\n   \r\n    return (\r\n      <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\r\n      <Grid.Column style={{ maxWidth: 450 }} >\r\n        <Header as='h2' textAlign='center'>\r\n          Sign-in\r\n        </Header>\r\n        <Form size='large' onSubmit={handleSubmit(submitTo)}>\r\n        <Segment stacked>\r\n        \r\n          <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"email\" fluid icon='mail' iconPosition='left'  placeholder='email' onChange={valid} error={errors.email ? true :false}/>\r\n          {errors.email && <Label pointing=\"above\" color=\"red\">{errors.email.message}</Label>}\r\n          <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"password\" fluid icon='lock' iconPosition='left'    placeholder='Password' type='password' onChange={valid} error={errors.password ? true :false} />\r\n          {errors.password && <Label pointing=\"above\" color=\"red\">{errors.password.message}</Label>}\r\n          <Button color='blue' fluid size='large'>\r\n            LogIn\r\n          </Button>\r\n          <button  style={TransStyle} color=\"white\" onClick={()=>onClickForgot()}>ForgotPassword</button><br/>\r\n         Not an User <button   style={TransStyle}  color=\"blue\" onClick={()=>onClickSignIn()}>Sign Up</button>\r\n        </Segment>\r\n      </Form>\r\n        \r\n    <Segment>\r\n      {console.log(sdata.laoding)}\r\n        {sdata.laoding===true ?(<Dimmer active>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>):( sdata.message)}\r\n    </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n    )\r\n}\r\n/*const mapStateToProps=state=>{\r\n  return{\r\n    laod:state.loading\r\n  }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    disp:()=>dispatch(RegisterApiCall())\r\n  }\r\n}*/\r\n\r\n\r\nexport default  Login;","F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\UserDetails\\UserDetails.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\types.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\Password.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\passwordChange\\actions.js",["180"],"import Axios from \"../../axiosConfig\";\r\nimport { PASSWORD_REQUEST, PASSWORD_REQ_FAILURE, PASSWORD_REQ_SUCCESS, PASSWORD_RESET_FAILURE, PASSWORD_RESET_REQUEST, PASSWORD_RESET_SUCCESS } from \"./types\"\r\n\r\n\r\nconst passwordChangeRequest=()=>{\r\n     return{\r\n         type:PASSWORD_REQUEST         \r\n}\r\n}\r\n\r\nconst passwordChangeReqSuccces=(data)=>{\r\n    return{\r\n        type:PASSWORD_REQ_SUCCESS,\r\n        payload:data\r\n    }\r\n}\r\n\r\nconst passwordChangeReqFaiure=(error)=>{\r\n    return{\r\n        type:PASSWORD_REQ_FAILURE,\r\n        payload:error\r\n    }\r\n}\r\n\r\nconst  passwordResetRquest=()=>{\r\n    return{\r\n        type:PASSWORD_RESET_REQUEST         \r\n       }\r\n}\r\n\r\nconst passwordResetSuccess=(data)=>{\r\n    return{\r\n        type:PASSWORD_RESET_SUCCESS,\r\n        payload:data\r\n    }\r\n}\r\n\r\nconst passwordResetFailure=(error)=>{\r\n    return{\r\n        type:PASSWORD_RESET_FAILURE,\r\n        payload:error\r\n    }\r\n}\r\n\r\nexport const PasswordRequestAPI=(data)=>{\r\n    return (dispatch)=>{\r\n        dispatch(passwordChangeRequest())\r\n        Axios().post(\"/authentication/RequestPasswordChange\",data)\r\n               .then(response=>{\r\n                   if(response.data[\"success\"]===true){\r\n                   dispatch(passwordChangeReqSuccces(\"check your email for verification\"))\r\n                }\r\n                else{\r\n                    dispatch(passwordChangeReqSuccces(\"something went wrong\"))\r\n                }\r\n               })\r\n               .catch(error=>{\r\n                try {\r\n                   \r\n                    if(error.response.data!==null){\r\n                        dispatch(passwordChangeReqFaiure(error.response.data[\"detail\"]))\r\n                    }\r\n                }\r\n                catch(e){\r\n                    dispatch(passwordChangeReqFaiure(\"try again later\"))\r\n                }\r\n                  \r\n               })\r\n    }\r\n}\r\n\r\nexport const PasswordResetAPI=(data)=>{\r\n    return (dispatch)=>{\r\n        dispatch(passwordResetRquest())\r\n        Axios().patch(\"authentication/SetNewPassword\",data).then( respsone=>{\r\n           \r\n           if(respsone.data[\"success\"]===true){\r\n               dispatch(passwordResetSuccess(\"password reset Successfully\"))\r\n           }\r\n      }\r\n    ).catch(error=>{\r\n        if(error.response.status!==404)\r\n          dispatch(passwordResetSuccess(\"password reset Successfully\"))\r\n        else\r\n         dispatch(passwordResetSuccess(\"Try again later\"))\r\n    \r\n    })\r\n  }\r\n        \r\n\r\n}","F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\PasswordReset.jsx",["181","182","183"],"F:\\frontend\\dynamic_forms\\src\\Components\\Forgetpassword\\PasswordReset\\Passwordreset.jsx",["184","185","186","187","188"],"\r\nimport React,{useEffect, useState} from 'react'\r\nimport { Button,Form, Grid, Header, Label, Message, Segment,Loader } from 'semantic-ui-react'\r\nimport { useForm,Controller } from \"react-hook-form\";\r\nimport { useSelector,useDispatch} from 'react-redux';\r\nimport Axios from '../../axiosConfig';\r\nimport { PasswordResetAPI } from '../../Redux/passwordChange/actions';\r\n\r\n\r\n\r\nfunction Passwordreset(props) {\r\n    const {register,errors,handleSubmit,trigger,setValue,control}=useForm()\r\n   \r\n    \r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const valid_cred = urlParams.get('token_valid','');\r\n    const message=urlParams.get('message',\"\")\r\n    const uid64=urlParams.get(\"uidb64\",\"\")\r\n    const token=urlParams.get(\"token\",\"\")\r\n    //http://localhost:3000/passwordReset?token_valid=True&message=CredentialsValid&uidb64=NzhkZTg1YTQtMzBkYy00NTNiLTk4ZGItOGJmZmI5MzJhMTYz&token=agorxd-e8dad31e03a17dbdd0b82efa3f86bb2c\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n        register({name:\"password\"},{required:{value:true,message:\"PleaseFill\"},minLength:{value:6,message:\"Must be 6 Character length\"}})\r\n        register({name:\"confrimpassword\"},{required:{value:true,message:\"PleaseFill\"},minLength:{value:6,message:\"Must be 6 Character length\"}})\r\n    }, );\r\n  \r\n   \r\n    const valid=async (e, { name, value }) => {\r\n      setValue(name, value);\r\n      await trigger({ name });\r\n    }\r\n   \r\n     \r\n      \r\n  \r\n    //redirect\r\n\r\n    //redux\r\n    const sdata=useSelector(state=>state.changepassword)\r\n    const dispatch=useDispatch()\r\n\r\n    const submitTo=(data)=>{\r\n      data[\"token\"]=token\r\n      data[\"uid\"]=uid64\r\n      delete data['confrimpassword'];\r\n      dispatch(PasswordResetAPI(data))\r\n    }\r\n    \r\n\r\n  \r\n\r\n    \r\n\r\n  \r\n     \r\n      return (\r\n        <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 450 }} >\r\n          <Header as='h2' textAlign='center'>\r\n           Password Reset\r\n          </Header>\r\n          <Form size='large' onSubmit={handleSubmit(submitTo)}>\r\n          <Segment stacked>\r\n            <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"password\" fluid icon='lock' iconPosition='left'    placeholder='Password' type='password' onChange={valid} error={errors.password ? true :false} />\r\n            {errors.password && <Label pointing=\"above\" color=\"red\">{errors.password.message}</Label>}\r\n            <Controller defaultValue=\"\" control={control} as={Form.Input}  name=\"confrimpassword\" fluid icon='lock' iconPosition='left'    placeholder='ConfrimPassword' type='password' onChange={valid} error={errors.password ? true :false} />\r\n            {errors.confrimpassword && <Label pointing=\"above\" color=\"red\">{errors.confrimpassword.message}</Label>}\r\n            <Button color='blue' fluid size='large'>\r\n              set Password\r\n            </Button>\r\n            \r\n          </Segment>\r\n        </Form>\r\n          <Message>\r\n            {sdata.message}\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n      )\r\n      }\r\n\r\nexport default Passwordreset\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Home.jsx",["189"],"import React from 'react'\r\nimport { DragDropContext} from 'react-beautiful-dnd'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport {  Grid, Segment, } from 'semantic-ui-react'\r\nimport ItemDrops from './ItemDrops'\r\nimport Toolbox from './Toolbox'\r\nimport {SetDragItem} from '../Redux/DnDItems/action'\r\nimport { items as Tools } from './ListInput'\r\nimport { GetAction } from './actions'\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\nconst atPosition = (ExistingList, destinationIndex,Newdata) => {\r\n    const destClone = Array.from(ExistingList);\r\n    destClone.splice(destinationIndex, 0,Newdata);\r\n    return destClone;\r\n}\r\n\r\n\r\nfunction Home() {\r\n\r\n    const  DnD= useSelector(state => state.dnd)\r\n    const dispatch = useDispatch()\r\n    var actions=new GetAction()\r\n\r\n    const dragEndCall=(result)=>{\r\n        \r\n        let data;\r\n        const { source, destination,draggableId} = result;\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        if(source.droppableId!==destination.droppableId){\r\n            if(draggableId===\"inputemail\")\r\n                {\r\n                    data = actions[String(Tools.find(e=>e.id===draggableId).action)](true);\r\n                }\r\n            else\r\n                {\r\n                    data = actions[String(Tools.find(e => e.id === draggableId).action)]();\r\n                }\r\n               \r\n              const list=atPosition(DnD.fields,destination.index,data)\r\n              dispatch(SetDragItem(list))\r\n                    \r\n        }\r\n        if(source.droppableId===destination.droppableId){\r\n           const reordered= reorder(DnD.fields,source.index,destination.index)\r\n           dispatch(SetDragItem(reordered))\r\n        }\r\n       \r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <DragDropContext onDragEnd={dragEndCall} >\r\n            <Grid celled stackable doubling >\r\n                <Grid.Row  stretched columns={2}> \r\n                    \r\n                <Grid.Column  computer={3} >\r\n                     {/*  toolbox*/ }\r\n                    <Toolbox/>\r\n                 </Grid.Column > \r\n            \r\n                 <Grid.Column  computer={8} >     \r\n                     {/* WA*/ }              \r\n                    \r\n                    <ItemDrops  />\r\n                </Grid.Column>\r\n            \r\n             </Grid.Row>\r\n          </Grid>\r\n          </DragDropContext>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Toolbox.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ListInput.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\ItemDrops.jsx",["190","191","192","193","194","195","196"],"import React,{useReducer} from 'react'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Button, Modal, Segment,Image, Label, Form, Header, } from 'semantic-ui-react'\r\nimport {DeleteAnDrags, RemoveAllDrags, SetDragItem} from '../Redux/DnDItems/action'\r\nimport {ListFields} from './protobuf/Fields_pb'\r\nimport { RenderProto } from './Fields/RenderFields'\r\nimport {EditRenderField} from \"./Fields/EditsFields\";\r\nimport { useForm, useFormContext, FormProvider, Controller } from \"react-hook-form\";\r\nimport Axios from \"../axiosConfig\";\r\n\r\nfunction bufferToBase64(buffer) {\r\n    const binary = String.fromCharCode.apply(null, buffer);\r\n    console.log(window.btoa(binary).length)\r\n    return window.btoa(binary);\r\n}\r\nfunction base64ToArrayBuffer(base64) { // use while rerender\r\n    const binary_string = window.atob(base64);\r\n    const len = binary_string.length;\r\n    const bytes = new Uint8Array(len);\r\n    for (let i = 0; i < len; i++) {\r\n        bytes[i] = binary_string.charCodeAt(i);\r\n    }\r\n    console.log(bytes.buffer)\r\n    return bytes;\r\n}\r\nfunction ItemDrops() {\r\n  const  DnD= useSelector(state => state.dnd)\r\n  const dispatch = useDispatch()\r\n  const onSave=()=>{\r\n   const nlistFields=new ListFields()\r\n   nlistFields.setFieldsList(DnD.fields)\r\n   const serialized=nlistFields.serializeBinary()//save in Database\r\n\r\n      const data={\"data\":bufferToBase64(serialized)}\r\n      console.log(\"poos\",data,serialized)\r\n\r\n     Axios().post(\"dynamicforms/saveform\",data,{\"content-type\": 'multipart/form-data'}).then(e=>{\r\n\r\n   }).catch(er=>{console.log(er)})\r\n  }\r\n\r\n    return (\r\n        <Segment secondary  stacked>\r\n          <Segment>\r\n          <Label size={50} onClick={()=>dispatch(RemoveAllDrags())} color=\"red\" attached=\"top right\" style={{paddingRight:\"18px\",height:\"10Ppx\"}} icon=\"remove\"   removeIcon />\r\n          <Header> Drag Items from toolbar and place here </Header>\r\n          <Label size={50} onClick={()=>onSave()} color=\"green\" attached=\"top left\" style={{paddingRight:\"18px\",height:\"10Ppx\"}} icon=\"save\"   removeIcon />\r\n          </Segment>\r\n          \r\n        <Droppable  isCombineEnabled={true}  style={{height:\"500px\"}} droppableId=\"workingArea\" >\r\n      \r\n        {(provided,snapshot )=>(\r\n      \r\n               <div ref={provided.innerRef} {...provided.droppableProps} isDraggingOver={snapshot.isDraggingOver}  >\r\n                 <Segment  widths=\"equal\"  style={{height:\"max-content\",minHeight:\"450px\", backgroundColor:\"#fff\"}}>\r\n                   \r\n                    <DropList snapshot={snapshot} items={DnD.fields}/>\r\n                 </Segment>\r\n\r\n                {provided.placeholder}\r\n               </div>\r\n                    \r\n              \r\n           )}\r\n       \r\n         </Droppable>\r\n      </Segment>\r\n       \r\n    )\r\n}\r\n\r\nexport default ItemDrops\r\n\r\n\r\n function  DropList({snapshot,items}) {\r\n     const methods = useForm();\r\n  return(\r\n      <FormProvider {...methods} >\r\n    <Form divided={snapshot.isDragging} verticalAlign='middle'>\r\n\r\n        {items.map((item,i)=>{\r\n              \r\n            return (\r\n             \r\n             <Draggable key={item.getUid()} draggableId={item.getUid()} index={i}>\r\n            {(provided, snapshot) => (\r\n                          <div ref={provided.innerRef} key={item.getUid()} \r\n                            {...provided.draggableProps} isDragging={snapshot.isDraggingOver}\r\n                            isDragging={snapshot.isDraggingOver}   style={provided.draggableProps.style}  >\r\n                              \r\n                                 <EachItem item={item} provided={provided}/>\r\n                             \r\n                         </div>\r\n                      \r\n        )}  \r\n       \r\n      </Draggable>\r\n   \r\n      )})}\r\n                  \r\n    </Form>\r\n      </FormProvider>\r\n          )}\r\n\r\n\r\nfunction EachItem({item,provided}) {\r\n\r\n    const nRenderProto = new RenderProto();\r\n    const field = nRenderProto[String(item.getRenderFunc())](item);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n  return (\r\n                               <Segment textAlign=\"left\"  secondary  >\r\n                            \r\n                                 <Label color=\"orange\" attached=\"top left\" ribbon style={{width:\"min-content\"}} icon=\"align justify\" {...provided.dragHandleProps} />\r\n                                \r\n                                 <Label  attached=\"bottom right\" onClick={()=>{dispatch(DeleteAnDrags(item.getUid()))}} color=\"red\" style={{width:\"min-content\"}} icon=\"trash alternate\"  />  <br></br>\r\n                                   <CustomModal item={item}/>\r\n                                   {field}\r\n                                 \r\n                                </Segment >\r\n  )\r\n}\r\n\r\nfunction exampleReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'OPEN':\r\n            return { ...state, isOpen: true }\r\n        case 'CLOSE':\r\n            return { ...state, isOpen: false }\r\n        default:\r\n           return state\r\n    }\r\n}\r\n\r\nconst CustomModal=({item})=>{\r\n\r\n    const[state,dispatches]=useReducer(exampleReducer,{isOpen:false,item:item})\r\n    const nEditRenderField=new EditRenderField()\r\n    const render=nEditRenderField[String(item.getRenderFunc())](item)\r\n\r\n\r\n    return (\r\n        <Modal\r\n            closeIcon\r\n\r\n            open={state.isOpen}\r\n            onClose={() => dispatches({type:\"CLOSE\"})}\r\n            trigger={<Label onClick={()=>dispatches({type:\"OPEN\"})} attached=\"top right\"  color=\"yellow\" style={{width:\"min-content\"}} icon=\"edit\"  /> }>\r\n            <Modal.Header>Make Your Changes</Modal.Header>\r\n            <Modal.Content>\r\n                {render}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n\r\n}\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\PresistedReducers\\PresistedReducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Fields_pb.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\reducers.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\type.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\Redux\\DnDItems\\action.js",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\actions.jsx",["197"],"import { createUUID } from \"./protobuf/utils\"\r\nimport {Field,Radio,Number,Text,validator,Checkbox,DropDown,Date,Label,Range} from \"./protobuf/Fields_pb\"\r\n\r\nexport class GetAction {\r\n    constructor() {\r\n        this.GetRadio = function () {\r\n            const nRadio = new Radio()\r\n            nRadio.setNumofoption(4)\r\n            nRadio.addValues(\"one\")\r\n            nRadio.addValues( \"two\")\r\n            nRadio.addValues(\"three\")\r\n            nRadio.addValues( \"four\")\r\n            nRadio.setLabel(\"enter the question\")\r\n\r\n            const nField = new Field()\r\n            nField.setUid(createUUID())\r\n            nField.setRadio(nRadio)\r\n            nField.setRenderFunc('RenderRadio')\r\n            return nField;\r\n        }\r\n        this.GetNumber=function () {\r\n            const  nNumber=new Number()\r\n            nNumber.setLabel(\"enter the min and max for number Field\");\r\n            nNumber.setMin(0)\r\n            nNumber.setMax(100)\r\n\r\n            const nField = new Field()\r\n            nField.setUid(createUUID())\r\n            nField.setNumber(nNumber)\r\n            nField.setRenderFunc('RenderNumber')\r\n            return nField;\r\n\r\n        }\r\n      this.GetText =function (isEmail) {\r\n            const nText=new Text()\r\n            nText.setLabel(\"Enter your label \")\r\n            var valid=new validator()\r\n            valid.setValidation(\"true\")\r\n            valid.setError(\"not to be empty\")\r\n            var valid1=new validator()\r\n            valid1.setValidation(\"^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$\")\r\n            valid1.setError(\"email id required\")\r\n            nText.getValidMap().set(\"required\",valid);\r\n            if(isEmail)\r\n            nText.getValidMap().set(\"pattern\",valid1)\r\n            nText.setType(\"email\")\r\n\r\n            const nField = new Field()\r\n            nField.setUid(createUUID())\r\n            nField.setText(nText)\r\n            nField.setRenderFunc('RenderText')\r\n            return nField;\r\n\r\n      }\r\n      this.GetCheckBox=function () {\r\n            const nChekBox=new Checkbox()\r\n            nChekBox.setLabel(\"Enter you check box value\")\r\n            const nField = new Field()\r\n            nField.setUid(createUUID())\r\n            nField.setCheckbox(nChekBox)\r\n            nField.setRenderFunc('RenderCheckBox')\r\n            return nField;\r\n\r\n      }\r\n      this.GetDrop=function () {\r\n                const nDropDown=new DropDown()\r\n                nDropDown.setLabel(\"Edit ur own text\")\r\n                nDropDown.addItems(\"one\")\r\n                nDropDown.addItems(\"two\")\r\n                const nField = new Field()\r\n                nField.setUid(createUUID())\r\n                nField.setDropdown(nDropDown)\r\n                nField.setRenderFunc('RenderDropDown')\r\n            return nField;\r\n      }\r\n      this.GetDate=function () {\r\n                const nDate=new Date()\r\n                nDate.setLabel(\"Choose Your Date\")\r\n                const nField = new Field()\r\n                nField.setUid(createUUID())\r\n                nField.setDate(nDate)\r\n                nField.setRenderFunc('RenderDate')\r\n          return nField;\r\n\r\n      }\r\n      this.GetLabel=function () {\r\n            const  nlabel =new Label()\r\n            nlabel.setValue(\"Enter some label text\")\r\n            const nField = new Field()\r\n            nField.setUid(createUUID())\r\n            nField.setLabel(nlabel)\r\n            nField.setRenderFunc('RenderLabel')\r\n\r\n        return nField;\r\n      }\r\n      this.GetRange=function(){\r\n        const nRange =new Range()\r\n        nRange.setFrom(0)\r\n        nRange.setTo(100)\r\n        nRange.setMultiples(1)\r\n        nRange.setLabel(\"Enter the label or text for Range\")\r\n        const nField = new Field()\r\n        nField.setUid(createUUID())\r\n        nField.setRange(nRange)\r\n        nField.setRenderFunc('RenderRange')\r\n    \r\n        return nField;\r\n      }\r\n\r\n    }\r\n}\r\n\r\n\r\n","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\Utils.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\protobuf\\utils.jsx",[],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\RenderFields.jsx",["198","199","200","201","202"],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\ConnectForm.js",["203","204"],"import React, { memo, } from \"react\";\r\nimport { useFormContext} from \"react-hook-form\";\r\nexport const ConnectForm = ({ children }) => {\r\n    const methods = useFormContext();\r\n\r\n    return children({ ...methods });\r\n};","F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\EditsFields.jsx",["205","206"],"F:\\frontend\\dynamic_forms\\src\\Components\\CreateForms\\Fields\\MemoEditFields.jsx",["207","208"],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":3,"column":36,"nodeType":"215","messageId":"216","endLine":3,"endColumn":46},{"ruleId":"213","severity":1,"message":"217","line":2,"column":52,"nodeType":"215","messageId":"216","endLine":2,"endColumn":59},{"ruleId":"213","severity":1,"message":"218","line":2,"column":76,"nodeType":"215","messageId":"216","endLine":2,"endColumn":81},{"ruleId":"213","severity":1,"message":"219","line":38,"column":7,"nodeType":"215","messageId":"216","endLine":38,"endColumn":27},{"ruleId":"213","severity":1,"message":"220","line":3,"column":61,"nodeType":"215","messageId":"216","endLine":3,"endColumn":67},{"ruleId":"213","severity":1,"message":"221","line":25,"column":11,"nodeType":"215","messageId":"216","endLine":25,"endColumn":16},{"ruleId":"213","severity":1,"message":"222","line":26,"column":11,"nodeType":"215","messageId":"216","endLine":26,"endColumn":19},{"ruleId":"213","severity":1,"message":"223","line":2,"column":26,"nodeType":"215","messageId":"216","endLine":2,"endColumn":34},{"ruleId":"213","severity":1,"message":"220","line":3,"column":61,"nodeType":"215","messageId":"216","endLine":3,"endColumn":67},{"ruleId":"213","severity":1,"message":"224","line":6,"column":8,"nodeType":"215","messageId":"216","endLine":6,"endColumn":13},{"ruleId":"213","severity":1,"message":"225","line":16,"column":11,"nodeType":"215","messageId":"216","endLine":16,"endColumn":21},{"ruleId":"213","severity":1,"message":"226","line":17,"column":11,"nodeType":"215","messageId":"216","endLine":17,"endColumn":18},{"ruleId":"213","severity":1,"message":"227","line":4,"column":17,"nodeType":"215","messageId":"216","endLine":4,"endColumn":24},{"ruleId":"213","severity":1,"message":"228","line":4,"column":9,"nodeType":"215","messageId":"216","endLine":4,"endColumn":15},{"ruleId":"213","severity":1,"message":"218","line":4,"column":32,"nodeType":"215","messageId":"216","endLine":4,"endColumn":37},{"ruleId":"213","severity":1,"message":"229","line":5,"column":40,"nodeType":"215","messageId":"216","endLine":5,"endColumn":51},{"ruleId":"213","severity":1,"message":"230","line":9,"column":19,"nodeType":"215","messageId":"216","endLine":9,"endColumn":33},{"ruleId":"213","severity":1,"message":"231","line":9,"column":49,"nodeType":"215","messageId":"216","endLine":9,"endColumn":59},{"ruleId":"213","severity":1,"message":"232","line":17,"column":10,"nodeType":"215","messageId":"216","endLine":17,"endColumn":29},{"ruleId":"233","severity":1,"message":"234","line":90,"column":29,"nodeType":"235","endLine":90,"endColumn":65},{"ruleId":"236","severity":1,"message":"237","line":22,"column":28,"nodeType":"238","messageId":"239","endLine":22,"endColumn":40},{"ruleId":"213","severity":1,"message":"240","line":1,"column":15,"nodeType":"215","messageId":"216","endLine":1,"endColumn":19},{"ruleId":"213","severity":1,"message":"241","line":2,"column":9,"nodeType":"215","messageId":"216","endLine":2,"endColumn":17},{"ruleId":"213","severity":1,"message":"242","line":2,"column":32,"nodeType":"215","messageId":"216","endLine":2,"endColumn":37},{"ruleId":"213","severity":1,"message":"227","line":2,"column":39,"nodeType":"215","messageId":"216","endLine":2,"endColumn":46},{"ruleId":"213","severity":1,"message":"230","line":4,"column":9,"nodeType":"215","messageId":"216","endLine":4,"endColumn":23},{"ruleId":"213","severity":1,"message":"243","line":1,"column":8,"nodeType":"215","messageId":"216","endLine":1,"endColumn":13},{"ruleId":"213","severity":1,"message":"240","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":21},{"ruleId":"213","severity":1,"message":"228","line":1,"column":8,"nodeType":"215","messageId":"216","endLine":1,"endColumn":14},{"ruleId":"213","severity":1,"message":"240","line":2,"column":9,"nodeType":"215","messageId":"216","endLine":2,"endColumn":13},{"ruleId":"213","severity":1,"message":"244","line":1,"column":22,"nodeType":"215","messageId":"216","endLine":1,"endColumn":32},{"ruleId":"213","severity":1,"message":"228","line":5,"column":46,"nodeType":"215","messageId":"216","endLine":5,"endColumn":52},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Message' is defined but never used.","'Image' is defined but never used.","'passwordResetFailure' is assigned a value but never used.","'Loader' is defined but never used.","'sdata' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'valid_cred' is assigned a value but never used.","'message' is assigned a value but never used.","'Segment' is defined but never used.","'Button' is defined but never used.","'SetDragItem' is defined but never used.","'useFormContext' is defined but never used.","'Controller' is defined but never used.","'base64ToArrayBuffer' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","'memo' is defined but never used.","'Checkbox' is defined but never used.","'Radio' is defined but never used.","'React' is defined but never used.","'useReducer' is defined but never used.","no-global-assign","no-unsafe-negation"]